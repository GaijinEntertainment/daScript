Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1451 conflicts: 1 reduce/reduce
State 1544 conflicts: 1 reduce/reduce
State 1571 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 optional_not_required: %empty
   27                      | '!' "inscope"

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   29 character_sequence: STRING_CHARACTER
   30                   | STRING_CHARACTER_ESC
   31                   | character_sequence STRING_CHARACTER
   32                   | character_sequence STRING_CHARACTER_ESC

   33 string_constant: "start of the string" character_sequence "end of the string"
   34                | "start of the string" "end of the string"

   35 format_string: %empty
   36              | format_string STRING_CHARACTER

   37 optional_format_string: %empty

   38 $@1: %empty

   39 optional_format_string: ':' $@1 format_string

   40 string_builder_body: %empty
   41                    | string_builder_body character_sequence
   42                    | string_builder_body "{" expr optional_format_string "}"

   43 string_builder: "start of the string" string_builder_body "end of the string"

   44 reader_character_sequence: STRING_CHARACTER
   45                          | reader_character_sequence STRING_CHARACTER

   46 $@2: %empty

   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   48 options_declaration: "options" annotation_argument_list

   49 require_declaration: "require" require_module

   50 require_module_name: "name"
   51                    | '%' require_module_name
   52                    | require_module_name '.' "name"
   53                    | require_module_name '/' "name"

   54 require_module: require_module_name is_public_module
   55               | require_module_name "as" "name" is_public_module

   56 is_public_module: %empty
   57                 | "public"

   58 expect_declaration: "expect" expect_list

   59 expect_list: expect_error
   60            | expect_list ',' expect_error

   61 expect_error: "integer constant"
   62             | "integer constant" ':' "integer constant"

   63 expression_label: "label" "integer constant" ':'

   64 expression_goto: "goto" "label" "integer constant"
   65                | "goto" expr

   66 elif_or_static_elif: "elif"
   67                    | "static_elif"

   68 emit_semis: "new line, semicolon"
   69           | emit_semis "new line, semicolon"

   70 optional_emit_semis: %empty
   71                    | emit_semis

   72 expression_else: %empty
   73                | "else" optional_emit_semis expression_else_block
   74                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else

   75 if_or_static_if: "if"
   76                | "static_if"

   77 expression_else_one_liner: %empty
   78                          | "else" expression_if_one_liner

   79 expression_if_one_liner: expr
   80                        | expression_return
   81                        | expression_yield
   82                        | expression_break
   83                        | expression_continue

   84 semis: SEMICOLON
   85      | semis SEMICOLON

   86 optional_semis: %empty
   87               | semis

   88 $@3: %empty

   89 $@4: %empty

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   91 $@5: %empty

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   93 $@6: %empty

   94 $@7: %empty

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally

   96 $@8: %empty

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON

   98 $@9: %empty

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

  101 for_variable_name_with_pos_list: "name"
  102                                | "$i" '(' expr ')'
  103                                | "name" "aka" "name"
  104                                | '(' tuple_expansion ')'
  105                                | for_variable_name_with_pos_list ',' "name"
  106                                | for_variable_name_with_pos_list ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' '(' tuple_expansion ')'

  108 $@10: %empty

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block

  111 $@11: %empty

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block

  113 $@12: %empty

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block

  115 expression_with_alias: "assume" "name" '=' expr

  116 annotation_argument_value: string_constant
  117                          | "name"
  118                          | "integer constant"
  119                          | "floating point constant"
  120                          | "true"
  121                          | "false"

  122 annotation_argument_value_list: annotation_argument_value
  123                               | annotation_argument_value_list ',' annotation_argument_value

  124 annotation_argument_name: "name"
  125                         | "type"
  126                         | "in"

  127 annotation_argument: annotation_argument_name '=' string_constant
  128                    | annotation_argument_name '=' "name"
  129                    | annotation_argument_name '=' "integer constant"
  130                    | annotation_argument_name '=' "floating point constant"
  131                    | annotation_argument_name '=' "true"
  132                    | annotation_argument_name '=' "false"
  133                    | annotation_argument_name
  134                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  135 annotation_argument_list: annotation_argument
  136                         | annotation_argument_list ',' annotation_argument

  137 metadata_argument_list: '@' annotation_argument optional_emit_semis
  138                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  139 annotation_declaration_name: name_in_namespace
  140                            | "require"
  141                            | "private"
  142                            | "template"

  143 annotation_declaration_basic: annotation_declaration_name
  144                             | annotation_declaration_name '(' annotation_argument_list ')'

  145 annotation_declaration: annotation_declaration_basic
  146                       | '!' annotation_declaration
  147                       | annotation_declaration "&&" annotation_declaration
  148                       | annotation_declaration "||" annotation_declaration
  149                       | annotation_declaration "^^" annotation_declaration
  150                       | '(' annotation_declaration ')'
  151                       | "|>" annotation_declaration

  152 annotation_list: annotation_declaration
  153                | annotation_list ',' annotation_declaration

  154 optional_annotation_list: %empty
  155                         | '[' annotation_list ']'

  156 optional_annotation_list_with_emit_semis: %empty
  157                                         | '[' annotation_list ']' optional_emit_semis

  158 optional_function_argument_list: %empty
  159                                | '(' ')'
  160                                | '(' function_argument_list ')'

  161 optional_function_type: %empty
  162                       | ':' type_declaration

  163 function_name: "name"
  164              | "operator" '!'
  165              | "operator" '~'
  166              | "operator" "+="
  167              | "operator" "-="
  168              | "operator" "*="
  169              | "operator" "/="
  170              | "operator" "%="
  171              | "operator" "&="
  172              | "operator" "|="
  173              | "operator" "^="
  174              | "operator" "&&="
  175              | "operator" "||="
  176              | "operator" "^^="
  177              | "operator" "&&"
  178              | "operator" "||"
  179              | "operator" "^^"
  180              | "operator" '+'
  181              | "operator" '-'
  182              | "operator" '*'
  183              | "operator" '/'
  184              | "operator" '%'
  185              | "operator" '<'
  186              | "operator" '>'
  187              | "operator" ".."
  188              | "operator" "=="
  189              | "operator" "!="
  190              | "operator" "<="
  191              | "operator" ">="
  192              | "operator" '&'
  193              | "operator" '|'
  194              | "operator" '^'
  195              | "++" "operator"
  196              | "--" "operator"
  197              | "operator" "++"
  198              | "operator" "--"
  199              | "operator" "<<"
  200              | "operator" ">>"
  201              | "operator" "<<="
  202              | "operator" ">>="
  203              | "operator" "<<<"
  204              | "operator" ">>>"
  205              | "operator" "<<<="
  206              | "operator" ">>>="
  207              | "operator" '[' ']'
  208              | "operator" "?[" ']'
  209              | "operator" '.'
  210              | "operator" "?."
  211              | "operator" '.' "name"
  212              | "operator" '.' "name" ":="
  213              | "operator" "?." "name"
  214              | "operator" ":="
  215              | "operator" "delete"
  216              | "operator" "??"
  217              | "operator" "is"
  218              | "operator" "as"
  219              | "operator" "is" "name"
  220              | "operator" "as" "name"
  221              | "operator" '?' "as"
  222              | "operator" '?' "as" "name"
  223              | "bool"
  224              | "string"
  225              | "int"
  226              | "int2"
  227              | "int3"
  228              | "int4"
  229              | "uint"
  230              | "uint2"
  231              | "uint3"
  232              | "uint4"
  233              | "float"
  234              | "float2"
  235              | "float3"
  236              | "float4"
  237              | "range"
  238              | "urange"
  239              | "range64"
  240              | "urange64"
  241              | "int64"
  242              | "uint64"
  243              | "double"
  244              | "int8"
  245              | "uint8"
  246              | "int16"
  247              | "uint16"

  248 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  249 optional_public_or_private_function: %empty
  250                                    | "private"
  251                                    | "public"

  252 function_declaration_header: function_name optional_function_argument_list optional_function_type

  253 $@13: %empty

  254 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block

  255 expression_block_finally: %empty

  256 $@14: %empty

  257 $@15: %empty

  258 expression_block_finally: "finally" $@14 '{' expressions $@15 '}'

  259 $@16: %empty

  260 $@17: %empty

  261 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally

  262 expr_call_pipe: expr_call expr_full_block_assumed_piped

  263 expression_any: SEMICOLON
  264               | expr_assign SEMICOLON
  265               | expression_delete SEMICOLON
  266               | expression_let
  267               | expression_while_loop
  268               | expression_unsafe
  269               | expression_with
  270               | expression_with_alias SEMICOLON
  271               | expression_for_loop
  272               | expression_break SEMICOLON
  273               | expression_continue SEMICOLON
  274               | expression_return SEMICOLON
  275               | expression_yield SEMICOLON
  276               | expression_if_then_else
  277               | expression_if_then_else_oneliner
  278               | expression_try_catch
  279               | expression_label SEMICOLON
  280               | expression_goto SEMICOLON
  281               | "pass" SEMICOLON

  282 expressions: %empty
  283            | expressions expression_any
  284            | expressions error

  285 optional_expr_list: %empty
  286                   | expr_list optional_comma

  287 optional_expr_map_tuple_list: %empty
  288                             | expr_map_tuple_list optional_comma

  289 type_declaration_no_options_list: type_declaration
  290                                 | type_declaration_no_options_list c_or_s type_declaration

  291 name_in_namespace: "name"
  292                  | "name" "::" "name"
  293                  | "::" "name"

  294 expression_delete: "delete" expr
  295                  | "delete" "explicit" expr

  296 $@18: %empty

  297 $@19: %empty

  298 new_type_declaration: '<' $@18 type_declaration '>' $@19
  299                     | structure_type_declaration

  300 expr_new: "new" new_type_declaration
  301         | "new" new_type_declaration '(' use_initializer ')'
  302         | "new" new_type_declaration '(' expr_list ')'
  303         | "new" new_type_declaration '(' make_struct_single ')'
  304         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  305         | "new" make_decl

  306 expression_break: "break"

  307 expression_continue: "continue"

  308 expression_return: "return"
  309                  | "return" expr
  310                  | "return" "<-" expr

  311 expression_yield: "yield" expr
  312                 | "yield" "<-" expr

  313 expression_try_catch: "try" expression_block "recover" expression_block

  314 kwd_let_var_or_nothing: "let"
  315                       | "var"
  316                       | %empty

  317 kwd_let: "let"
  318        | "var"

  319 optional_in_scope: "inscope"
  320                  | %empty

  321 tuple_expansion: "name"
  322                | tuple_expansion ',' "name"

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  324                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  325 expression_let: kwd_let optional_in_scope let_variable_declaration
  326               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  327               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  328 $@20: %empty

  329 $@21: %empty

  330 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr

  331 $@22: %empty

  332 $@23: %empty

  333 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr

  334 $@24: %empty

  335 $@25: %empty

  336 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr

  337 $@26: %empty

  338 $@27: %empty

  339 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27

  340 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  341               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  342               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  343 expr_list: expr
  344          | expr_list ',' expr

  345 block_or_simple_block: expression_block
  346                      | "=>" expr
  347                      | "=>" "<-" expr

  348 block_or_lambda: '$'
  349                | '@'
  350                | '@' '@'

  351 capture_entry: '&' "name"
  352              | '=' "name"
  353              | "<-" "name"
  354              | ":=" "name"
  355              | "name" '(' "name" ')'

  356 capture_list: capture_entry
  357             | capture_list ',' capture_entry

  358 optional_capture_list: %empty
  359                      | "capture" '(' capture_list ')'

  360 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  361 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  362                              | '{' expressions '}'

  363 expr_numeric_const: "integer constant"
  364                   | "unsigned integer constant"
  365                   | "long integer constant"
  366                   | "unsigned long integer constant"
  367                   | "unsigned int8 constant"
  368                   | "floating point constant"
  369                   | "double constant"

  370 expr_assign: expr
  371            | expr '=' expr
  372            | expr "<-" expr
  373            | expr ":=" expr
  374            | expr "&=" expr
  375            | expr "|=" expr
  376            | expr "^=" expr
  377            | expr "&&=" expr
  378            | expr "||=" expr
  379            | expr "^^=" expr
  380            | expr "+=" expr
  381            | expr "-=" expr
  382            | expr "*=" expr
  383            | expr "/=" expr
  384            | expr "%=" expr
  385            | expr "<<=" expr
  386            | expr ">>=" expr
  387            | expr "<<<=" expr
  388            | expr ">>>=" expr

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  390                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  391 expr_method_call: expr "->" "name" '(' ')'
  392                 | expr "->" "name" '(' expr_list ')'

  393 func_addr_name: name_in_namespace
  394               | "$i" '(' expr ')'

  395 func_addr_expr: '@' '@' func_addr_name

  396 $@28: %empty

  397 $@29: %empty

  398 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name

  399 $@30: %empty

  400 $@31: %empty

  401 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

  402 expr_field: expr '.' "name"
  403           | expr '.' '.' "name"
  404           | expr '.' "name" '(' ')'
  405           | expr '.' "name" '(' expr_list ')'
  406           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr '.' basic_type_declaration '(' ')'
  408           | expr '.' basic_type_declaration '(' expr_list ')'

  409 $@32: %empty

  410 $@33: %empty

  411 expr_field: expr '.' $@32 error $@33

  412 expr_call: name_in_namespace '(' ')'
  413          | name_in_namespace '(' "uninitialized" ')'
  414          | name_in_namespace '(' make_struct_single ')'
  415          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  416          | name_in_namespace '(' expr_list ')'
  417          | basic_type_declaration '(' ')'
  418          | basic_type_declaration '(' expr_list ')'

  419 expr: "null"
  420     | name_in_namespace
  421     | expr_numeric_const
  422     | expr_reader
  423     | string_builder
  424     | make_decl
  425     | "true"
  426     | "false"
  427     | expr_field
  428     | expr_mtag
  429     | '!' expr
  430     | '~' expr
  431     | '+' expr
  432     | '-' expr
  433     | expr "<<" expr
  434     | expr ">>" expr
  435     | expr "<<<" expr
  436     | expr ">>>" expr
  437     | expr '+' expr
  438     | expr '-' expr
  439     | expr '*' expr
  440     | expr '/' expr
  441     | expr '%' expr
  442     | expr '<' expr
  443     | expr '>' expr
  444     | expr "==" expr
  445     | expr "!=" expr
  446     | expr "<=" expr
  447     | expr ">=" expr
  448     | expr '&' expr
  449     | expr '|' expr
  450     | expr '^' expr
  451     | expr "&&" expr
  452     | expr "||" expr
  453     | expr "^^" expr
  454     | expr ".." expr
  455     | "++" expr
  456     | "--" expr
  457     | expr "++"
  458     | expr "--"
  459     | '(' expr_list optional_comma ')'
  460     | '(' make_struct_single ')'
  461     | expr '[' expr ']'
  462     | expr '.' '[' expr ']'
  463     | expr "?[" expr ']'
  464     | expr '.' "?[" expr ']'
  465     | expr "?." "name"
  466     | expr '.' "?." "name"
  467     | func_addr_expr
  468     | expr_call
  469     | '*' expr
  470     | "deref" '(' expr ')'
  471     | "addr" '(' expr ')'
  472     | expr_generator
  473     | expr "??" expr
  474     | expr '?' expr ':' expr

  475 $@34: %empty

  476 $@35: %empty

  477 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr "is" basic_type_declaration
  479     | expr "is" "name"
  480     | expr "as" "name"

  481 $@36: %empty

  482 $@37: %empty

  483 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr "as" basic_type_declaration
  485     | expr '?' "as" "name"

  486 $@38: %empty

  487 $@39: %empty

  488 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr '?' "as" basic_type_declaration
  490     | expr_type_info
  491     | expr_type_decl
  492     | expr_cast
  493     | expr_new
  494     | expr_method_call
  495     | expr_named_call
  496     | expr_full_block
  497     | expr "<|" expr
  498     | expr "|>" expr
  499     | expr "|>" basic_type_declaration
  500     | expr_call_pipe
  501     | "unsafe" '(' expr ')'

  502 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  503               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  504               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  505 expr_mtag: "$$" '(' expr ')'
  506          | "$i" '(' expr ')'
  507          | "$v" '(' expr ')'
  508          | "$b" '(' expr ')'
  509          | "$a" '(' expr ')'
  510          | "..."
  511          | "$c" '(' expr ')' '(' ')'
  512          | "$c" '(' expr ')' '(' expr_list ')'
  513          | expr '.' "$f" '(' expr ')'
  514          | expr "?." "$f" '(' expr ')'
  515          | expr '.' '.' "$f" '(' expr ')'
  516          | expr '.' "?." "$f" '(' expr ')'
  517          | expr "as" "$f" '(' expr ')'
  518          | expr '?' "as" "$f" '(' expr ')'
  519          | expr "is" "$f" '(' expr ')'
  520          | '@' '@' "$c" '(' expr ')'

  521 optional_field_annotation: %empty
  522                          | metadata_argument_list

  523 optional_override: %empty
  524                  | "override"
  525                  | "sealed"

  526 optional_constant: %empty
  527                  | "const"

  528 optional_public_or_private_member_variable: %empty
  529                                           | "public"
  530                                           | "private"

  531 optional_static_member_variable: %empty
  532                                | "static"

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  534 struct_variable_declaration_list: %empty
  535                                 | struct_variable_declaration_list "new line, semicolon"

  536 $@40: %empty

  537 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON

  538 $@41: %empty

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON

  540 $@42: %empty

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

  542 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  543 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  544                                   | "$a" '(' expr ')'

  545 function_argument_list: function_argument_declaration_no_type
  546                       | function_argument_declaration_type
  547                       | function_argument_declaration_no_type ';' function_argument_list
  548                       | function_argument_declaration_type ';' function_argument_list
  549                       | function_argument_declaration_type ',' function_argument_list

  550 tuple_type: type_declaration
  551           | "name" ':' type_declaration

  552 tuple_type_list: tuple_type
  553                | tuple_type_list c_or_s tuple_type

  554 tuple_alias_type_list: %empty
  555                      | tuple_type
  556                      | tuple_alias_type_list semis tuple_type

  557 variant_type: "name" ':' type_declaration

  558 variant_type_list: variant_type
  559                  | variant_type_list c_or_s variant_type

  560 variant_alias_type_list: %empty
  561                        | variant_type
  562                        | variant_alias_type_list semis variant_type

  563 copy_or_move: '='
  564             | "<-"

  565 variable_declaration_no_type: variable_name_with_pos_list
  566                             | variable_name_with_pos_list '&'
  567                             | variable_name_with_pos_list copy_or_move expr

  568 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  569                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  570 variable_declaration: variable_declaration_type
  571                     | variable_declaration_no_type

  572 copy_or_move_or_clone: '='
  573                      | "<-"
  574                      | ":="

  575 optional_ref: %empty
  576             | '&'

  577 let_variable_name_with_pos_list: "name"
  578                                | "$i" '(' expr ')'
  579                                | "name" "aka" "name"
  580                                | let_variable_name_with_pos_list ',' "name"
  581                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  582 global_let_variable_name_with_pos_list: "name"
  583                                       | global_let_variable_name_with_pos_list ',' "name"

  584 variable_declaration_list: %empty
  585                          | variable_declaration_list SEMICOLON
  586                          | variable_declaration_list let_variable_declaration

  587 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  588                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  589                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  590 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  591                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  592                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  593 optional_shared: %empty
  594                | "shared"

  595 optional_public_or_private_variable: %empty
  596                                    | "private"
  597                                    | "public"

  598 global_variable_declaration_list: %empty
  599                                 | global_variable_declaration_list SEMICOLON

  600 $@43: %empty

  601 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration

  602 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  603 $@44: %empty

  604 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

  605 enum_expression: "name"
  606                | "name" '=' expr

  607 commas: COMMA
  608       | commas COMMA

  609 enum_list: %empty
  610          | enum_expression
  611          | enum_list commas enum_expression

  612 optional_public_or_private_alias: %empty
  613                                 | "private"
  614                                 | "public"

  615 $@45: %empty

  616 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration

  617 alias_declaration: "typedef" single_alias SEMICOLON

  618 optional_public_or_private_enum: %empty
  619                                | "private"
  620                                | "public"

  621 enum_name: "name"

  622 optional_enum_basic_type_declaration: %empty
  623                                     | ':' enum_basic_type_declaration

  624 optional_commas: %empty
  625                | commas

  626 emit_commas: "new line, comma"
  627            | emit_commas "new line, comma"

  628 optional_emit_commas: %empty
  629                     | emit_commas

  630 $@46: %empty

  631 $@47: %empty

  632 $@48: %empty

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

  634 optional_structure_parent: %empty
  635                          | ':' name_in_namespace

  636 optional_sealed: %empty
  637                | "sealed"

  638 structure_name: optional_sealed "name" optional_structure_parent

  639 class_or_struct: "class"
  640                | "struct"
  641                | "template" "class"
  642                | "template" "struct"

  643 optional_public_or_private_structure: %empty
  644                                     | "private"
  645                                     | "public"

  646 optional_struct_variable_declaration_list: ';'
  647                                          | '{' struct_variable_declaration_list '}'

  648 $@49: %empty

  649 $@50: %empty

  650 $@51: %empty

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

  652 variable_name_with_pos_list: "name"
  653                            | "$i" '(' expr ')'
  654                            | "name" "aka" "name"
  655                            | variable_name_with_pos_list ',' "name"
  656                            | variable_name_with_pos_list ',' "name" "aka" "name"

  657 basic_type_declaration: "bool"
  658                       | "string"
  659                       | "int"
  660                       | "int8"
  661                       | "int16"
  662                       | "int64"
  663                       | "int2"
  664                       | "int3"
  665                       | "int4"
  666                       | "uint"
  667                       | "uint8"
  668                       | "uint16"
  669                       | "uint64"
  670                       | "uint2"
  671                       | "uint3"
  672                       | "uint4"
  673                       | "float"
  674                       | "float2"
  675                       | "float3"
  676                       | "float4"
  677                       | "void"
  678                       | "range"
  679                       | "urange"
  680                       | "range64"
  681                       | "urange64"
  682                       | "double"
  683                       | "bitfield"

  684 enum_basic_type_declaration: "int"
  685                            | "int8"
  686                            | "int16"
  687                            | "uint"
  688                            | "uint8"
  689                            | "uint16"
  690                            | "int64"
  691                            | "uint64"

  692 structure_type_declaration: name_in_namespace

  693 auto_type_declaration: "auto"
  694                      | "auto" '(' "name" ')'
  695                      | "$t" '(' expr ')'

  696 bitfield_bits: "name"
  697              | bitfield_bits ';' "name"

  698 bitfield_alias_bits: %empty
  699                    | "name"
  700                    | bitfield_alias_bits commas "name"

  701 $@52: %empty

  702 $@53: %empty

  703 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53

  704 c_or_s: COMMA
  705       | SEMICOLON

  706 table_type_pair: type_declaration
  707                | type_declaration c_or_s type_declaration

  708 dim_list: '[' expr ']'
  709         | '[' ']'
  710         | dim_list '[' expr ']'
  711         | dim_list '[' ']'

  712 type_declaration_no_options: type_declaration_no_options_no_dim
  713                            | type_declaration_no_options_no_dim dim_list

  714 type_declaration_no_options_no_dim: basic_type_declaration
  715                                   | auto_type_declaration
  716                                   | bitfield_type_declaration
  717                                   | structure_type_declaration

  718 $@54: %empty

  719 $@55: %empty

  720 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55
  721                                   | "typedecl" '(' expr ')'
  722                                   | '$' name_in_namespace '(' optional_expr_list ')'

  723 $@56: %empty

  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  725                                   | type_declaration_no_options '-' '[' ']'
  726                                   | type_declaration_no_options "explicit"
  727                                   | type_declaration_no_options "const"
  728                                   | type_declaration_no_options '-' "const"
  729                                   | type_declaration_no_options '&'
  730                                   | type_declaration_no_options '-' '&'
  731                                   | type_declaration_no_options '#'
  732                                   | type_declaration_no_options "implicit"
  733                                   | type_declaration_no_options '-' '#'
  734                                   | type_declaration_no_options "==" "const"
  735                                   | type_declaration_no_options "==" '&'
  736                                   | type_declaration_no_options '?'

  737 $@57: %empty

  738 $@58: %empty

  739 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58
  740                                   | type_declaration_no_options "??"

  741 $@59: %empty

  742 $@60: %empty

  743 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60

  744 $@61: %empty

  745 $@62: %empty

  746 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62

  747 $@63: %empty

  748 $@64: %empty

  749 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64
  750                                   | "block"

  751 $@65: %empty

  752 $@66: %empty

  753 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66

  754 $@67: %empty

  755 $@68: %empty

  756 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  757                                   | "function"

  758 $@69: %empty

  759 $@70: %empty

  760 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70

  761 $@71: %empty

  762 $@72: %empty

  763 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72
  764                                   | "lambda"

  765 $@73: %empty

  766 $@74: %empty

  767 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74

  768 $@75: %empty

  769 $@76: %empty

  770 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76

  771 $@77: %empty

  772 $@78: %empty

  773 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78

  774 $@79: %empty

  775 $@80: %empty

  776 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80

  777 type_declaration: type_declaration_no_options
  778                 | type_declaration '|' type_declaration_no_options
  779                 | type_declaration '|' '#'

  780 $@81: %empty

  781 $@82: %empty

  782 $@83: %empty

  783 $@84: %empty

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

  785 $@85: %empty

  786 $@86: %empty

  787 $@87: %empty

  788 $@88: %empty

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

  790 $@89: %empty

  791 $@90: %empty

  792 $@91: %empty

  793 $@92: %empty

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

  795 make_decl: make_struct_decl
  796          | make_dim_decl
  797          | make_table_decl
  798          | array_comprehension
  799          | make_tuple_call

  800 make_struct_fields: "name" copy_or_move expr
  801                   | "name" ":=" expr
  802                   | make_struct_fields ',' "name" copy_or_move expr
  803                   | make_struct_fields ',' "name" ":=" expr
  804                   | "$f" '(' expr ')' copy_or_move expr
  805                   | "$f" '(' expr ')' ":=" expr
  806                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  808 make_variant_dim: %empty
  809                 | make_struct_fields

  810 make_struct_single: make_struct_fields optional_comma

  811 make_struct_dim_list: '(' make_struct_fields ')'
  812                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  813 make_struct_dim_decl: make_struct_fields
  814                     | make_struct_dim_list optional_comma

  815 optional_make_struct_dim_decl: make_struct_dim_decl
  816                              | %empty

  817 use_initializer: %empty
  818                | "uninitialized"

  819 $@93: %empty

  820 $@94: %empty

  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  822 $@95: %empty

  823 $@96: %empty

  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  825 $@97: %empty

  826 $@98: %empty

  827 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

  828 $@99: %empty

  829 $@100: %empty

  830 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer

  831 make_map_tuple: expr "=>" expr
  832               | expr

  833 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  834 $@101: %empty

  835 $@102: %empty

  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  837 make_dim_decl: '[' optional_expr_list ']'

  838 $@103: %empty

  839 $@104: %empty

  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  841 $@105: %empty

  842 $@106: %empty

  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

  844 $@107: %empty

  845 $@108: %empty

  846 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  847              | "array" '(' expr_list optional_comma ')'

  848 $@109: %empty

  849 $@110: %empty

  850 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'
  851              | "fixed_array" '(' expr_list optional_comma ')'

  852 $@111: %empty

  853 $@112: %empty

  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

  855 expr_map_tuple_list: make_map_tuple
  856                    | expr_map_tuple_list ',' make_map_tuple

  857 $@113: %empty

  858 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  859                | "table" '(' expr_map_tuple_list optional_comma ')'
  860                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  861                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  862 array_comprehension_where: %empty
  863                          | ';' "where" expr

  864 optional_comma: %empty
  865               | ','

  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  867                    | '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  868                    | '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 27 146 164 429
    '#' (35) 731 733 779
    '$' (36) 24 348 722 724
    '%' (37) 47 51 184 441
    '&' (38) 192 351 448 566 576 729 730 735
    '(' (40) 74 99 100 102 104 107 109 112 114 134 144 150 159 160 301 302 303 304 323 324 340 341 342 355 359 389 390 391 392 394 404 405 406 407 408 412 413 414 415 416 417 418 459 460 470 471 501 502 503 505 506 507 508 509 511 512 513 514 515 516 517 518 519 520 544 578 653 694 695 721 722 724 804 805 806 807 811 812 821 824 827 833 836 840 843 846 847 850 851 854 859 860 861 866 867 868
    ')' (41) 74 99 100 102 104 107 109 112 114 134 144 150 159 160 301 302 303 304 323 324 340 341 342 355 359 389 390 391 392 394 404 405 406 407 408 412 413 414 415 416 417 418 459 460 470 471 501 502 503 505 506 507 508 509 511 512 513 514 515 516 517 518 519 520 544 578 653 694 695 721 722 724 804 805 806 807 811 812 821 824 827 833 836 840 843 846 847 850 851 854 859 860 861 866 867 868
    '*' (42) 182 439 469
    '+' (43) 180 431 437
    ',' (44) 16 60 105 106 107 123 136 153 322 344 357 390 549 580 581 583 655 656 802 803 806 807 812 856 865
    '-' (45) 181 432 438 725 728 730 733
    '.' (46) 52 209 211 212 402 403 404 405 406 407 408 411 462 464 466 513 515 516
    '/' (47) 53 183 440
    ':' (58) 39 62 63 162 323 474 551 557 568 569 587 588 590 591 623 635
    ';' (59) 18 547 548 646 697 863 866 867 868
    '<' (60) 185 298 330 333 336 339 341 342 398 401 442 477 483 488 502 503 504 703 720 724 739 743 746 749 753 756 760 763 767 770 773 776 821 824 827 830 836 840 843 846 850 854 860 861
    '=' (61) 115 127 128 129 130 131 132 134 352 371 563 572 606 616
    '>' (62) 186 298 330 333 336 339 341 342 398 401 443 477 483 488 502 503 504 703 720 724 739 743 746 749 753 756 760 763 767 770 773 776 821 824 827 830 836 840 843 846 850 854 860 861
    '?' (63) 221 222 474 485 488 489 518 736
    '@' (64) 137 138 349 350 395 398 401 520
    '[' (91) 155 157 207 389 390 406 461 462 708 709 710 711 725 837 866 867
    ']' (93) 155 157 207 208 389 390 406 461 462 463 464 708 709 710 711 725 837 866 867
    '^' (94) 194 450
    '{' (123) 90 95 258 261 327 362 602 633 647 784 789 794 858 868
    '|' (124) 193 449 778 779
    '}' (125) 90 95 258 261 327 362 602 633 647 784 789 794 858 868
    '~' (126) 165 430
    error (256) 284 411
    "lexer error" (258)
    "capture" (259) 359
    "struct" (260) 640 642 821 840
    "class" (261) 639 641 824
    "let" (262) 314 317
    "def" (263) 248 539 541
    "while" (264) 112
    "if" (265) 75 100
    "static_if" (266) 76
    "else" (267) 73 78
    "for" (268) 109 866 867 868
    "recover" (269) 313
    "true" (270) 120 131 425
    "false" (271) 121 132 426
    "new" (272) 300 301 302 303 304 305
    "typeinfo" (273) 340 341 342
    "type" (274) 125 339 477 483 488 720
    "in" (275) 109 126 866 867 868
    "is" (276) 217 219 477 478 479 519
    "as" (277) 55 218 220 221 222 480 483 484 485 488 489 517 518
    "elif" (278) 66
    "static_elif" (279) 67
    "array" (280) 743 840 843 846 847 850
    "return" (281) 308 309 310
    "null" (282) 419
    "break" (283) 306
    "try" (284) 313
    "options" (285) 48
    "table" (286) 746 859 860 861
    "expect" (287) 58
    "const" (288) 527 727 728 734
    "require" (289) 49 140
    "operator" (290) 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222
    "enum" (291) 633
    "finally" (292) 258
    "delete" (293) 215 294 295
    "deref" (294) 470
    "typedef" (295) 617
    "typedecl" (296) 721
    "with" (297) 114
    "aka" (298) 103 106 579 581 654 656
    "assume" (299) 115
    "cast" (300) 330
    "override" (301) 524
    "abstract" (302) 539
    "upcast" (303) 333
    "iterator" (304) 749 867
    "var" (305) 315 318
    "addr" (306) 471
    "continue" (307) 307
    "where" (308) 863
    "pass" (309) 281
    "reinterpret" (310) 336
    "module" (311) 28
    "public" (312) 22 57 251 529 597 614 620 645
    "label" (313) 63 64
    "goto" (314) 64 65
    "implicit" (315) 732
    "explicit" (316) 295 726
    "shared" (317) 594
    "private" (318) 23 141 250 530 596 613 619 644
    "smart_ptr" (319) 739
    "unsafe" (320) 110 501
    "inscope" (321) 27 319
    "static" (322) 532
    "fixed_array" (323) 851 854
    "default" (324) 830
    "uninitialized" (325) 304 413 415 818
    "bool" (326) 223 657
    "void" (327) 677
    "string" (328) 224 658
    "auto" (329) 693 694
    "int" (330) 225 659 684
    "int2" (331) 226 663
    "int3" (332) 227 664
    "int4" (333) 228 665
    "uint" (334) 229 666 687
    "bitfield" (335) 683 703 794
    "uint2" (336) 230 670
    "uint3" (337) 231 671
    "uint4" (338) 232 672
    "float" (339) 233 673
    "float2" (340) 234 674
    "float3" (341) 235 675
    "float4" (342) 236 676
    "range" (343) 237 678
    "urange" (344) 238 679
    "range64" (345) 239 680
    "urange64" (346) 240 681
    "block" (347) 750 753 756
    "int64" (348) 241 662 690
    "uint64" (349) 242 669 691
    "double" (350) 243 682
    "function" (351) 757 760 763
    "lambda" (352) 764 767 770
    "int8" (353) 244 660 685
    "uint8" (354) 245 667 688
    "int16" (355) 246 661 686
    "uint16" (356) 247 668 689
    "tuple" (357) 773 784 833 836 843
    "variant" (358) 776 789 827 846
    "generator" (359) 502 503 504
    "yield" (360) 311 312
    "sealed" (361) 525 637
    "template" (362) 142 641 642
    "+=" (363) 166 380
    "-=" (364) 167 381
    "/=" (365) 169 383
    "*=" (366) 168 382
    "%=" (367) 170 384
    "&=" (368) 171 374
    "|=" (369) 172 375
    "^=" (370) 173 376
    "<<" (371) 199 433
    ">>" (372) 200 434
    "++" (373) 195 197 455 457
    "--" (374) 196 198 456 458
    "<=" (375) 190 446
    "<<=" (376) 201 385
    ">>=" (377) 202 386
    ">=" (378) 191 447
    "==" (379) 188 444 734 735
    "!=" (380) 189 445
    "->" (381) 391 392
    "<-" (382) 310 312 347 353 372 564 573
    "??" (383) 216 473 740
    "?." (384) 210 213 465 466 514 516
    "?[" (385) 208 463 464
    "<|" (386) 497
    "|>" (387) 151 498 499
    ":=" (388) 212 214 354 373 574 801 803 805 807
    "<<<" (389) 203 435
    ">>>" (390) 204 436
    "<<<=" (391) 205 387
    ">>>=" (392) 206 388
    "=>" (393) 346 347 831
    "::" (394) 292 293
    "&&" (395) 147 177 451
    "||" (396) 148 178 452
    "^^" (397) 149 179 453
    "&&=" (398) 174 377
    "||=" (399) 175 378
    "^^=" (400) 176 379
    ".." (401) 187 454
    "$$" (402) 505
    "$i" (403) 102 394 506 578 653
    "$v" (404) 507
    "$b" (405) 508
    "$a" (406) 509 544
    "$t" (407) 695
    "$c" (408) 511 512 520
    "$f" (409) 513 514 515 516 517 518 519 804 805 806 807
    "..." (410) 510
    "integer constant" <i> (411) 61 62 63 64 118 129 363
    "long integer constant" <i64> (412) 365
    "unsigned integer constant" <ui> (413) 364
    "unsigned long integer constant" <ui64> (414) 366
    "unsigned int8 constant" <ui> (415) 367
    "floating point constant" <fd> (416) 119 130 368
    "double constant" <d> (417) 369
    "name" <s> (418) 25 50 52 53 55 101 103 105 106 115 117 124 128 163 211 212 213 219 220 222 291 292 293 321 322 341 342 351 352 353 354 355 391 392 402 403 404 405 406 465 466 479 480 485 551 557 577 579 580 581 582 583 605 606 616 621 638 652 654 655 656 694 696 697 699 700 784 789 794 800 801 802 803
    "new line, comma" (419) 17 626 627
    "new line, semicolon" (420) 19 68 69 535
    "start of the string" (421) 33 34 43
    STRING_CHARACTER <ch> (422) 29 31 36 44 45
    STRING_CHARACTER_ESC (423) 30 32
    "end of the string" (424) 33 34 43
    "{" (425) 42
    "}" (426) 42
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 607 608 704
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 84 85 92 97 100 263 264 265 270 272 273 274 275 279 280 281 323 324 537 539 585 587 588 589 590 591 592 599 617 705
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 28
    module_name <s> (214)
        on left: 24 25
        on right: 28
    optional_not_required <b> (215)
        on left: 26 27
        on right: 28
    module_declaration (216)
        on left: 28
        on right: 2
    character_sequence <s> (217)
        on left: 29 30 31 32
        on right: 31 32 33 41
    string_constant <s> (218)
        on left: 33 34
        on right: 116 127
    format_string <s> (219)
        on left: 35 36
        on right: 36 39
    optional_format_string <s> (220)
        on left: 37 39
        on right: 42
    $@1 (221)
        on left: 38
        on right: 39
    string_builder_body <pExpression> (222)
        on left: 40 41 42
        on right: 41 42 43
    string_builder <pExpression> (223)
        on left: 43
        on right: 423
    reader_character_sequence (224)
        on left: 44 45
        on right: 45 47
    expr_reader <pExpression> (225)
        on left: 47
        on right: 20 422
    $@2 (226)
        on left: 46
        on right: 47
    options_declaration (227)
        on left: 48
        on right: 9
    require_declaration (228)
        on left: 49
        on right: 8
    require_module_name <s> (229)
        on left: 50 51 52 53
        on right: 51 52 53 54 55
    require_module (230)
        on left: 54 55
        on right: 49
    is_public_module <b> (231)
        on left: 56 57
        on right: 54 55
    expect_declaration (232)
        on left: 58
        on right: 7
    expect_list (233)
        on left: 59 60
        on right: 58 60
    expect_error (234)
        on left: 61 62
        on right: 59 60
    expression_label <pExpression> (235)
        on left: 63
        on right: 279
    expression_goto <pExpression> (236)
        on left: 64 65
        on right: 280
    elif_or_static_elif <b> (237)
        on left: 66 67
        on right: 74
    emit_semis (238)
        on left: 68 69
        on right: 69 71
    optional_emit_semis (239)
        on left: 70 71
        on right: 73 74 99 109 110 112 114 137 138 157 254 360 361 504 541 651 784 789 858
    expression_else <pExpression> (240)
        on left: 72 73 74
        on right: 74 99
    if_or_static_if <b> (241)
        on left: 75 76
        on right: 99
    expression_else_one_liner <pExpression> (242)
        on left: 77 78
        on right: 100
    expression_if_one_liner <pExpression> (243)
        on left: 79 80 81 82 83
        on right: 78 92 97 100
    semis (244)
        on left: 84 85
        on right: 85 87 556 562
    optional_semis (245)
        on left: 86 87
        on right: 784 789
    expression_if_block <pExpression> (246)
        on left: 90 92
        on right: 99
    $@3 (247)
        on left: 88
        on right: 90
    $@4 (248)
        on left: 89
        on right: 90
    $@5 (249)
        on left: 91
        on right: 92
    expression_else_block <pExpression> (250)
        on left: 95 97
        on right: 73 74
    $@6 (251)
        on left: 93
        on right: 95
    $@7 (252)
        on left: 94
        on right: 95
    $@8 (253)
        on left: 96
        on right: 97
    expression_if_then_else <pExpression> (254)
        on left: 99
        on right: 276
    $@9 (255)
        on left: 98
        on right: 99
    expression_if_then_else_oneliner <pExpression> (256)
        on left: 100
        on right: 277
    for_variable_name_with_pos_list <pNameWithPosList> (257)
        on left: 101 102 103 104 105 106 107
        on right: 105 106 107 109 866 867 868
    expression_for_loop <pExpression> (258)
        on left: 109
        on right: 271
    $@10 (259)
        on left: 108
        on right: 109
    expression_unsafe <pExpression> (260)
        on left: 110
        on right: 268
    expression_while_loop <pExpression> (261)
        on left: 112
        on right: 267
    $@11 (262)
        on left: 111
        on right: 112
    expression_with <pExpression> (263)
        on left: 114
        on right: 269
    $@12 (264)
        on left: 113
        on right: 114
    expression_with_alias <pExpression> (265)
        on left: 115
        on right: 270
    annotation_argument_value <aa> (266)
        on left: 116 117 118 119 120 121
        on right: 122 123
    annotation_argument_value_list <aaList> (267)
        on left: 122 123
        on right: 123 134
    annotation_argument_name <s> (268)
        on left: 124 125 126
        on right: 127 128 129 130 131 132 133 134
    annotation_argument <aa> (269)
        on left: 127 128 129 130 131 132 133 134
        on right: 135 136 137 138
    annotation_argument_list <aaList> (270)
        on left: 135 136
        on right: 48 136 144
    metadata_argument_list <aaList> (271)
        on left: 137 138
        on right: 138 522
    annotation_declaration_name <s> (272)
        on left: 139 140 141 142
        on right: 143 144
    annotation_declaration_basic <fa> (273)
        on left: 143 144
        on right: 145
    annotation_declaration <fa> (274)
        on left: 145 146 147 148 149 150 151
        on right: 146 147 148 149 150 151 152 153
    annotation_list <faList> (275)
        on left: 152 153
        on right: 153 155 157
    optional_annotation_list <faList> (276)
        on left: 154 155
        on right: 360 361
    optional_annotation_list_with_emit_semis <faList> (277)
        on left: 156 157
        on right: 248 539 541 633 651
    optional_function_argument_list <pVarDeclList> (278)
        on left: 158 159 160
        on right: 252 360 361 401 756 763 770
    optional_function_type <pTypeDecl> (279)
        on left: 161 162
        on right: 252 360 361 401 756 763 770
    function_name <s> (280)
        on left: 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247
        on right: 252
    global_function_declaration (281)
        on left: 248
        on right: 6
    optional_public_or_private_function <b> (282)
        on left: 249 250 251
        on right: 254
    function_declaration_header <pFuncDecl> (283)
        on left: 252
        on right: 254 539 541
    function_declaration <pFuncDecl> (284)
        on left: 254
        on right: 248
    $@13 (285)
        on left: 253
        on right: 254
    expression_block_finally <pExpression> (286)
        on left: 255 258
        on right: 90 95 261
    $@14 (287)
        on left: 256
        on right: 258
    $@15 (288)
        on left: 257
        on right: 258
    expression_block <pExpression> (289)
        on left: 261
        on right: 109 110 112 114 254 313 345 361 504 541
    $@16 (290)
        on left: 259
        on right: 261
    $@17 (291)
        on left: 260
        on right: 261
    expr_call_pipe <pExpression> (292)
        on left: 262
        on right: 500
    expression_any <pExpression> (293)
        on left: 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281
        on right: 283
    expressions <pExpression> (294)
        on left: 282 283 284
        on right: 90 95 258 261 283 284 362
    optional_expr_list <pExpression> (295)
        on left: 285 286
        on right: 722 724 837 850
    optional_expr_map_tuple_list <pExpression> (296)
        on left: 287 288
        on right: 858 860 861
    type_declaration_no_options_list <pTypeDeclList> (297)
        on left: 289 290
        on right: 290 724
    name_in_namespace <s> (298)
        on left: 291 292 293
        on right: 47 139 340 341 342 389 390 393 412 413 414 415 416 420 635 692 722 724
    expression_delete <pExpression> (299)
        on left: 294 295
        on right: 265
    new_type_declaration <pTypeDecl> (300)
        on left: 298 299
        on right: 300 301 302 303 304
    $@18 (301)
        on left: 296
        on right: 298
    $@19 (302)
        on left: 297
        on right: 298
    expr_new <pExpression> (303)
        on left: 300 301 302 303 304 305
        on right: 493
    expression_break <pExpression> (304)
        on left: 306
        on right: 82 272
    expression_continue <pExpression> (305)
        on left: 307
        on right: 83 273
    expression_return <pExpression> (306)
        on left: 308 309 310
        on right: 80 274
    expression_yield <pExpression> (307)
        on left: 311 312
        on right: 81 275
    expression_try_catch <pExpression> (308)
        on left: 313
        on right: 278
    kwd_let_var_or_nothing <b> (309)
        on left: 314 315 316
        on right: 542 543
    kwd_let <b> (310)
        on left: 317 318
        on right: 325 326 327 602 604
    optional_in_scope <b> (311)
        on left: 319 320
        on right: 325 326 327
    tuple_expansion <pNameList> (312)
        on left: 321 322
        on right: 104 107 322 323 324
    tuple_expansion_variable_declaration <pVarDecl> (313)
        on left: 323 324
        on right: 326
    expression_let <pExpression> (314)
        on left: 325 326 327
        on right: 266
    expr_cast <pExpression> (315)
        on left: 330 333 336
        on right: 492
    $@20 (316)
        on left: 328
        on right: 330
    $@21 (317)
        on left: 329
        on right: 330
    $@22 (318)
        on left: 331
        on right: 333
    $@23 (319)
        on left: 332
        on right: 333
    $@24 (320)
        on left: 334
        on right: 336
    $@25 (321)
        on left: 335
        on right: 336
    expr_type_decl <pExpression> (322)
        on left: 339
        on right: 491
    $@26 (323)
        on left: 337
        on right: 339
    $@27 (324)
        on left: 338
        on right: 339
    expr_type_info <pExpression> (325)
        on left: 340 341 342
        on right: 490
    expr_list <pExpression> (326)
        on left: 343 344
        on right: 109 286 302 344 390 392 405 408 416 418 459 512 833 847 851 854 866 867 868
    block_or_simple_block <pExpression> (327)
        on left: 345 346 347
        on right: 360
    block_or_lambda <i> (328)
        on left: 348 349 350
        on right: 360 361
    capture_entry <pCapt> (329)
        on left: 351 352 353 354 355
        on right: 356 357
    capture_list <pCaptList> (330)
        on left: 356 357
        on right: 357 359
    optional_capture_list <pCaptList> (331)
        on left: 358 359
        on right: 360 361 502 503 504
    expr_full_block <pExpression> (332)
        on left: 360
        on right: 496
    expr_full_block_assumed_piped <pExpression> (333)
        on left: 361 362
        on right: 262
    expr_numeric_const <pExpression> (334)
        on left: 363 364 365 366 367 368 369
        on right: 421
    expr_assign <pExpression> (335)
        on left: 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388
        on right: 264
    expr_named_call <pExpression> (336)
        on left: 389 390
        on right: 495
    expr_method_call <pExpression> (337)
        on left: 391 392
        on right: 494
    func_addr_name <pExpression> (338)
        on left: 393 394
        on right: 395 398 401
    func_addr_expr <pExpression> (339)
        on left: 395 398 401
        on right: 467
    $@28 (340)
        on left: 396
        on right: 398
    $@29 (341)
        on left: 397
        on right: 398
    $@30 (342)
        on left: 399
        on right: 401
    $@31 (343)
        on left: 400
        on right: 401
    expr_field <pExpression> (344)
        on left: 402 403 404 405 406 407 408 411
        on right: 427
    $@32 (345)
        on left: 409
        on right: 411
    $@33 (346)
        on left: 410
        on right: 411
    expr_call <pExpression> (347)
        on left: 412 413 414 415 416 417 418
        on right: 262 468
    expr <pExpression> (348)
        on left: 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 477 478 479 480 483 484 485 488 489 490 491 492 493 494 495 496 497 498 499 500 501
        on right
    $@34 (349)
        on left: 475
        on right: 477
    $@35 (350)
        on left: 476
        on right: 477
    $@36 (351)
        on left: 481
        on right: 483
    $@37 (352)
        on left: 482
        on right: 483
    $@38 (353)
        on left: 486
        on right: 488
    $@39 (354)
        on left: 487
        on right: 488
    expr_generator <pExpression> (355)
        on left: 502 503 504
        on right: 472
    expr_mtag <pExpression> (356)
        on left: 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520
        on right: 428
    optional_field_annotation <aaList> (357)
        on left: 521 522
        on right: 533 542 543 601 604
    optional_override <i> (358)
        on left: 523 524 525
        on right: 533 541
    optional_constant <b> (359)
        on left: 526 527
        on right: 539 541
    optional_public_or_private_member_variable <b> (360)
        on left: 528 529 530
        on right: 533 539 541
    optional_static_member_variable <b> (361)
        on left: 531 532
        on right: 533 541
    structure_variable_declaration <pVarDecl> (362)
        on left: 533
        on right: 537
    struct_variable_declaration_list <pVarDeclList> (363)
        on left: 534 535 537 539 541
        on right: 535 537 539 541 647
    $@40 (364)
        on left: 536
        on right: 537
    $@41 (365)
        on left: 538
        on right: 539
    $@42 (366)
        on left: 540
        on right: 541
    function_argument_declaration_no_type <pVarDecl> (367)
        on left: 542
        on right: 545 547
    function_argument_declaration_type <pVarDecl> (368)
        on left: 543 544
        on right: 546 548 549
    function_argument_list <pVarDeclList> (369)
        on left: 545 546 547 548 549
        on right: 160 547 548 549
    tuple_type <pVarDecl> (370)
        on left: 550 551
        on right: 552 553 555 556
    tuple_type_list <pVarDeclList> (371)
        on left: 552 553
        on right: 553 773 836 843
    tuple_alias_type_list <pVarDeclList> (372)
        on left: 554 555 556
        on right: 556 784
    variant_type <pVarDecl> (373)
        on left: 557
        on right: 558 559 561 562
    variant_type_list <pVarDeclList> (374)
        on left: 558 559
        on right: 559 776 827 846
    variant_alias_type_list <pVarDeclList> (375)
        on left: 560 561 562
        on right: 562 789
    copy_or_move <b> (376)
        on left: 563 564
        on right: 567 569 800 802 804 806
    variable_declaration_no_type <pVarDecl> (377)
        on left: 565 566 567
        on right: 542 571
    variable_declaration_type <pVarDecl> (378)
        on left: 568 569
        on right: 543 570
    variable_declaration <pVarDecl> (379)
        on left: 570 571
        on right: 533
    copy_or_move_or_clone <i> (380)
        on left: 572 573 574
        on right: 323 324 588 589 591 592
    optional_ref <b> (381)
        on left: 575 576
        on right: 324 589 592
    let_variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 577 578 579 580 581
        on right: 580 581 587 588 589
    global_let_variable_name_with_pos_list <pNameWithPosList> (383)
        on left: 582 583
        on right: 583 590 591 592
    variable_declaration_list <pVarDeclList> (384)
        on left: 584 585 586
        on right: 327 585 586
    let_variable_declaration <pVarDecl> (385)
        on left: 587 588 589
        on right: 325 586 601
    global_let_variable_declaration <pVarDecl> (386)
        on left: 590 591 592
        on right: 604
    optional_shared <b> (387)
        on left: 593 594
        on right: 28 602 604
    optional_public_or_private_variable <b> (388)
        on left: 595 596 597
        on right: 602 604
    global_variable_declaration_list <pVarDeclList> (389)
        on left: 598 599 601
        on right: 599 601 602
    $@43 (390)
        on left: 600
        on right: 601
    global_let (391)
        on left: 602 604
        on right: 5
    $@44 (392)
        on left: 603
        on right: 604
    enum_expression <pEnumPair> (393)
        on left: 605 606
        on right: 610 611
    commas (394)
        on left: 607 608
        on right: 608 611 625 700
    enum_list <pEnum> (395)
        on left: 609 610 611
        on right: 611 633
    optional_public_or_private_alias <b> (396)
        on left: 612 613 614
        on right: 616 784 789 794
    single_alias (397)
        on left: 616
        on right: 617
    $@45 (398)
        on left: 615
        on right: 616
    alias_declaration (399)
        on left: 617
        on right: 10
    optional_public_or_private_enum <b> (400)
        on left: 618 619 620
        on right: 633
    enum_name <pEnum> (401)
        on left: 621
        on right: 633
    optional_enum_basic_type_declaration <type> (402)
        on left: 622 623
        on right: 633
    optional_commas (403)
        on left: 624 625
        on right: 633 794
    emit_commas (404)
        on left: 626 627
        on right: 627 629
    optional_emit_commas (405)
        on left: 628 629
        on right: 633 794
    enum_declaration (406)
        on left: 633
        on right: 4
    $@46 (407)
        on left: 630
        on right: 633
    $@47 (408)
        on left: 631
        on right: 633
    $@48 (409)
        on left: 632
        on right: 633
    optional_structure_parent <s> (410)
        on left: 634 635
        on right: 638
    optional_sealed <b> (411)
        on left: 636 637
        on right: 638
    structure_name <pStructure> (412)
        on left: 638
        on right: 651
    class_or_struct <i> (413)
        on left: 639 640 641 642
        on right: 651
    optional_public_or_private_structure <b> (414)
        on left: 643 644 645
        on right: 651
    optional_struct_variable_declaration_list <pVarDeclList> (415)
        on left: 646 647
        on right: 651
    structure_declaration (416)
        on left: 651
        on right: 3
    $@49 (417)
        on left: 648
        on right: 651
    $@50 (418)
        on left: 649
        on right: 651
    $@51 (419)
        on left: 650
        on right: 651
    variable_name_with_pos_list <pNameWithPosList> (420)
        on left: 652 653 654 655 656
        on right: 565 566 567 568 569 655 656
    basic_type_declaration <type> (421)
        on left: 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683
        on right: 407 408 417 418 478 484 489 499 714
    enum_basic_type_declaration <type> (422)
        on left: 684 685 686 687 688 689 690 691
        on right: 623
    structure_type_declaration <pTypeDecl> (423)
        on left: 692
        on right: 299 717
    auto_type_declaration <pTypeDecl> (424)
        on left: 693 694 695
        on right: 715
    bitfield_bits <pNameList> (425)
        on left: 696 697
        on right: 697 703
    bitfield_alias_bits <pNameList> (426)
        on left: 698 699 700
        on right: 700 794
    bitfield_type_declaration <pTypeDecl> (427)
        on left: 703
        on right: 716
    $@52 (428)
        on left: 701
        on right: 703
    $@53 (429)
        on left: 702
        on right: 703
    c_or_s (430)
        on left: 704 705
        on right: 290 342 553 559 707 861
    table_type_pair <aTypePair> (431)
        on left: 706 707
        on right: 746
    dim_list <pTypeDecl> (432)
        on left: 708 709 710 711
        on right: 710 711 713
    type_declaration_no_options <pTypeDecl> (433)
        on left: 712 713
        on right: 323 330 333 336 398 477 502 503 504 587 588 590 591 725 726 727 728 729 730 731 732 733 734 735 736 740 777 778 821 824 830 840 850 854 860 861
    type_declaration_no_options_no_dim <pTypeDecl> (434)
        on left: 714 715 716 717 720 721 722 724 725 726 727 728 729 730 731 732 733 734 735 736 739 740 743 746 749 750 753 756 757 760 763 764 767 770 773 776
        on right: 712 713
    $@54 (435)
        on left: 718
        on right: 720
    $@55 (436)
        on left: 719
        on right: 720
    $@56 (437)
        on left: 723
        on right: 724
    $@57 (438)
        on left: 737
        on right: 739
    $@58 (439)
        on left: 738
        on right: 739
    $@59 (440)
        on left: 741
        on right: 743
    $@60 (441)
        on left: 742
        on right: 743
    $@61 (442)
        on left: 744
        on right: 746
    $@62 (443)
        on left: 745
        on right: 746
    $@63 (444)
        on left: 747
        on right: 749
    $@64 (445)
        on left: 748
        on right: 749
    $@65 (446)
        on left: 751
        on right: 753
    $@66 (447)
        on left: 752
        on right: 753
    $@67 (448)
        on left: 754
        on right: 756
    $@68 (449)
        on left: 755
        on right: 756
    $@69 (450)
        on left: 758
        on right: 760
    $@70 (451)
        on left: 759
        on right: 760
    $@71 (452)
        on left: 761
        on right: 763
    $@72 (453)
        on left: 762
        on right: 763
    $@73 (454)
        on left: 765
        on right: 767
    $@74 (455)
        on left: 766
        on right: 767
    $@75 (456)
        on left: 768
        on right: 770
    $@76 (457)
        on left: 769
        on right: 770
    $@77 (458)
        on left: 771
        on right: 773
    $@78 (459)
        on left: 772
        on right: 773
    $@79 (460)
        on left: 774
        on right: 776
    $@80 (461)
        on left: 775
        on right: 776
    type_declaration <pTypeDecl> (462)
        on left: 777 778 779
        on right: 162 289 290 298 339 483 488 550 551 557 568 569 616 706 707 720 739 743 749 753 760 767 778 779
    tuple_alias_declaration (463)
        on left: 784
        on right: 12
    $@81 (464)
        on left: 780
        on right: 784
    $@82 (465)
        on left: 781
        on right: 784
    $@83 (466)
        on left: 782
        on right: 784
    $@84 (467)
        on left: 783
        on right: 784
    variant_alias_declaration (468)
        on left: 789
        on right: 11
    $@85 (469)
        on left: 785
        on right: 789
    $@86 (470)
        on left: 786
        on right: 789
    $@87 (471)
        on left: 787
        on right: 789
    $@88 (472)
        on left: 788
        on right: 789
    bitfield_alias_declaration (473)
        on left: 794
        on right: 13
    $@89 (474)
        on left: 790
        on right: 794
    $@90 (475)
        on left: 791
        on right: 794
    $@91 (476)
        on left: 792
        on right: 794
    $@92 (477)
        on left: 793
        on right: 794
    make_decl <pExpression> (478)
        on left: 795 796 797 798 799
        on right: 305 424
    make_struct_fields <pMakeStruct> (479)
        on left: 800 801 802 803 804 805 806 807
        on right: 389 390 406 802 803 806 807 809 810 811 812 813
    make_variant_dim <pExpression> (480)
        on left: 808 809
        on right: 827 846
    make_struct_single <pExpression> (481)
        on left: 810
        on right: 303 304 414 415 460
    make_struct_dim_list <pExpression> (482)
        on left: 811 812
        on right: 812 814
    make_struct_dim_decl <pExpression> (483)
        on left: 813 814
        on right: 815
    optional_make_struct_dim_decl <pExpression> (484)
        on left: 815 816
        on right: 821 824 836 840 843
    use_initializer <b> (485)
        on left: 817 818
        on right: 301 821 824 827 830 836 840 843
    make_struct_decl <pExpression> (486)
        on left: 821 824 827 830
        on right: 795
    $@93 (487)
        on left: 819
        on right: 821
    $@94 (488)
        on left: 820
        on right: 821
    $@95 (489)
        on left: 822
        on right: 824
    $@96 (490)
        on left: 823
        on right: 824
    $@97 (491)
        on left: 825
        on right: 827
    $@98 (492)
        on left: 826
        on right: 827
    $@99 (493)
        on left: 828
        on right: 830
    $@100 (494)
        on left: 829
        on right: 830
    make_map_tuple <pExpression> (495)
        on left: 831 832
        on right: 855 856 868
    make_tuple_call <pExpression> (496)
        on left: 833 836
        on right: 799
    $@101 (497)
        on left: 834
        on right: 836
    $@102 (498)
        on left: 835
        on right: 836
    make_dim_decl <pExpression> (499)
        on left: 837 840 843 846 847 850 851 854
        on right: 796
    $@103 (500)
        on left: 838
        on right: 840
    $@104 (501)
        on left: 839
        on right: 840
    $@105 (502)
        on left: 841
        on right: 843
    $@106 (503)
        on left: 842
        on right: 843
    $@107 (504)
        on left: 844
        on right: 846
    $@108 (505)
        on left: 845
        on right: 846
    $@109 (506)
        on left: 848
        on right: 850
    $@110 (507)
        on left: 849
        on right: 850
    $@111 (508)
        on left: 852
        on right: 854
    $@112 (509)
        on left: 853
        on right: 854
    expr_map_tuple_list <pExpression> (510)
        on left: 855 856
        on right: 288 856 859
    make_table_decl <pExpression> (511)
        on left: 858 859 860 861
        on right: 797
    $@113 (512)
        on left: 857
        on right: 858
    array_comprehension_where <pExpression> (513)
        on left: 862 863
        on right: 866 867 868
    optional_comma <b> (514)
        on left: 864 865
        on right: 286 288 459 810 814 833 847 851 854 859
    array_comprehension <pExpression> (515)
        on left: 866 867 868
        on right: 798


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 156 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  317 kwd_let: "let" .

    $default  reduce using rule 317 (kwd_let)


State 4

   48 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   58 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   49 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  617 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 612 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  318 kwd_let: "var" .

    $default  reduce using rule 318 (kwd_let)


State 9

   28 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  794 bitfield_alias_declaration: "bitfield" . $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 790 ($@89)

    $@89  go to state 54


State 11

  784 tuple_alias_declaration: "tuple" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 780 ($@81)

    $@81  go to state 55


State 12

  789 variant_alias_declaration: "variant" . $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 785 ($@85)

    $@85  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   47 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  157 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  248 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  633 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'
  651 structure_declaration: optional_annotation_list_with_emit_semis . $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 648 ($@49)

    $@49  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  602 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  604           | kwd_let . optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 593 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  125 annotation_argument_name: "type" .

    $default  reduce using rule 125 (annotation_argument_name)


State 35

  126 annotation_argument_name: "in" .

    $default  reduce using rule 126 (annotation_argument_name)


State 36

  124 annotation_argument_name: "name" .

    $default  reduce using rule 124 (annotation_argument_name)


State 37

  127 annotation_argument: annotation_argument_name . '=' string_constant
  128                    | annotation_argument_name . '=' "name"
  129                    | annotation_argument_name . '=' "integer constant"
  130                    | annotation_argument_name . '=' "floating point constant"
  131                    | annotation_argument_name . '=' "true"
  132                    | annotation_argument_name . '=' "false"
  133                    | annotation_argument_name .
  134                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 133 (annotation_argument)


State 38

  135 annotation_argument_list: annotation_argument .

    $default  reduce using rule 135 (annotation_argument_list)


State 39

   48 options_declaration: "options" annotation_argument_list .
  136 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 48 (options_declaration)


State 40

   61 expect_error: "integer constant" .
   62             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 61 (expect_error)


State 41

   58 expect_declaration: "expect" expect_list .
   60 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 58 (expect_declaration)


State 42

   59 expect_list: expect_error .

    $default  reduce using rule 59 (expect_list)


State 43

   50 require_module_name: "name" .

    $default  reduce using rule 50 (require_module_name)


State 44

   51 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   52 require_module_name: require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"
   54 require_module: require_module_name . is_public_module
   55               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 88


State 46

   49 require_declaration: "require" require_module .

    $default  reduce using rule 49 (require_declaration)


State 47

  614 optional_public_or_private_alias: "public" .

    $default  reduce using rule 614 (optional_public_or_private_alias)


State 48

  613 optional_public_or_private_alias: "private" .

    $default  reduce using rule 613 (optional_public_or_private_alias)


State 49

  616 single_alias: optional_public_or_private_alias . "name" $@45 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  617 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   28 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 77

    $default  reduce using rule 593 (optional_shared)

    optional_shared  go to state 91


State 54

  794 bitfield_alias_declaration: "bitfield" $@89 . optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 612 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  784 tuple_alias_declaration: "tuple" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 612 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  789 variant_alias_declaration: "variant" $@85 . optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 612 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  293 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  291 name_in_namespace: "name" .
  292                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 291 (name_in_namespace)


State 59

   47 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 46 ($@2)

    $@2  go to state 97


State 60

  140 annotation_declaration_name: "require" .

    $default  reduce using rule 140 (annotation_declaration_name)


State 61

  141 annotation_declaration_name: "private" .

    $default  reduce using rule 141 (annotation_declaration_name)


State 62

  142 annotation_declaration_name: "template" .

    $default  reduce using rule 142 (annotation_declaration_name)


State 63

  151 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  146 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  150 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  143 annotation_declaration_basic: annotation_declaration_name .
  144                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 143 (annotation_declaration_basic)


State 67

  145 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 145 (annotation_declaration)


State 68

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  152 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 152 (annotation_list)


State 69

  153 annotation_list: annotation_list . ',' annotation_declaration
  157 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  139 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 139 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  248 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 249 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 630 ($@46)

    $@46  go to state 111


State 76

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 . class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  594 optional_shared: "shared" .

    $default  reduce using rule 594 (optional_shared)


State 78

  602 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  604           | kwd_let optional_shared . optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 595 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  127 annotation_argument: annotation_argument_name '=' . string_constant
  128                    | annotation_argument_name '=' . "name"
  129                    | annotation_argument_name '=' . "integer constant"
  130                    | annotation_argument_name '=' . "floating point constant"
  131                    | annotation_argument_name '=' . "true"
  132                    | annotation_argument_name '=' . "false"
  134                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  136 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   62 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   60 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   51 require_module_name: '%' require_module_name .
   52                    | require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 51 (require_module_name)


State 84

   55 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   57 is_public_module: "public" .

    $default  reduce using rule 57 (is_public_module)


State 86

   53 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   52 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   54 require_module: require_module_name is_public_module .

    $default  reduce using rule 54 (require_module)


State 89

  616 single_alias: optional_public_or_private_alias "name" . $@45 '=' type_declaration

    $default  reduce using rule 615 ($@45)

    $@45  go to state 133


State 90

  617 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 617 (alias_declaration)


State 91

   28 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias . "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 137


State 93

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 138


State 94

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias . "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 139


State 95

  293 name_in_namespace: "::" "name" .

    $default  reduce using rule 293 (name_in_namespace)


State 96

  292 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   47 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  151                       | "|>" annotation_declaration .

    $default  reduce using rule 151 (annotation_declaration)


State 99

  146 annotation_declaration: '!' annotation_declaration .
  147                       | annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 146 (annotation_declaration)


State 100

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  150                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  144 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  147 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  148 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  149 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  153 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  157 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  251 optional_public_or_private_function: "public" .

    $default  reduce using rule 251 (optional_public_or_private_function)


State 108

  250 optional_public_or_private_function: "private" .

    $default  reduce using rule 250 (optional_public_or_private_function)


State 109

  254 function_declaration: optional_public_or_private_function . $@13 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 253 ($@13)

    $@13  go to state 152


State 110

  248 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 248 (global_function_declaration)


State 111

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 618 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  640 class_or_struct: "struct" .

    $default  reduce using rule 640 (class_or_struct)


State 113

  639 class_or_struct: "class" .

    $default  reduce using rule 639 (class_or_struct)


State 114

  641 class_or_struct: "template" . "class"
  642                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct . optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 643 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  597 optional_public_or_private_variable: "public" .

    $default  reduce using rule 597 (optional_public_or_private_variable)


State 117

  596 optional_public_or_private_variable: "private" .

    $default  reduce using rule 596 (optional_public_or_private_variable)


State 118

  602 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  604           | kwd_let optional_shared optional_public_or_private_variable . $@44 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 603 ($@44)

    $@44  go to state 162


State 119

  131 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 131 (annotation_argument)


State 120

  132 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 132 (annotation_argument)


State 121

  129 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 129 (annotation_argument)


State 122

  130 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 130 (annotation_argument)


State 123

  128 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 128 (annotation_argument)


State 124

   33 string_constant: "start of the string" . character_sequence "end of the string"
   34                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  134 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  127 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 127 (annotation_argument)


State 127

  136 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 136 (annotation_argument_list)


State 128

   62 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 62 (expect_error)


State 129

   60 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 60 (expect_list)


State 130

   55 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 175


State 131

   53 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 53 (require_module_name)


State 132

   52 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 52 (require_module_name)


State 133

  616 single_alias: optional_public_or_private_alias "name" $@45 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 177

    $default  reduce using rule 26 (optional_not_required)

    optional_not_required  go to state 178


State 137

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" . optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 179

    $default  reduce using rule 628 (optional_emit_commas)

    emit_commas           go to state 180
    optional_emit_commas  go to state 181


State 138

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 182


State 139

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" . optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 183


State 140

  292 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 292 (name_in_namespace)


State 141

   44 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 44 (reader_character_sequence)


State 142

   45 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 184

    $default  reduce using rule 47 (expr_reader)


State 143

  150 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 150 (annotation_declaration)


State 144

  136 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  144 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 185


State 145

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  147                       | annotation_declaration "&&" annotation_declaration .
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 147 (annotation_declaration)


State 146

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  148                       | annotation_declaration "||" annotation_declaration .
  149                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 148 (annotation_declaration)


State 147

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  149                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 149 (annotation_declaration)


State 148

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  153 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 153 (annotation_list)


State 149

   68 emit_semis: "new line, semicolon" .

    $default  reduce using rule 68 (emit_semis)


State 150

   69 emit_semis: emit_semis . "new line, semicolon"
   71 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 186

    $default  reduce using rule 71 (optional_emit_semis)


State 151

  157 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 157 (optional_annotation_list_with_emit_semis)


State 152

  254 function_declaration: optional_public_or_private_function $@13 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 217


State 153

  620 optional_public_or_private_enum: "public" .

    $default  reduce using rule 620 (optional_public_or_private_enum)


State 154

  619 optional_public_or_private_enum: "private" .

    $default  reduce using rule 619 (optional_public_or_private_enum)


State 155

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 218

    enum_name  go to state 219


State 156

  642 class_or_struct: "template" "struct" .

    $default  reduce using rule 642 (class_or_struct)


State 157

  641 class_or_struct: "template" "class" .

    $default  reduce using rule 641 (class_or_struct)


State 158

  645 optional_public_or_private_structure: "public" .

    $default  reduce using rule 645 (optional_public_or_private_structure)


State 159

  644 optional_public_or_private_structure: "private" .

    $default  reduce using rule 644 (optional_public_or_private_structure)


State 160

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure . $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 649 ($@50)

    $@50  go to state 220


State 161

  602 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 598 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 221


State 162

  604 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 222

    $default  reduce using rule 521 (optional_field_annotation)

    metadata_argument_list     go to state 223
    optional_field_annotation  go to state 224


State 163

   29 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 164

   30 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 165

   34 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 34 (string_constant)


State 166

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   33 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226
    "end of the string"   shift, and go to state 227


State 167

  120 annotation_argument_value: "true" .

    $default  reduce using rule 120 (annotation_argument_value)


State 168

  121 annotation_argument_value: "false" .

    $default  reduce using rule 121 (annotation_argument_value)


State 169

  118 annotation_argument_value: "integer constant" .

    $default  reduce using rule 118 (annotation_argument_value)


State 170

  119 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 119 (annotation_argument_value)


State 171

  117 annotation_argument_value: "name" .

    $default  reduce using rule 117 (annotation_argument_value)


State 172

  116 annotation_argument_value: string_constant .

    $default  reduce using rule 116 (annotation_argument_value)


State 173

  122 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 122 (annotation_argument_value_list)


State 174

  123 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  134 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 228
    ')'  shift, and go to state 229


State 175

   55 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 55 (require_module)


State 176

  616 single_alias: optional_public_or_private_alias "name" $@45 '=' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 278


State 177

   27 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 279


State 178

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 28 (module_declaration)


State 179

  626 emit_commas: "new line, comma" .

    $default  reduce using rule 626 (emit_commas)


State 180

  627 emit_commas: emit_commas . "new line, comma"
  629 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 280

    $default  reduce using rule 629 (optional_emit_commas)


State 181

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas . $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 791 ($@90)

    $@90  go to state 281


State 182

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 781 ($@82)

    $@82  go to state 282


State 183

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis . $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 786 ($@86)

    $@86  go to state 283


State 184

   45 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 45 (reader_character_sequence)


State 185

  144 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 144 (annotation_declaration_basic)


State 186

   69 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 69 (emit_semis)


State 187

  164 function_name: "operator" . '!'
  165              | "operator" . '~'
  166              | "operator" . "+="
  167              | "operator" . "-="
  168              | "operator" . "*="
  169              | "operator" . "/="
  170              | "operator" . "%="
  171              | "operator" . "&="
  172              | "operator" . "|="
  173              | "operator" . "^="
  174              | "operator" . "&&="
  175              | "operator" . "||="
  176              | "operator" . "^^="
  177              | "operator" . "&&"
  178              | "operator" . "||"
  179              | "operator" . "^^"
  180              | "operator" . '+'
  181              | "operator" . '-'
  182              | "operator" . '*'
  183              | "operator" . '/'
  184              | "operator" . '%'
  185              | "operator" . '<'
  186              | "operator" . '>'
  187              | "operator" . ".."
  188              | "operator" . "=="
  189              | "operator" . "!="
  190              | "operator" . "<="
  191              | "operator" . ">="
  192              | "operator" . '&'
  193              | "operator" . '|'
  194              | "operator" . '^'
  197              | "operator" . "++"
  198              | "operator" . "--"
  199              | "operator" . "<<"
  200              | "operator" . ">>"
  201              | "operator" . "<<="
  202              | "operator" . ">>="
  203              | "operator" . "<<<"
  204              | "operator" . ">>>"
  205              | "operator" . "<<<="
  206              | "operator" . ">>>="
  207              | "operator" . '[' ']'
  208              | "operator" . "?[" ']'
  209              | "operator" . '.'
  210              | "operator" . "?."
  211              | "operator" . '.' "name"
  212              | "operator" . '.' "name" ":="
  213              | "operator" . "?." "name"
  214              | "operator" . ":="
  215              | "operator" . "delete"
  216              | "operator" . "??"
  217              | "operator" . "is"
  218              | "operator" . "as"
  219              | "operator" . "is" "name"
  220              | "operator" . "as" "name"
  221              | "operator" . '?' "as"
  222              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 284
    "as"      shift, and go to state 285
    "delete"  shift, and go to state 286
    "+="      shift, and go to state 287
    "-="      shift, and go to state 288
    "/="      shift, and go to state 289
    "*="      shift, and go to state 290
    "%="      shift, and go to state 291
    "&="      shift, and go to state 292
    "|="      shift, and go to state 293
    "^="      shift, and go to state 294
    "<<"      shift, and go to state 295
    ">>"      shift, and go to state 296
    "++"      shift, and go to state 297
    "--"      shift, and go to state 298
    "<="      shift, and go to state 299
    "<<="     shift, and go to state 300
    ">>="     shift, and go to state 301
    ">="      shift, and go to state 302
    "=="      shift, and go to state 303
    "!="      shift, and go to state 304
    "??"      shift, and go to state 305
    "?."      shift, and go to state 306
    "?["      shift, and go to state 307
    ":="      shift, and go to state 308
    "<<<"     shift, and go to state 309
    ">>>"     shift, and go to state 310
    "<<<="    shift, and go to state 311
    ">>>="    shift, and go to state 312
    "&&"      shift, and go to state 313
    "||"      shift, and go to state 314
    "^^"      shift, and go to state 315
    "&&="     shift, and go to state 316
    "||="     shift, and go to state 317
    "^^="     shift, and go to state 318
    ".."      shift, and go to state 319
    '?'       shift, and go to state 320
    '|'       shift, and go to state 321
    '^'       shift, and go to state 322
    '&'       shift, and go to state 323
    '<'       shift, and go to state 324
    '>'       shift, and go to state 325
    '-'       shift, and go to state 326
    '+'       shift, and go to state 327
    '*'       shift, and go to state 328
    '/'       shift, and go to state 329
    '%'       shift, and go to state 330
    '~'       shift, and go to state 331
    '!'       shift, and go to state 332
    '.'       shift, and go to state 333
    '['       shift, and go to state 334


State 188

  223 function_name: "bool" .

    $default  reduce using rule 223 (function_name)


State 189

  224 function_name: "string" .

    $default  reduce using rule 224 (function_name)


State 190

  225 function_name: "int" .

    $default  reduce using rule 225 (function_name)


State 191

  226 function_name: "int2" .

    $default  reduce using rule 226 (function_name)


State 192

  227 function_name: "int3" .

    $default  reduce using rule 227 (function_name)


State 193

  228 function_name: "int4" .

    $default  reduce using rule 228 (function_name)


State 194

  229 function_name: "uint" .

    $default  reduce using rule 229 (function_name)


State 195

  230 function_name: "uint2" .

    $default  reduce using rule 230 (function_name)


State 196

  231 function_name: "uint3" .

    $default  reduce using rule 231 (function_name)


State 197

  232 function_name: "uint4" .

    $default  reduce using rule 232 (function_name)


State 198

  233 function_name: "float" .

    $default  reduce using rule 233 (function_name)


State 199

  234 function_name: "float2" .

    $default  reduce using rule 234 (function_name)


State 200

  235 function_name: "float3" .

    $default  reduce using rule 235 (function_name)


State 201

  236 function_name: "float4" .

    $default  reduce using rule 236 (function_name)


State 202

  237 function_name: "range" .

    $default  reduce using rule 237 (function_name)


State 203

  238 function_name: "urange" .

    $default  reduce using rule 238 (function_name)


State 204

  239 function_name: "range64" .

    $default  reduce using rule 239 (function_name)


State 205

  240 function_name: "urange64" .

    $default  reduce using rule 240 (function_name)


State 206

  241 function_name: "int64" .

    $default  reduce using rule 241 (function_name)


State 207

  242 function_name: "uint64" .

    $default  reduce using rule 242 (function_name)


State 208

  243 function_name: "double" .

    $default  reduce using rule 243 (function_name)


State 209

  244 function_name: "int8" .

    $default  reduce using rule 244 (function_name)


State 210

  245 function_name: "uint8" .

    $default  reduce using rule 245 (function_name)


State 211

  246 function_name: "int16" .

    $default  reduce using rule 246 (function_name)


State 212

  247 function_name: "uint16" .

    $default  reduce using rule 247 (function_name)


State 213

  195 function_name: "++" . "operator"

    "operator"  shift, and go to state 335


State 214

  196 function_name: "--" . "operator"

    "operator"  shift, and go to state 336


State 215

  163 function_name: "name" .

    $default  reduce using rule 163 (function_name)


State 216

  252 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 338


State 217

  254 function_declaration: optional_public_or_private_function $@13 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 339


State 218

  621 enum_name: "name" .

    $default  reduce using rule 621 (enum_name)


State 219

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    ':'  shift, and go to state 340

    $default  reduce using rule 622 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 341


State 220

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 . structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 342

    $default  reduce using rule 636 (optional_sealed)

    optional_sealed  go to state 343
    structure_name   go to state 344


State 221

  599 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  601                                 | global_variable_declaration_list . $@43 optional_field_annotation let_variable_declaration
  602 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 345

    $default  reduce using rule 600 ($@43)

    SEMICOLON  go to state 346
    $@43       go to state 347


State 222

  137 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 348


State 223

  138 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  522 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 349

    $default  reduce using rule 522 (optional_field_annotation)


State 224

  604 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 350

    global_let_variable_name_with_pos_list  go to state 351
    global_let_variable_declaration         go to state 352


State 225

   31 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 31 (character_sequence)


State 226

   32 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 32 (character_sequence)


State 227

   33 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 33 (string_constant)


State 228

  123 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 353


State 229

  134 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 134 (annotation_argument)


State 230

  720 type_declaration_no_options_no_dim: "type" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 354


State 231

  743 type_declaration_no_options_no_dim: "array" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 355


State 232

  746 type_declaration_no_options_no_dim: "table" . '<' $@61 table_type_pair '>' $@62

    '<'  shift, and go to state 356


State 233

  721 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 357


State 234

  749 type_declaration_no_options_no_dim: "iterator" . '<' $@63 type_declaration '>' $@64

    '<'  shift, and go to state 358


State 235

  739 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 359


State 236

  657 basic_type_declaration: "bool" .

    $default  reduce using rule 657 (basic_type_declaration)


State 237

  677 basic_type_declaration: "void" .

    $default  reduce using rule 677 (basic_type_declaration)


State 238

  658 basic_type_declaration: "string" .

    $default  reduce using rule 658 (basic_type_declaration)


State 239

  693 auto_type_declaration: "auto" .
  694                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 360

    $default  reduce using rule 693 (auto_type_declaration)


State 240

  659 basic_type_declaration: "int" .

    $default  reduce using rule 659 (basic_type_declaration)


State 241

  663 basic_type_declaration: "int2" .

    $default  reduce using rule 663 (basic_type_declaration)


State 242

  664 basic_type_declaration: "int3" .

    $default  reduce using rule 664 (basic_type_declaration)


State 243

  665 basic_type_declaration: "int4" .

    $default  reduce using rule 665 (basic_type_declaration)


State 244

  666 basic_type_declaration: "uint" .

    $default  reduce using rule 666 (basic_type_declaration)


State 245

  683 basic_type_declaration: "bitfield" .
  703 bitfield_type_declaration: "bitfield" . '<' $@52 bitfield_bits '>' $@53

    '<'  shift, and go to state 361

    $default  reduce using rule 683 (basic_type_declaration)


State 246

  670 basic_type_declaration: "uint2" .

    $default  reduce using rule 670 (basic_type_declaration)


State 247

  671 basic_type_declaration: "uint3" .

    $default  reduce using rule 671 (basic_type_declaration)


State 248

  672 basic_type_declaration: "uint4" .

    $default  reduce using rule 672 (basic_type_declaration)


State 249

  673 basic_type_declaration: "float" .

    $default  reduce using rule 673 (basic_type_declaration)


State 250

  674 basic_type_declaration: "float2" .

    $default  reduce using rule 674 (basic_type_declaration)


State 251

  675 basic_type_declaration: "float3" .

    $default  reduce using rule 675 (basic_type_declaration)


State 252

  676 basic_type_declaration: "float4" .

    $default  reduce using rule 676 (basic_type_declaration)


State 253

  678 basic_type_declaration: "range" .

    $default  reduce using rule 678 (basic_type_declaration)


State 254

  679 basic_type_declaration: "urange" .

    $default  reduce using rule 679 (basic_type_declaration)


State 255

  680 basic_type_declaration: "range64" .

    $default  reduce using rule 680 (basic_type_declaration)


State 256

  681 basic_type_declaration: "urange64" .

    $default  reduce using rule 681 (basic_type_declaration)


State 257

  750 type_declaration_no_options_no_dim: "block" .
  753                                   | "block" . '<' $@65 type_declaration '>' $@66
  756                                   | "block" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 362

    $default  reduce using rule 750 (type_declaration_no_options_no_dim)


State 258

  662 basic_type_declaration: "int64" .

    $default  reduce using rule 662 (basic_type_declaration)


State 259

  669 basic_type_declaration: "uint64" .

    $default  reduce using rule 669 (basic_type_declaration)


State 260

  682 basic_type_declaration: "double" .

    $default  reduce using rule 682 (basic_type_declaration)


State 261

  757 type_declaration_no_options_no_dim: "function" .
  760                                   | "function" . '<' $@69 type_declaration '>' $@70
  763                                   | "function" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 363

    $default  reduce using rule 757 (type_declaration_no_options_no_dim)


State 262

  764 type_declaration_no_options_no_dim: "lambda" .
  767                                   | "lambda" . '<' $@73 type_declaration '>' $@74
  770                                   | "lambda" . '<' $@75 optional_function_argument_list optional_function_type '>' $@76

    '<'  shift, and go to state 364

    $default  reduce using rule 764 (type_declaration_no_options_no_dim)


State 263

  660 basic_type_declaration: "int8" .

    $default  reduce using rule 660 (basic_type_declaration)


State 264

  667 basic_type_declaration: "uint8" .

    $default  reduce using rule 667 (basic_type_declaration)


State 265

  661 basic_type_declaration: "int16" .

    $default  reduce using rule 661 (basic_type_declaration)


State 266

  668 basic_type_declaration: "uint16" .

    $default  reduce using rule 668 (basic_type_declaration)


State 267

  773 type_declaration_no_options_no_dim: "tuple" . '<' $@77 tuple_type_list '>' $@78

    '<'  shift, and go to state 365


State 268

  776 type_declaration_no_options_no_dim: "variant" . '<' $@79 variant_type_list '>' $@80

    '<'  shift, and go to state 366


State 269

  695 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 367


State 270

  722 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  724                                   | '$' . name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 368


State 271

  692 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 692 (structure_type_declaration)


State 272

  714 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 273

  717 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 274

  715 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 275

  716 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 276

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  777 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377

    $default  reduce using rule 777 (type_declaration)


State 277

  712 type_declaration_no_options: type_declaration_no_options_no_dim .
  713                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 378

    $default  reduce using rule 712 (type_declaration_no_options)

    dim_list  go to state 379


State 278

  616 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 616 (single_alias)


State 279

   27 optional_not_required: '!' "inscope" .

    $default  reduce using rule 27 (optional_not_required)


State 280

  627 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 627 (emit_commas)


State 281

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 . '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    '{'  shift, and go to state 381


State 282

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 382


State 283

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 . '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    '{'  shift, and go to state 383


State 284

  217 function_name: "operator" "is" .
  219              | "operator" "is" . "name"

    "name"  shift, and go to state 384

    $default  reduce using rule 217 (function_name)


State 285

  218 function_name: "operator" "as" .
  220              | "operator" "as" . "name"

    "name"  shift, and go to state 385

    $default  reduce using rule 218 (function_name)


State 286

  215 function_name: "operator" "delete" .

    $default  reduce using rule 215 (function_name)


State 287

  166 function_name: "operator" "+=" .

    $default  reduce using rule 166 (function_name)


State 288

  167 function_name: "operator" "-=" .

    $default  reduce using rule 167 (function_name)


State 289

  169 function_name: "operator" "/=" .

    $default  reduce using rule 169 (function_name)


State 290

  168 function_name: "operator" "*=" .

    $default  reduce using rule 168 (function_name)


State 291

  170 function_name: "operator" "%=" .

    $default  reduce using rule 170 (function_name)


State 292

  171 function_name: "operator" "&=" .

    $default  reduce using rule 171 (function_name)


State 293

  172 function_name: "operator" "|=" .

    $default  reduce using rule 172 (function_name)


State 294

  173 function_name: "operator" "^=" .

    $default  reduce using rule 173 (function_name)


State 295

  199 function_name: "operator" "<<" .

    $default  reduce using rule 199 (function_name)


State 296

  200 function_name: "operator" ">>" .

    $default  reduce using rule 200 (function_name)


State 297

  197 function_name: "operator" "++" .

    $default  reduce using rule 197 (function_name)


State 298

  198 function_name: "operator" "--" .

    $default  reduce using rule 198 (function_name)


State 299

  190 function_name: "operator" "<=" .

    $default  reduce using rule 190 (function_name)


State 300

  201 function_name: "operator" "<<=" .

    $default  reduce using rule 201 (function_name)


State 301

  202 function_name: "operator" ">>=" .

    $default  reduce using rule 202 (function_name)


State 302

  191 function_name: "operator" ">=" .

    $default  reduce using rule 191 (function_name)


State 303

  188 function_name: "operator" "==" .

    $default  reduce using rule 188 (function_name)


State 304

  189 function_name: "operator" "!=" .

    $default  reduce using rule 189 (function_name)


State 305

  216 function_name: "operator" "??" .

    $default  reduce using rule 216 (function_name)


State 306

  210 function_name: "operator" "?." .
  213              | "operator" "?." . "name"

    "name"  shift, and go to state 386

    $default  reduce using rule 210 (function_name)


State 307

  208 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 387


State 308

  214 function_name: "operator" ":=" .

    $default  reduce using rule 214 (function_name)


State 309

  203 function_name: "operator" "<<<" .

    $default  reduce using rule 203 (function_name)


State 310

  204 function_name: "operator" ">>>" .

    $default  reduce using rule 204 (function_name)


State 311

  205 function_name: "operator" "<<<=" .

    $default  reduce using rule 205 (function_name)


State 312

  206 function_name: "operator" ">>>=" .

    $default  reduce using rule 206 (function_name)


State 313

  177 function_name: "operator" "&&" .

    $default  reduce using rule 177 (function_name)


State 314

  178 function_name: "operator" "||" .

    $default  reduce using rule 178 (function_name)


State 315

  179 function_name: "operator" "^^" .

    $default  reduce using rule 179 (function_name)


State 316

  174 function_name: "operator" "&&=" .

    $default  reduce using rule 174 (function_name)


State 317

  175 function_name: "operator" "||=" .

    $default  reduce using rule 175 (function_name)


State 318

  176 function_name: "operator" "^^=" .

    $default  reduce using rule 176 (function_name)


State 319

  187 function_name: "operator" ".." .

    $default  reduce using rule 187 (function_name)


State 320

  221 function_name: "operator" '?' . "as"
  222              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 388


State 321

  193 function_name: "operator" '|' .

    $default  reduce using rule 193 (function_name)


State 322

  194 function_name: "operator" '^' .

    $default  reduce using rule 194 (function_name)


State 323

  192 function_name: "operator" '&' .

    $default  reduce using rule 192 (function_name)


State 324

  185 function_name: "operator" '<' .

    $default  reduce using rule 185 (function_name)


State 325

  186 function_name: "operator" '>' .

    $default  reduce using rule 186 (function_name)


State 326

  181 function_name: "operator" '-' .

    $default  reduce using rule 181 (function_name)


State 327

  180 function_name: "operator" '+' .

    $default  reduce using rule 180 (function_name)


State 328

  182 function_name: "operator" '*' .

    $default  reduce using rule 182 (function_name)


State 329

  183 function_name: "operator" '/' .

    $default  reduce using rule 183 (function_name)


State 330

  184 function_name: "operator" '%' .

    $default  reduce using rule 184 (function_name)


State 331

  165 function_name: "operator" '~' .

    $default  reduce using rule 165 (function_name)


State 332

  164 function_name: "operator" '!' .

    $default  reduce using rule 164 (function_name)


State 333

  209 function_name: "operator" '.' .
  211              | "operator" '.' . "name"
  212              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 389

    $default  reduce using rule 209 (function_name)


State 334

  207 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 390


State 335

  195 function_name: "++" "operator" .

    $default  reduce using rule 195 (function_name)


State 336

  196 function_name: "--" "operator" .

    $default  reduce using rule 196 (function_name)


State 337

  159 optional_function_argument_list: '(' . ')'
  160                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 391
    ')'   shift, and go to state 392
    '@'   shift, and go to state 222

    $default  reduce using rule 521 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 396


State 338

  252 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 398


State 339

  254 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 399
    $@16              go to state 400


State 340

  623 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 401
    "uint"    shift, and go to state 402
    "int64"   shift, and go to state 403
    "uint64"  shift, and go to state 404
    "int8"    shift, and go to state 405
    "uint8"   shift, and go to state 406
    "int16"   shift, and go to state 407
    "uint16"  shift, and go to state 408

    enum_basic_type_declaration  go to state 409


State 341

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 179

    $default  reduce using rule 628 (optional_emit_commas)

    emit_commas           go to state 180
    optional_emit_commas  go to state 410


State 342

  637 optional_sealed: "sealed" .

    $default  reduce using rule 637 (optional_sealed)


State 343

  638 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 411


State 344

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name . optional_emit_semis $@51 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 412


State 345

  602 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 602 (global_let)


State 346

  599 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 599 (global_variable_declaration_list)


State 347

  601 global_variable_declaration_list: global_variable_declaration_list $@43 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 222

    $default  reduce using rule 521 (optional_field_annotation)

    metadata_argument_list     go to state 223
    optional_field_annotation  go to state 413


State 348

  137 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 414


State 349

  138 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 415


State 350

  582 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 582 (global_let_variable_name_with_pos_list)


State 351

  583 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  590 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  591                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  592                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 416
    ':'  shift, and go to state 417
    '&'  shift, and go to state 418

    $default  reduce using rule 575 (optional_ref)

    optional_ref  go to state 419


State 352

  604 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 604 (global_let)


State 353

  123 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 123 (annotation_argument_value_list)


State 354

  720 type_declaration_no_options_no_dim: "type" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 718 ($@54)

    $@54  go to state 420


State 355

  743 type_declaration_no_options_no_dim: "array" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 741 ($@59)

    $@59  go to state 421


State 356

  746 type_declaration_no_options_no_dim: "table" '<' . $@61 table_type_pair '>' $@62

    $default  reduce using rule 744 ($@61)

    $@61  go to state 422


State 357

  721 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 488
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 358

  749 type_declaration_no_options_no_dim: "iterator" '<' . $@63 type_declaration '>' $@64

    $default  reduce using rule 747 ($@63)

    $@63  go to state 498


State 359

  739 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 737 ($@57)

    $@57  go to state 499


State 360

  694 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 500


State 361

  703 bitfield_type_declaration: "bitfield" '<' . $@52 bitfield_bits '>' $@53

    $default  reduce using rule 701 ($@52)

    $@52  go to state 501


State 362

  753 type_declaration_no_options_no_dim: "block" '<' . $@65 type_declaration '>' $@66
  756                                   | "block" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 754 ($@67)
    '>'       reduce using rule 754 ($@67)
    '('       reduce using rule 754 ($@67)
    $default  reduce using rule 751 ($@65)

    $@65  go to state 502
    $@67  go to state 503


State 363

  760 type_declaration_no_options_no_dim: "function" '<' . $@69 type_declaration '>' $@70
  763                                   | "function" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 761 ($@71)
    '>'       reduce using rule 761 ($@71)
    '('       reduce using rule 761 ($@71)
    $default  reduce using rule 758 ($@69)

    $@69  go to state 504
    $@71  go to state 505


State 364

  767 type_declaration_no_options_no_dim: "lambda" '<' . $@73 type_declaration '>' $@74
  770                                   | "lambda" '<' . $@75 optional_function_argument_list optional_function_type '>' $@76

    ':'       reduce using rule 768 ($@75)
    '>'       reduce using rule 768 ($@75)
    '('       reduce using rule 768 ($@75)
    $default  reduce using rule 765 ($@73)

    $@73  go to state 506
    $@75  go to state 507


State 365

  773 type_declaration_no_options_no_dim: "tuple" '<' . $@77 tuple_type_list '>' $@78

    $default  reduce using rule 771 ($@77)

    $@77  go to state 508


State 366

  776 type_declaration_no_options_no_dim: "variant" '<' . $@79 variant_type_list '>' $@80

    $default  reduce using rule 774 ($@79)

    $@79  go to state 509


State 367

  695 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 510
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 368

  722 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  724                                   | '$' name_in_namespace . '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 511
    '('  shift, and go to state 512


State 369

  727 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 370

  732 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 732 (type_declaration_no_options_no_dim)


State 371

  726 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 372

  734 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  735                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 513
    '&'      shift, and go to state 514


State 373

  740 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 374

  736 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 736 (type_declaration_no_options_no_dim)


State 375

  729 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 376

  725 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  728                                   | type_declaration_no_options '-' . "const"
  730                                   | type_declaration_no_options '-' . '&'
  733                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 515
    '&'      shift, and go to state 516
    '['      shift, and go to state 517
    '#'      shift, and go to state 518


State 377

  731 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 731 (type_declaration_no_options_no_dim)


State 378

  708 dim_list: '[' . expr ']'
  709         | '[' . ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    ']'                               shift, and go to state 519
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 520
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 379

  710 dim_list: dim_list . '[' expr ']'
  711         | dim_list . '[' ']'
  713 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 521

    $default  reduce using rule 713 (type_declaration_no_options)


State 380

  778 type_declaration: type_declaration '|' . type_declaration_no_options
  779                 | type_declaration '|' . '#'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270
    '#'          shift, and go to state 522

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 523
    type_declaration_no_options_no_dim  go to state 277


State 381

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' . $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 792 ($@91)

    $@91  go to state 524


State 382

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 782 ($@83)

    $@83  go to state 525


State 383

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' . $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 787 ($@87)

    $@87  go to state 526


State 384

  219 function_name: "operator" "is" "name" .

    $default  reduce using rule 219 (function_name)


State 385

  220 function_name: "operator" "as" "name" .

    $default  reduce using rule 220 (function_name)


State 386

  213 function_name: "operator" "?." "name" .

    $default  reduce using rule 213 (function_name)


State 387

  208 function_name: "operator" "?[" ']' .

    $default  reduce using rule 208 (function_name)


State 388

  221 function_name: "operator" '?' "as" .
  222              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 527

    $default  reduce using rule 221 (function_name)


State 389

  211 function_name: "operator" '.' "name" .
  212              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 528

    $default  reduce using rule 211 (function_name)


State 390

  207 function_name: "operator" '[' ']' .

    $default  reduce using rule 207 (function_name)


State 391

  544 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 529


State 392

  159 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 159 (optional_function_argument_list)


State 393

  542 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  543 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 530
    "var"  shift, and go to state 531

    $default  reduce using rule 316 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 532


State 394

  545 function_argument_list: function_argument_declaration_no_type .
  547                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 533

    $default  reduce using rule 545 (function_argument_list)


State 395

  546 function_argument_list: function_argument_declaration_type .
  548                       | function_argument_declaration_type . ';' function_argument_list
  549                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 534
    ';'  shift, and go to state 535

    $default  reduce using rule 546 (function_argument_list)


State 396

  160 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 536


State 397

  162 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 537


State 398

  252 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 252 (function_declaration_header)


State 399

  254 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 254 (function_declaration)


State 400

  261 expression_block: $@16 . '{' expressions $@17 '}' expression_block_finally

    '{'  shift, and go to state 538


State 401

  684 enum_basic_type_declaration: "int" .

    $default  reduce using rule 684 (enum_basic_type_declaration)


State 402

  687 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 687 (enum_basic_type_declaration)


State 403

  690 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 690 (enum_basic_type_declaration)


State 404

  691 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 691 (enum_basic_type_declaration)


State 405

  685 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 685 (enum_basic_type_declaration)


State 406

  688 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 688 (enum_basic_type_declaration)


State 407

  686 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 686 (enum_basic_type_declaration)


State 408

  689 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 689 (enum_basic_type_declaration)


State 409

  623 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 623 (optional_enum_basic_type_declaration)


State 410

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@47 enum_list optional_commas $@48 '}'

    '{'  shift, and go to state 539


State 411

  638 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 540

    $default  reduce using rule 634 (optional_structure_parent)

    optional_structure_parent  go to state 541


State 412

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis . $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 650 ($@51)

    $@51  go to state 542


State 413

  601 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 543
    "name"  shift, and go to state 544

    let_variable_name_with_pos_list  go to state 545
    let_variable_declaration         go to state 546


State 414

  137 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 137 (metadata_argument_list)


State 415

  138 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 547


State 416

  583 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 548


State 417

  590 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  591                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 549
    type_declaration_no_options_no_dim  go to state 277


State 418

  576 optional_ref: '&' .

    $default  reduce using rule 576 (optional_ref)


State 419

  592 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 550
    ":="  shift, and go to state 551
    '='   shift, and go to state 552

    copy_or_move_or_clone  go to state 553


State 420

  720 type_declaration_no_options_no_dim: "type" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 554


State 421

  743 type_declaration_no_options_no_dim: "array" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 555


State 422

  746 type_declaration_no_options_no_dim: "table" '<' $@61 . table_type_pair '>' $@62

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    table_type_pair                     go to state 556
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 557


State 423

  821 make_struct_decl: "struct" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 558


State 424

  824 make_struct_decl: "class" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 559


State 425

  425 expr: "true" .

    $default  reduce using rule 425 (expr)


State 426

  426 expr: "false" .

    $default  reduce using rule 426 (expr)


State 427

  300 expr_new: "new" . new_type_declaration
  301         | "new" . new_type_declaration '(' use_initializer ')'
  302         | "new" . new_type_declaration '(' expr_list ')'
  303         | "new" . new_type_declaration '(' make_struct_single ')'
  304         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  305         | "new" . make_decl

    "struct"       shift, and go to state 423
    "class"        shift, and go to state 424
    "array"        shift, and go to state 430
    "table"        shift, and go to state 432
    "fixed_array"  shift, and go to state 439
    "default"      shift, and go to state 440
    "tuple"        shift, and go to state 442
    "variant"      shift, and go to state 443
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 560
    '['            shift, and go to state 467
    '{'            shift, and go to state 471

    name_in_namespace           go to state 271
    new_type_declaration        go to state 561
    structure_type_declaration  go to state 562
    make_decl                   go to state 563
    make_struct_decl            go to state 493
    make_tuple_call             go to state 494
    make_dim_decl               go to state 495
    make_table_decl             go to state 496
    array_comprehension         go to state 497


State 428

  340 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  341               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  342               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 564


State 429

  339 expr_type_decl: "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 565


State 430

  840 make_dim_decl: "array" . "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  843              | "array" . "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'
  846              | "array" . "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  847              | "array" . '(' expr_list optional_comma ')'
  850              | "array" . '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "struct"   shift, and go to state 566
    "tuple"    shift, and go to state 567
    "variant"  shift, and go to state 568
    '<'        shift, and go to state 569
    '('        shift, and go to state 570


State 431

  419 expr: "null" .

    $default  reduce using rule 419 (expr)


State 432

  859 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  860                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  861                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 571
    '('  shift, and go to state 572


State 433

  470 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 573


State 434

  330 expr_cast: "cast" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 574


State 435

  333 expr_cast: "upcast" . '<' $@22 type_declaration_no_options '>' $@23 expr

    '<'  shift, and go to state 575


State 436

  471 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 576


State 437

  336 expr_cast: "reinterpret" . '<' $@24 type_declaration_no_options '>' $@25 expr

    '<'  shift, and go to state 577


State 438

  501 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 578


State 439

  851 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  854              | "fixed_array" . '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 579
    '('  shift, and go to state 580


State 440

  830 make_struct_decl: "default" . '<' $@99 type_declaration_no_options '>' $@100 use_initializer

    '<'  shift, and go to state 581


State 441

  683 basic_type_declaration: "bitfield" .

    $default  reduce using rule 683 (basic_type_declaration)


State 442

  833 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  836                | "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 582
    '('  shift, and go to state 583


State 443

  827 make_struct_decl: "variant" . '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 584


State 444

  502 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  503               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  504               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 585


State 445

  455 expr: "++" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 586
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 446

  456 expr: "--" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 587
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 447

  505 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 588


State 448

  506 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 589


State 449

  507 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 590


State 450

  508 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 591


State 451

  509 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 592


State 452

  511 expr_mtag: "$c" . '(' expr ')' '(' ')'
  512          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 593


State 453

  510 expr_mtag: "..." .

    $default  reduce using rule 510 (expr_mtag)


State 454

  363 expr_numeric_const: "integer constant" .

    $default  reduce using rule 363 (expr_numeric_const)


State 455

  365 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 365 (expr_numeric_const)


State 456

  364 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 364 (expr_numeric_const)


State 457

  366 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 366 (expr_numeric_const)


State 458

  367 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 367 (expr_numeric_const)


State 459

  368 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 368 (expr_numeric_const)


State 460

  369 expr_numeric_const: "double constant" .

    $default  reduce using rule 369 (expr_numeric_const)


State 461

   43 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 40 (string_builder_body)

    string_builder_body  go to state 594


State 462

  432 expr: '-' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 595
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 463

  431 expr: '+' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 596
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 464

  469 expr: '*' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 597
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 465

  430 expr: '~' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 598
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 466

  429 expr: '!' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 599
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 467

  837 make_dim_decl: '[' . optional_expr_list ']'
  866 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  867                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 600
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 601
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 285 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 602
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 603
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 468

  459 expr: '(' . expr_list optional_comma ')'
  460     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 605
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 606
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 607
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 608
    make_struct_single      go to state 609
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 469

  348 block_or_lambda: '$' .

    $default  reduce using rule 348 (block_or_lambda)


State 470

  349 block_or_lambda: '@' .
  350                | '@' . '@'
  395 func_addr_expr: '@' . '@' func_addr_name
  398               | '@' . '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  401               | '@' . '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  520 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 610

    $default  reduce using rule 349 (block_or_lambda)


State 471

  858 make_table_decl: '{' . $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  868 array_comprehension: '{' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 611

    $default  reduce using rule 857 ($@113)

    $@113  go to state 612


State 472

  423 expr: string_builder .

    $default  reduce using rule 423 (expr)


State 473

  422 expr: expr_reader .

    $default  reduce using rule 422 (expr)


State 474

  500 expr: expr_call_pipe .

    $default  reduce using rule 500 (expr)


State 475

  389 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  390                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  412 expr_call: name_in_namespace . '(' ')'
  413          | name_in_namespace . '(' "uninitialized" ')'
  414          | name_in_namespace . '(' make_struct_single ')'
  415          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  416          | name_in_namespace . '(' expr_list ')'
  420 expr: name_in_namespace .

    '('  shift, and go to state 613

    $default  reduce using rule 420 (expr)


State 476

  493 expr: expr_new .

    $default  reduce using rule 493 (expr)


State 477

  492 expr: expr_cast .

    $default  reduce using rule 492 (expr)


State 478

  491 expr: expr_type_decl .

    $default  reduce using rule 491 (expr)


State 479

  490 expr: expr_type_info .

    $default  reduce using rule 490 (expr)


State 480

  360 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 614

    $default  reduce using rule 154 (optional_annotation_list)

    optional_annotation_list  go to state 615


State 481

  496 expr: expr_full_block .

    $default  reduce using rule 496 (expr)


State 482

  421 expr: expr_numeric_const .

    $default  reduce using rule 421 (expr)


State 483

  495 expr: expr_named_call .

    $default  reduce using rule 495 (expr)


State 484

  494 expr: expr_method_call .

    $default  reduce using rule 494 (expr)


State 485

  467 expr: func_addr_expr .

    $default  reduce using rule 467 (expr)


State 486

  427 expr: expr_field .

    $default  reduce using rule 427 (expr)


State 487

  262 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  468 expr: expr_call .

    '$'  shift, and go to state 469
    '@'  shift, and go to state 616
    '{'  shift, and go to state 617

    $default  reduce using rule 468 (expr)

    block_or_lambda                go to state 618
    expr_full_block_assumed_piped  go to state 619


State 488

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  721 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 655


State 489

  472 expr: expr_generator .

    $default  reduce using rule 472 (expr)


State 490

  428 expr: expr_mtag .

    $default  reduce using rule 428 (expr)


State 491

  417 expr_call: basic_type_declaration . '(' ')'
  418          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 656


State 492

  424 expr: make_decl .

    $default  reduce using rule 424 (expr)


State 493

  795 make_decl: make_struct_decl .

    $default  reduce using rule 795 (make_decl)


State 494

  799 make_decl: make_tuple_call .

    $default  reduce using rule 799 (make_decl)


State 495

  796 make_decl: make_dim_decl .

    $default  reduce using rule 796 (make_decl)


State 496

  797 make_decl: make_table_decl .

    $default  reduce using rule 797 (make_decl)


State 497

  798 make_decl: array_comprehension .

    $default  reduce using rule 798 (make_decl)


State 498

  749 type_declaration_no_options_no_dim: "iterator" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 657


State 499

  739 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 658


State 500

  694 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 659


State 501

  703 bitfield_type_declaration: "bitfield" '<' $@52 . bitfield_bits '>' $@53

    "name"  shift, and go to state 660

    bitfield_bits  go to state 661


State 502

  753 type_declaration_no_options_no_dim: "block" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 662


State 503

  756 type_declaration_no_options_no_dim: "block" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 663


State 504

  760 type_declaration_no_options_no_dim: "function" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 664


State 505

  763 type_declaration_no_options_no_dim: "function" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 665


State 506

  767 type_declaration_no_options_no_dim: "lambda" '<' $@73 . type_declaration '>' $@74

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 666


State 507

  770 type_declaration_no_options_no_dim: "lambda" '<' $@75 . optional_function_argument_list optional_function_type '>' $@76

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 667


State 508

  773 type_declaration_no_options_no_dim: "tuple" '<' $@77 . tuple_type_list '>' $@78

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 668
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 669
    tuple_type_list                     go to state 670
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 671


State 509

  776 type_declaration_no_options_no_dim: "variant" '<' $@79 . variant_type_list '>' $@80

    "name"  shift, and go to state 672

    variant_type       go to state 673
    variant_type_list  go to state 674


State 510

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  695 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 675


State 511

  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 723 ($@56)

    $@56  go to state 676


State 512

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 285 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 677
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 603
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 513

  734 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 514

  735 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 735 (type_declaration_no_options_no_dim)


State 515

  728 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 728 (type_declaration_no_options_no_dim)


State 516

  730 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 517

  725 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 678


State 518

  733 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 519

  709 dim_list: '[' ']' .

    $default  reduce using rule 709 (dim_list)


State 520

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  708 dim_list: '[' expr . ']'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ']'    shift, and go to state 679


State 521

  710 dim_list: dim_list '[' . expr ']'
  711         | dim_list '[' . ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    ']'                               shift, and go to state 680
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 681
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 522

  779 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 779 (type_declaration)


State 523

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  778 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377

    $default  reduce using rule 778 (type_declaration)


State 524

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 . bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 682

    $default  reduce using rule 698 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 683


State 525

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . tuple_alias_type_list optional_semis $@84 '}'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 668
    '$'          shift, and go to state 270

    $default  reduce using rule 554 (tuple_alias_type_list)

    name_in_namespace                   go to state 271
    tuple_type                          go to state 684
    tuple_alias_type_list               go to state 685
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 671


State 526

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 . variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 672

    $default  reduce using rule 560 (variant_alias_type_list)

    variant_type             go to state 686
    variant_alias_type_list  go to state 687


State 527

  222 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 222 (function_name)


State 528

  212 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 212 (function_name)


State 529

  544 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 688
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 530

  314 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 314 (kwd_let_var_or_nothing)


State 531

  315 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 315 (kwd_let_var_or_nothing)


State 532

  542 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  543 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 689
    "name"  shift, and go to state 690

    variable_declaration_no_type  go to state 691
    variable_declaration_type     go to state 692
    variable_name_with_pos_list   go to state 693


State 533

  547 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 391
    '@'   shift, and go to state 222

    $default  reduce using rule 521 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 694


State 534

  549 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 391
    '@'   shift, and go to state 222

    $default  reduce using rule 521 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 695


State 535

  548 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 391
    '@'   shift, and go to state 222

    $default  reduce using rule 521 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 696


State 536

  160 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 160 (optional_function_argument_list)


State 537

  162 optional_function_type: ':' type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 162 (optional_function_type)


State 538

  261 expression_block: $@16 '{' . expressions $@17 '}' expression_block_finally

    $default  reduce using rule 282 (expressions)

    expressions  go to state 697


State 539

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 631 ($@47)

    $@47  go to state 698


State 540

  635 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 699


State 541

  638 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 638 (structure_name)


State 542

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 700
    '{'  shift, and go to state 701

    optional_struct_variable_declaration_list  go to state 702


State 543

  578 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 703


State 544

  577 let_variable_name_with_pos_list: "name" .
  579                                | "name" . "aka" "name"

    "aka"  shift, and go to state 704

    $default  reduce using rule 577 (let_variable_name_with_pos_list)


State 545

  580 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  581                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  587 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  588                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  589                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 705
    ':'  shift, and go to state 706
    '&'  shift, and go to state 418

    $default  reduce using rule 575 (optional_ref)

    optional_ref  go to state 707


State 546

  601 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 601 (global_variable_declaration_list)


State 547

  138 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 138 (metadata_argument_list)


State 548

  583 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 583 (global_let_variable_name_with_pos_list)


State 549

  590 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  591                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 369
    "implicit"             shift, and go to state 370
    "explicit"             shift, and go to state 371
    "=="                   shift, and go to state 372
    "<-"                   shift, and go to state 550
    "??"                   shift, and go to state 373
    ":="                   shift, and go to state 551
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 552
    '?'                    shift, and go to state 374
    '&'                    shift, and go to state 375
    '-'                    shift, and go to state 376
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 377

    SEMICOLON              go to state 708
    copy_or_move_or_clone  go to state 709


State 550

  573 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 573 (copy_or_move_or_clone)


State 551

  574 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 574 (copy_or_move_or_clone)


State 552

  572 copy_or_move_or_clone: '=' .

    $default  reduce using rule 572 (copy_or_move_or_clone)


State 553

  592 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 710
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 554

  720 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration . '>' $@55
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 711


State 555

  743 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration . '>' $@60
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 712


State 556

  746 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair . '>' $@62

    '>'  shift, and go to state 713


State 557

  706 table_type_pair: type_declaration .
  707                | type_declaration . c_or_s type_declaration
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '|'                    shift, and go to state 380
    ';'                    shift, and go to state 16

    $default  reduce using rule 706 (table_type_pair)

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 718


State 558

  821 make_struct_decl: "struct" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 819 ($@93)

    $@93  go to state 719


State 559

  824 make_struct_decl: "class" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 822 ($@95)

    $@95  go to state 720


State 560

  298 new_type_declaration: '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 296 ($@18)

    $@18  go to state 721


State 561

  300 expr_new: "new" new_type_declaration .
  301         | "new" new_type_declaration . '(' use_initializer ')'
  302         | "new" new_type_declaration . '(' expr_list ')'
  303         | "new" new_type_declaration . '(' make_struct_single ')'
  304         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 722

    $default  reduce using rule 300 (expr_new)


State 562

  299 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 299 (new_type_declaration)


State 563

  305 expr_new: "new" make_decl .

    $default  reduce using rule 305 (expr_new)


State 564

  340 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  341               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  342               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 723
    '('  shift, and go to state 724


State 565

  339 expr_type_decl: "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 337 ($@26)

    $@26  go to state 725


State 566

  840 make_dim_decl: "array" "struct" . '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 726


State 567

  843 make_dim_decl: "array" "tuple" . '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 727


State 568

  846 make_dim_decl: "array" "variant" . '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    '<'  shift, and go to state 728


State 569

  850 make_dim_decl: "array" '<' . $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    $default  reduce using rule 848 ($@109)

    $@109  go to state 729


State 570

  847 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 730
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 571

  860 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  861                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 731
    type_declaration_no_options_no_dim  go to state 277


State 572

  859 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 732
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_map_tuple          go to state 733
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    expr_map_tuple_list     go to state 734
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 573

  470 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 735
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 574

  330 expr_cast: "cast" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 328 ($@20)

    $@20  go to state 736


State 575

  333 expr_cast: "upcast" '<' . $@22 type_declaration_no_options '>' $@23 expr

    $default  reduce using rule 331 ($@22)

    $@22  go to state 737


State 576

  471 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 738
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 577

  336 expr_cast: "reinterpret" '<' . $@24 type_declaration_no_options '>' $@25 expr

    $default  reduce using rule 334 ($@24)

    $@24  go to state 739


State 578

  501 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 740
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 579

  854 make_dim_decl: "fixed_array" '<' . $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 852 ($@111)

    $@111  go to state 741


State 580

  851 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 742
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 581

  830 make_struct_decl: "default" '<' . $@99 type_declaration_no_options '>' $@100 use_initializer

    $default  reduce using rule 828 ($@99)

    $@99  go to state 743


State 582

  836 make_tuple_call: "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 834 ($@101)

    $@101  go to state 744


State 583

  833 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 745
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 584

  827 make_struct_decl: "variant" '<' . $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 825 ($@97)

    $@97  go to state 746


State 585

  502 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  503               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  504               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 747
    type_declaration_no_options_no_dim  go to state 277


State 586

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  455     | "++" expr .
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 455 (expr)


State 587

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  456     | "--" expr .
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 456 (expr)


State 588

  505 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 748
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 589

  506 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 749
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 590

  507 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 750
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 591

  508 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 751
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 592

  509 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 752
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 593

  511 expr_mtag: "$c" '(' . expr ')' '(' ')'
  512          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 753
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 594

   41 string_builder_body: string_builder_body . character_sequence
   42                    | string_builder_body . "{" expr optional_format_string "}"
   43 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 754
    "{"                   shift, and go to state 755

    character_sequence  go to state 756


State 595

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  432 expr: '-' expr .
  433     | expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 432 (expr)


State 596

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  431 expr: '+' expr .
  433     | expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 431 (expr)


State 597

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  469     | '*' expr .
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 469 (expr)


State 598

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  430 expr: '~' expr .
  433     | expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 430 (expr)


State 599

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  429 expr: '!' expr .
  433     | expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 429 (expr)


State 600

  866 array_comprehension: '[' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 757


State 601

  867 array_comprehension: '[' "iterator" . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 758


State 602

  837 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 759


State 603

  286 optional_expr_list: expr_list . optional_comma
  344 expr_list: expr_list . ',' expr

    ','  shift, and go to state 760

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 761


State 604

  343 expr_list: expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 343 (expr_list)


State 605

  804 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  805                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 762


State 606

  291 name_in_namespace: "name" .
  292                  | "name" . "::" "name"
  800 make_struct_fields: "name" . copy_or_move expr
  801                   | "name" . ":=" expr

    "<-"  shift, and go to state 763
    ":="  shift, and go to state 764
    "::"  shift, and go to state 96
    '='   shift, and go to state 765

    $default  reduce using rule 291 (name_in_namespace)

    copy_or_move  go to state 766


State 607

  344 expr_list: expr_list . ',' expr
  459 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 760

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 767


State 608

  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  810 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 768

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 769


State 609

  460 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 770


State 610

  350 block_or_lambda: '@' '@' .
  395 func_addr_expr: '@' '@' . func_addr_name
  398               | '@' '@' . '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  401               | '@' '@' . '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  520 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 771
    "$c"    shift, and go to state 772
    "name"  shift, and go to state 58
    '<'     shift, and go to state 773

    $default  reduce using rule 350 (block_or_lambda)

    name_in_namespace  go to state 774
    func_addr_name     go to state 775


State 611

  868 array_comprehension: '{' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 776


State 612

  858 make_table_decl: '{' $@113 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 777


State 613

  389 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  390                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  412 expr_call: name_in_namespace '(' . ')'
  413          | name_in_namespace '(' . "uninitialized" ')'
  414          | name_in_namespace '(' . make_struct_single ')'
  415          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  416          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "uninitialized"                   shift, and go to state 778
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 605
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 606
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 779
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 780
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 781
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 608
    make_struct_single      go to state 782
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 614

  155 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 783
    name_in_namespace             go to state 70


State 615

  360 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 784

    $default  reduce using rule 358 (optional_capture_list)

    optional_capture_list  go to state 785


State 616

  349 block_or_lambda: '@' .
  350                | '@' . '@'

    '@'  shift, and go to state 786

    $default  reduce using rule 349 (block_or_lambda)


State 617

  362 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 282 (expressions)

    expressions  go to state 787


State 618

  361 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 614

    $default  reduce using rule 154 (optional_annotation_list)

    optional_annotation_list  go to state 788


State 619

  262 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 262 (expr_call_pipe)


State 620

  477 expr: expr "is" . "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr "is" . basic_type_declaration
  479     | expr "is" . "name"
  519 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 789
    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "$f"        shift, and go to state 790
    "name"      shift, and go to state 791

    basic_type_declaration  go to state 792


State 621

  480 expr: expr "as" . "name"
  483     | expr "as" . "type" '<' $@36 type_declaration '>' $@37
  484     | expr "as" . basic_type_declaration
  517 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 793
    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "$f"        shift, and go to state 794
    "name"      shift, and go to state 795

    basic_type_declaration  go to state 796


State 622

  433 expr: expr "<<" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 797
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 623

  434 expr: expr ">>" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 798
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 624

  457 expr: expr "++" .

    $default  reduce using rule 457 (expr)


State 625

  458 expr: expr "--" .

    $default  reduce using rule 458 (expr)


State 626

  446 expr: expr "<=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 799
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 627

  447 expr: expr ">=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 800
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 628

  444 expr: expr "==" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 801
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 629

  445 expr: expr "!=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 802
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 630

  391 expr_method_call: expr "->" . "name" '(' ')'
  392                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 803


State 631

  473 expr: expr "??" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 804
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 632

  465 expr: expr "?." . "name"
  514 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 805
    "name"  shift, and go to state 806


State 633

  463 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 807
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 634

  497 expr: expr "<|" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 808
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 635

  498 expr: expr "|>" . expr
  499     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 809
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 810
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 636

  435 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 811
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 637

  436 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 812
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 638

  451 expr: expr "&&" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 813
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 639

  452 expr: expr "||" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 814
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 640

  453 expr: expr "^^" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 815
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 641

  454 expr: expr ".." . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 816
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 642

  474 expr: expr '?' . expr ':' expr
  485     | expr '?' . "as" "name"
  488     | expr '?' . "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr '?' . "as" basic_type_declaration
  518 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "as"                              shift, and go to state 817
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 818
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 643

  449 expr: expr '|' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 819
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 644

  450 expr: expr '^' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 820
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 645

  448 expr: expr '&' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 821
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 646

  442 expr: expr '<' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 822
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 647

  443 expr: expr '>' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 823
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 648

  438 expr: expr '-' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 824
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 649

  437 expr: expr '+' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 825
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 650

  439 expr: expr '*' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 826
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 651

  440 expr: expr '/' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 827
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 652

  441 expr: expr '%' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 828
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 653

  402 expr_field: expr '.' . "name"
  403           | expr '.' . '.' "name"
  404           | expr '.' . "name" '(' ')'
  405           | expr '.' . "name" '(' expr_list ')'
  406           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  407           | expr '.' . basic_type_declaration '(' ')'
  408           | expr '.' . basic_type_declaration '(' expr_list ')'
  411           | expr '.' . $@32 error $@33
  462 expr: expr '.' . '[' expr ']'
  464     | expr '.' . "?[" expr ']'
  466     | expr '.' . "?." "name"
  513 expr_mtag: expr '.' . "$f" '(' expr ')'
  515          | expr '.' . '.' "$f" '(' expr ')'
  516          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "?."        shift, and go to state 829
    "?["        shift, and go to state 830
    "$f"        shift, and go to state 831
    "name"      shift, and go to state 832
    '.'         shift, and go to state 833
    '['         shift, and go to state 834

    $default  reduce using rule 409 ($@32)

    $@32                    go to state 835
    basic_type_declaration  go to state 836


State 654

  461 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 837
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 655

  721 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 721 (type_declaration_no_options_no_dim)


State 656

  417 expr_call: basic_type_declaration '(' . ')'
  418          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 838
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 839
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 657

  749 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration . '>' $@64
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 840


State 658

  739 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration . '>' $@58
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 841


State 659

  694 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 694 (auto_type_declaration)


State 660

  696 bitfield_bits: "name" .

    $default  reduce using rule 696 (bitfield_bits)


State 661

  697 bitfield_bits: bitfield_bits . ';' "name"
  703 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits . '>' $@53

    '>'  shift, and go to state 842
    ';'  shift, and go to state 843


State 662

  753 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration . '>' $@66
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 844


State 663

  756 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 845


State 664

  760 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration . '>' $@70
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 846


State 665

  763 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 847


State 666

  767 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration . '>' $@74
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 848


State 667

  770 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list . optional_function_type '>' $@76

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 849


State 668

  291 name_in_namespace: "name" .
  292                  | "name" . "::" "name"
  551 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 850

    $default  reduce using rule 291 (name_in_namespace)


State 669

  552 tuple_type_list: tuple_type .

    $default  reduce using rule 552 (tuple_type_list)


State 670

  553 tuple_type_list: tuple_type_list . c_or_s tuple_type
  773 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list . '>' $@78

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 851
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 852


State 671

  550 tuple_type: type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 550 (tuple_type)


State 672

  557 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 853


State 673

  558 variant_type_list: variant_type .

    $default  reduce using rule 558 (variant_type_list)


State 674

  559 variant_type_list: variant_type_list . c_or_s variant_type
  776 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list . '>' $@80

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 854
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 855


State 675

  695 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 695 (auto_type_declaration)


State 676

  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    type_declaration_no_options_list    go to state 856
    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 857


State 677

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 858


State 678

  725 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 679

  708 dim_list: '[' expr ']' .

    $default  reduce using rule 708 (dim_list)


State 680

  711 dim_list: dim_list '[' ']' .

    $default  reduce using rule 711 (dim_list)


State 681

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  710 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ']'    shift, and go to state 859


State 682

  699 bitfield_alias_bits: "name" .

    $default  reduce using rule 699 (bitfield_alias_bits)


State 683

  700 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits . optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 714
    ','                shift, and go to state 715

    $default  reduce using rule 624 (optional_commas)

    COMMA            go to state 860
    commas           go to state 861
    optional_commas  go to state 862


State 684

  555 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 555 (tuple_alias_type_list)


State 685

  556 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 863
    semis           go to state 864
    optional_semis  go to state 865


State 686

  561 variant_alias_type_list: variant_type .

    $default  reduce using rule 561 (variant_alias_type_list)


State 687

  562 variant_alias_type_list: variant_alias_type_list . semis variant_type
  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list . optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 863
    semis           go to state 866
    optional_semis  go to state 867


State 688

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  544 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 868


State 689

  653 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 869


State 690

  652 variable_name_with_pos_list: "name" .
  654                            | "name" . "aka" "name"

    "aka"  shift, and go to state 870

    $default  reduce using rule 652 (variable_name_with_pos_list)


State 691

  542 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 542 (function_argument_declaration_no_type)


State 692

  543 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 543 (function_argument_declaration_type)


State 693

  565 variable_declaration_no_type: variable_name_with_pos_list .
  566                             | variable_name_with_pos_list . '&'
  567                             | variable_name_with_pos_list . copy_or_move expr
  568 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  569                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  655 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  656                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 763
    ','   shift, and go to state 871
    '='   shift, and go to state 765
    ':'   shift, and go to state 872
    '&'   shift, and go to state 873

    $default  reduce using rule 565 (variable_declaration_no_type)

    copy_or_move  go to state 874


State 694

  547 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 547 (function_argument_list)


State 695

  549 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 549 (function_argument_list)


State 696

  548 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 548 (function_argument_list)


State 697

  261 expression_block: $@16 '{' expressions . $@17 '}' expression_block_finally
  283 expressions: expressions . expression_any
  284            | expressions . error

    error                             shift, and go to state 875
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "try"                             shift, and go to state 878
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 879
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 880
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "pass"                            shift, and go to state 882
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 883
    "goto"                            shift, and go to state 884
    "unsafe"                          shift, and go to state 885
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 260 ($@17)

    SEMICOLON                         go to state 887
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 888
    expression_goto                   go to state 889
    expression_if_one_liner           go to state 890
    expression_if_then_else           go to state 891
    $@9                               go to state 892
    expression_if_then_else_oneliner  go to state 893
    expression_for_loop               go to state 894
    $@10                              go to state 895
    expression_unsafe                 go to state 896
    expression_while_loop             go to state 897
    $@11                              go to state 898
    expression_with                   go to state 899
    $@12                              go to state 900
    expression_with_alias             go to state 901
    $@17                              go to state 902
    expr_call_pipe                    go to state 474
    expression_any                    go to state 903
    name_in_namespace                 go to state 475
    expression_delete                 go to state 904
    expr_new                          go to state 476
    expression_break                  go to state 905
    expression_continue               go to state 906
    expression_return                 go to state 907
    expression_yield                  go to state 908
    expression_try_catch              go to state 909
    kwd_let                           go to state 910
    expression_let                    go to state 911
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 912
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 913
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 698

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 . enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 914

    $default  reduce using rule 609 (enum_list)

    enum_expression  go to state 915
    enum_list        go to state 916


State 699

  635 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 635 (optional_structure_parent)


State 700

  646 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 646 (optional_struct_variable_declaration_list)


State 701

  647 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 534 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 917


State 702

  651 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list .

    $default  reduce using rule 651 (structure_declaration)


State 703

  578 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 918
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 704

  579 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 919


State 705

  580 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  581                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 920


State 706

  587 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  588                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 921
    type_declaration_no_options_no_dim  go to state 277


State 707

  589 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 550
    ":="  shift, and go to state 551
    '='   shift, and go to state 552

    copy_or_move_or_clone  go to state 922


State 708

  590 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 590 (global_let_variable_declaration)


State 709

  591 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 923
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 710

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  592 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 620
    "as"                   shift, and go to state 621
    "<<"                   shift, and go to state 622
    ">>"                   shift, and go to state 623
    "++"                   shift, and go to state 624
    "--"                   shift, and go to state 625
    "<="                   shift, and go to state 626
    ">="                   shift, and go to state 627
    "=="                   shift, and go to state 628
    "!="                   shift, and go to state 629
    "->"                   shift, and go to state 630
    "??"                   shift, and go to state 631
    "?."                   shift, and go to state 632
    "?["                   shift, and go to state 633
    "<|"                   shift, and go to state 634
    "|>"                   shift, and go to state 635
    "<<<"                  shift, and go to state 636
    ">>>"                  shift, and go to state 637
    "&&"                   shift, and go to state 638
    "||"                   shift, and go to state 639
    "^^"                   shift, and go to state 640
    ".."                   shift, and go to state 641
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 642
    '|'                    shift, and go to state 643
    '^'                    shift, and go to state 644
    '&'                    shift, and go to state 645
    '<'                    shift, and go to state 646
    '>'                    shift, and go to state 647
    '-'                    shift, and go to state 648
    '+'                    shift, and go to state 649
    '*'                    shift, and go to state 650
    '/'                    shift, and go to state 651
    '%'                    shift, and go to state 652
    '.'                    shift, and go to state 653
    '['                    shift, and go to state 654
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 924


State 711

  720 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 719 ($@55)

    $@55  go to state 925


State 712

  743 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 742 ($@60)

    $@60  go to state 926


State 713

  746 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' . $@62

    $default  reduce using rule 745 ($@62)

    $@62  go to state 927


State 714

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 715

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 716

  704 c_or_s: COMMA .

    $default  reduce using rule 704 (c_or_s)


State 717

  705 c_or_s: SEMICOLON .

    $default  reduce using rule 705 (c_or_s)


State 718

  707 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 928


State 719

  821 make_struct_decl: "struct" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 929
    type_declaration_no_options_no_dim  go to state 277


State 720

  824 make_struct_decl: "class" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 930
    type_declaration_no_options_no_dim  go to state 277


State 721

  298 new_type_declaration: '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 931


State 722

  301 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  302         | "new" new_type_declaration '(' . expr_list ')'
  303         | "new" new_type_declaration '(' . make_struct_single ')'
  304         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "uninitialized"                   shift, and go to state 932
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 605
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 606
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 817 (use_initializer)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 933
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 608
    make_struct_single      go to state 934
    use_initializer         go to state 935
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 723

  341 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  342               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 936


State 724

  340 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 937
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 725

  339 expr_type_decl: "type" '<' $@26 . type_declaration '>' $@27

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 938


State 726

  840 make_dim_decl: "array" "struct" '<' . $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 838 ($@103)

    $@103  go to state 939


State 727

  843 make_dim_decl: "array" "tuple" '<' . $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 841 ($@105)

    $@105  go to state 940


State 728

  846 make_dim_decl: "array" "variant" '<' . $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    $default  reduce using rule 844 ($@107)

    $@107  go to state 941


State 729

  850 make_dim_decl: "array" '<' $@109 . type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 942
    type_declaration_no_options_no_dim  go to state 277


State 730

  344 expr_list: expr_list . ',' expr
  847 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 760

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 943


State 731

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  860 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  861                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 369
    "implicit"             shift, and go to state 370
    "explicit"             shift, and go to state 371
    "=="                   shift, and go to state 372
    "??"                   shift, and go to state 373
    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '?'                    shift, and go to state 374
    '&'                    shift, and go to state 375
    '>'                    shift, and go to state 944
    '-'                    shift, and go to state 376
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 377

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 945


State 732

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  831 make_map_tuple: expr . "=>" expr
  832               | expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "=>"   shift, and go to state 946
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 832 (make_map_tuple)


State 733

  855 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 855 (expr_map_tuple_list)


State 734

  856 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  859 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 947

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 948


State 735

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  470     | "deref" '(' expr . ')'
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 949


State 736

  330 expr_cast: "cast" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 950
    type_declaration_no_options_no_dim  go to state 277


State 737

  333 expr_cast: "upcast" '<' $@22 . type_declaration_no_options '>' $@23 expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 951
    type_declaration_no_options_no_dim  go to state 277


State 738

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  471     | "addr" '(' expr . ')'
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 952


State 739

  336 expr_cast: "reinterpret" '<' $@24 . type_declaration_no_options '>' $@25 expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 953
    type_declaration_no_options_no_dim  go to state 277


State 740

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  501     | "unsafe" '(' expr . ')'
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 954


State 741

  854 make_dim_decl: "fixed_array" '<' $@111 . type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 955
    type_declaration_no_options_no_dim  go to state 277


State 742

  344 expr_list: expr_list . ',' expr
  851 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 760

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 956


State 743

  830 make_struct_decl: "default" '<' $@99 . type_declaration_no_options '>' $@100 use_initializer

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 957
    type_declaration_no_options_no_dim  go to state 277


State 744

  836 make_tuple_call: "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 668
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 669
    tuple_type_list                     go to state 958
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 671


State 745

  344 expr_list: expr_list . ',' expr
  833 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 760

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 959


State 746

  827 make_struct_decl: "variant" '<' $@97 . variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 672

    variant_type       go to state 673
    variant_type_list  go to state 960


State 747

  502 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  503               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  504               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 961
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 748

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  505 expr_mtag: "$$" '(' expr . ')'
  513          | expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 962


State 749

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  506 expr_mtag: "$i" '(' expr . ')'
  513          | expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 963


State 750

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  507 expr_mtag: "$v" '(' expr . ')'
  513          | expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 964


State 751

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  508 expr_mtag: "$b" '(' expr . ')'
  513          | expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 965


State 752

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  509 expr_mtag: "$a" '(' expr . ')'
  513          | expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 966


State 753

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  511 expr_mtag: "$c" '(' expr . ')' '(' ')'
  512          | "$c" '(' expr . ')' '(' expr_list ')'
  513          | expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 967


State 754

   43 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 43 (string_builder)


State 755

   42 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 968
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 756

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   41 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226

    $default  reduce using rule 41 (string_builder_body)


State 757

  866 array_comprehension: '[' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 969
    "name"  shift, and go to state 970
    '('     shift, and go to state 971

    for_variable_name_with_pos_list  go to state 972


State 758

  867 array_comprehension: '[' "iterator" "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 973


State 759

  837 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 837 (make_dim_decl)


State 760

  344 expr_list: expr_list ',' . expr
  865 optional_comma: ',' .

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 865 (optional_comma)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 974
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 761

  286 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 286 (optional_expr_list)


State 762

  804 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  805                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 975
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 763

  564 copy_or_move: "<-" .

    $default  reduce using rule 564 (copy_or_move)


State 764

  801 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 976
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 765

  563 copy_or_move: '=' .

    $default  reduce using rule 563 (copy_or_move)


State 766

  800 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 977
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 767

  459 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 978


State 768

  802 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  803                   | make_struct_fields ',' . "name" ":=" expr
  806                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  865 optional_comma: ',' .

    "$f"    shift, and go to state 979
    "name"  shift, and go to state 980

    $default  reduce using rule 865 (optional_comma)


State 769

  810 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 810 (make_struct_single)


State 770

  460 expr: '(' make_struct_single ')' .

    $default  reduce using rule 460 (expr)


State 771

  394 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 981


State 772

  520 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 982


State 773

  398 func_addr_expr: '@' '@' '<' . $@28 type_declaration_no_options '>' $@29 func_addr_name
  401               | '@' '@' '<' . $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    ':'       reduce using rule 399 ($@30)
    '>'       reduce using rule 399 ($@30)
    '('       reduce using rule 399 ($@30)
    $default  reduce using rule 396 ($@28)

    $@28  go to state 983
    $@30  go to state 984


State 774

  393 func_addr_name: name_in_namespace .

    $default  reduce using rule 393 (func_addr_name)


State 775

  395 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 395 (func_addr_expr)


State 776

  868 array_comprehension: '{' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 969
    "name"  shift, and go to state 970
    '('     shift, and go to state 971

    for_variable_name_with_pos_list  go to state 985


State 777

  858 make_table_decl: '{' $@113 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 287 (optional_expr_map_tuple_list)

    string_builder                go to state 472
    expr_reader                   go to state 473
    expr_call_pipe                go to state 474
    optional_expr_map_tuple_list  go to state 986
    name_in_namespace             go to state 475
    expr_new                      go to state 476
    expr_cast                     go to state 477
    expr_type_decl                go to state 478
    expr_type_info                go to state 479
    block_or_lambda               go to state 480
    expr_full_block               go to state 481
    expr_numeric_const            go to state 482
    expr_named_call               go to state 483
    expr_method_call              go to state 484
    func_addr_expr                go to state 485
    expr_field                    go to state 486
    expr_call                     go to state 487
    expr                          go to state 732
    expr_generator                go to state 489
    expr_mtag                     go to state 490
    basic_type_declaration        go to state 491
    make_decl                     go to state 492
    make_struct_decl              go to state 493
    make_map_tuple                go to state 733
    make_tuple_call               go to state 494
    make_dim_decl                 go to state 495
    expr_map_tuple_list           go to state 987
    make_table_decl               go to state 496
    array_comprehension           go to state 497


State 778

  413 expr_call: name_in_namespace '(' "uninitialized" . ')'
  415          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988
    ')'     shift, and go to state 989

    make_struct_fields  go to state 608
    make_struct_single  go to state 990


State 779

  389 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  837 make_dim_decl: '[' . optional_expr_list ']'
  866 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  867                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 600
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 601
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 605
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 606
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 285 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 602
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 603
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 991
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 780

  412 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 412 (expr_call)


State 781

  344 expr_list: expr_list . ',' expr
  390 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  416 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 992
    ')'  shift, and go to state 993


State 782

  414 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 994


State 783

  153 annotation_list: annotation_list . ',' annotation_declaration
  155 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 995


State 784

  359 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 996


State 785

  360 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 997


State 786

  350 block_or_lambda: '@' '@' .

    $default  reduce using rule 350 (block_or_lambda)


State 787

  283 expressions: expressions . expression_any
  284            | expressions . error
  362 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 875
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "try"                             shift, and go to state 878
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 879
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 880
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "pass"                            shift, and go to state 882
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 883
    "goto"                            shift, and go to state 884
    "unsafe"                          shift, and go to state 885
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471
    '}'                               shift, and go to state 998

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)

    SEMICOLON                         go to state 887
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 888
    expression_goto                   go to state 889
    expression_if_one_liner           go to state 890
    expression_if_then_else           go to state 891
    $@9                               go to state 892
    expression_if_then_else_oneliner  go to state 893
    expression_for_loop               go to state 894
    $@10                              go to state 895
    expression_unsafe                 go to state 896
    expression_while_loop             go to state 897
    $@11                              go to state 898
    expression_with                   go to state 899
    $@12                              go to state 900
    expression_with_alias             go to state 901
    expr_call_pipe                    go to state 474
    expression_any                    go to state 903
    name_in_namespace                 go to state 475
    expression_delete                 go to state 904
    expr_new                          go to state 476
    expression_break                  go to state 905
    expression_continue               go to state 906
    expression_return                 go to state 907
    expression_yield                  go to state 908
    expression_try_catch              go to state 909
    kwd_let                           go to state 910
    expression_let                    go to state 911
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 912
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 913
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 788

  361 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 784

    $default  reduce using rule 358 (optional_capture_list)

    optional_capture_list  go to state 999


State 789

  477 expr: expr "is" "type" . '<' $@34 type_declaration_no_options '>' $@35

    '<'  shift, and go to state 1000


State 790

  519 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1001


State 791

  479 expr: expr "is" "name" .

    $default  reduce using rule 479 (expr)


State 792

  478 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 478 (expr)


State 793

  483 expr: expr "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 1002


State 794

  517 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1003


State 795

  480 expr: expr "as" "name" .

    $default  reduce using rule 480 (expr)


State 796

  484 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 484 (expr)


State 797

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  433     | expr "<<" expr .
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '-'   shift, and go to state 648
    '+'   shift, and go to state 649
    '*'   shift, and go to state 650
    '/'   shift, and go to state 651
    '%'   shift, and go to state 652
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 433 (expr)


State 798

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  434     | expr ">>" expr .
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '-'   shift, and go to state 648
    '+'   shift, and go to state 649
    '*'   shift, and go to state 650
    '/'   shift, and go to state 651
    '%'   shift, and go to state 652
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 434 (expr)


State 799

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  446     | expr "<=" expr .
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 446 (expr)


State 800

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  447     | expr ">=" expr .
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 447 (expr)


State 801

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  444     | expr "==" expr .
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 444 (expr)


State 802

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  445     | expr "!=" expr .
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 445 (expr)


State 803

  391 expr_method_call: expr "->" "name" . '(' ')'
  392                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1004


State 804

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  473     | expr "??" expr .
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 473 (expr)


State 805

  514 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1005


State 806

  465 expr: expr "?." "name" .

    $default  reduce using rule 465 (expr)


State 807

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  463     | expr "?[" expr . ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ']'    shift, and go to state 1006


State 808

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  497     | expr "<|" expr .
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 497 (expr)


State 809

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  498     | expr "|>" expr .
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 630
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 498 (expr)


State 810

  417 expr_call: basic_type_declaration . '(' ')'
  418          | basic_type_declaration . '(' expr_list ')'
  499 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 656

    $default  reduce using rule 499 (expr)


State 811

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  435     | expr "<<<" expr .
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '-'   shift, and go to state 648
    '+'   shift, and go to state 649
    '*'   shift, and go to state 650
    '/'   shift, and go to state 651
    '%'   shift, and go to state 652
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 435 (expr)


State 812

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  436     | expr ">>>" expr .
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '-'   shift, and go to state 648
    '+'   shift, and go to state 649
    '*'   shift, and go to state 650
    '/'   shift, and go to state 651
    '%'   shift, and go to state 652
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 436 (expr)


State 813

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  451     | expr "&&" expr .
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 451 (expr)


State 814

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  452     | expr "||" expr .
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "^^"   shift, and go to state 640
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 452 (expr)


State 815

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  453     | expr "^^" expr .
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 453 (expr)


State 816

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  454     | expr ".." expr .
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    ".."  error (nonassociative)

    $default  reduce using rule 454 (expr)


State 817

  485 expr: expr '?' "as" . "name"
  488     | expr '?' "as" . "type" '<' $@38 type_declaration '>' $@39
  489     | expr '?' "as" . basic_type_declaration
  518 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1007
    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "$f"        shift, and go to state 1008
    "name"      shift, and go to state 1009

    basic_type_declaration  go to state 1010


State 818

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  474     | expr '?' expr . ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    ':'    shift, and go to state 1011
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654


State 819

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  449     | expr '|' expr .
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 449 (expr)


State 820

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  450     | expr '^' expr .
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 450 (expr)


State 821

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  448     | expr '&' expr .
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 448 (expr)


State 822

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  442     | expr '<' expr .
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 442 (expr)


State 823

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  443     | expr '>' expr .
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 443 (expr)


State 824

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  438     | expr '-' expr .
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '*'   shift, and go to state 650
    '/'   shift, and go to state 651
    '%'   shift, and go to state 652
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 438 (expr)


State 825

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  437     | expr '+' expr .
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '*'   shift, and go to state 650
    '/'   shift, and go to state 651
    '%'   shift, and go to state 652
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 437 (expr)


State 826

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  439     | expr '*' expr .
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 439 (expr)


State 827

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  440     | expr '/' expr .
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 440 (expr)


State 828

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  441     | expr '%' expr .
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 620
    "as"  shift, and go to state 621
    "++"  shift, and go to state 624
    "--"  shift, and go to state 625
    "->"  shift, and go to state 630
    "??"  shift, and go to state 631
    "?."  shift, and go to state 632
    "?["  shift, and go to state 633
    "<|"  shift, and go to state 634
    "|>"  shift, and go to state 635
    '.'   shift, and go to state 653
    '['   shift, and go to state 654

    $default  reduce using rule 441 (expr)


State 829

  466 expr: expr '.' "?." . "name"
  516 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1012
    "name"  shift, and go to state 1013


State 830

  464 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1014
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 831

  513 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1015


State 832

  402 expr_field: expr '.' "name" .
  404           | expr '.' "name" . '(' ')'
  405           | expr '.' "name" . '(' expr_list ')'
  406           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1016

    $default  reduce using rule 402 (expr_field)


State 833

  403 expr_field: expr '.' '.' . "name"
  515 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1017
    "name"  shift, and go to state 1018


State 834

  462 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1019
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 835

  411 expr_field: expr '.' $@32 . error $@33

    error  shift, and go to state 1020


State 836

  407 expr_field: expr '.' basic_type_declaration . '(' ')'
  408           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1021


State 837

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  461     | expr '[' expr . ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ']'    shift, and go to state 1022


State 838

  417 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 417 (expr_call)


State 839

  344 expr_list: expr_list . ',' expr
  418 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1024


State 840

  749 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 748 ($@64)

    $@64  go to state 1025


State 841

  739 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 738 ($@58)

    $@58  go to state 1026


State 842

  703 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' . $@53

    $default  reduce using rule 702 ($@53)

    $@53  go to state 1027


State 843

  697 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1028


State 844

  753 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 752 ($@66)

    $@66  go to state 1029


State 845

  756 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1030


State 846

  760 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 759 ($@70)

    $@70  go to state 1031


State 847

  763 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1032


State 848

  767 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' . $@74

    $default  reduce using rule 766 ($@74)

    $@74  go to state 1033


State 849

  770 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type . '>' $@76

    '>'  shift, and go to state 1034


State 850

  551 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1035


State 851

  773 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' . $@78

    $default  reduce using rule 772 ($@78)

    $@78  go to state 1036


State 852

  553 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 668
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 1037
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 671


State 853

  557 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1038


State 854

  776 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' . $@80

    $default  reduce using rule 775 ($@80)

    $@80  go to state 1039


State 855

  559 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 672

    variant_type  go to state 1040


State 856

  290 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 1041
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 1042


State 857

  289 type_declaration_no_options_list: type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 289 (type_declaration_no_options_list)


State 858

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 859

  710 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 710 (dim_list)


State 860

  607 commas: COMMA .

    $default  reduce using rule 607 (commas)


State 861

  608 commas: commas . COMMA
  625 optional_commas: commas .
  700 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1043
    "new line, comma"  shift, and go to state 714
    ','                shift, and go to state 715

    $default  reduce using rule 625 (optional_commas)

    COMMA  go to state 1044


State 862

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas . $@92 '}'

    $default  reduce using rule 793 ($@92)

    $@92  go to state 1045


State 863

   84 semis: SEMICOLON .

    $default  reduce using rule 84 (semis)


State 864

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  556 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 230
    "array"                shift, and go to state 231
    "table"                shift, and go to state 232
    "typedecl"             shift, and go to state 233
    "iterator"             shift, and go to state 234
    "smart_ptr"            shift, and go to state 235
    "bool"                 shift, and go to state 236
    "void"                 shift, and go to state 237
    "string"               shift, and go to state 238
    "auto"                 shift, and go to state 239
    "int"                  shift, and go to state 240
    "int2"                 shift, and go to state 241
    "int3"                 shift, and go to state 242
    "int4"                 shift, and go to state 243
    "uint"                 shift, and go to state 244
    "bitfield"             shift, and go to state 245
    "uint2"                shift, and go to state 246
    "uint3"                shift, and go to state 247
    "uint4"                shift, and go to state 248
    "float"                shift, and go to state 249
    "float2"               shift, and go to state 250
    "float3"               shift, and go to state 251
    "float4"               shift, and go to state 252
    "range"                shift, and go to state 253
    "urange"               shift, and go to state 254
    "range64"              shift, and go to state 255
    "urange64"             shift, and go to state 256
    "block"                shift, and go to state 257
    "int64"                shift, and go to state 258
    "uint64"               shift, and go to state 259
    "double"               shift, and go to state 260
    "function"             shift, and go to state 261
    "lambda"               shift, and go to state 262
    "int8"                 shift, and go to state 263
    "uint8"                shift, and go to state 264
    "int16"                shift, and go to state 265
    "uint16"               shift, and go to state 266
    "tuple"                shift, and go to state 267
    "variant"              shift, and go to state 268
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 269
    "name"                 shift, and go to state 668
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 270
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON                           go to state 1046
    name_in_namespace                   go to state 271
    tuple_type                          go to state 1047
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 671


State 865

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 783 ($@84)

    $@84  go to state 1048


State 866

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  562 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 672
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON     go to state 1046
    variant_type  go to state 1049


State 867

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis . $@88 '}'

    $default  reduce using rule 788 ($@88)

    $@88  go to state 1050


State 868

  544 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 544 (function_argument_declaration_type)


State 869

  653 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1051
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 870

  654 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1052


State 871

  655 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  656                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1053


State 872

  568 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  569                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1054


State 873

  566 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 566 (variable_declaration_no_type)


State 874

  567 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1055
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 875

  284 expressions: expressions error .

    $default  reduce using rule 284 (expressions)


State 876

  308 expression_return: "return" .
  309                  | "return" . expr
  310                  | "return" . "<-" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "<-"                              shift, and go to state 1056
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 308 (expression_return)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1057
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 877

  306 expression_break: "break" .

    $default  reduce using rule 306 (expression_break)


State 878

  313 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1058
    $@16              go to state 400


State 879

  294 expression_delete: "delete" . expr
  295                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "explicit"                        shift, and go to state 1059
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1060
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 880

  115 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1061


State 881

  307 expression_continue: "continue" .

    $default  reduce using rule 307 (expression_continue)


State 882

  281 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1062


State 883

   63 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1063


State 884

   64 expression_goto: "goto" . "label" "integer constant"
   65                | "goto" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 1064
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1065
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 885

  110 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  501 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 578

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1066


State 886

  311 expression_yield: "yield" . expr
  312                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "<-"                              shift, and go to state 1067
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1068
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 887

  263 expression_any: SEMICOLON .

    $default  reduce using rule 263 (expression_any)


State 888

  279 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1069


State 889

  280 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1070


State 890

  100 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1071


State 891

  276 expression_any: expression_if_then_else .

    $default  reduce using rule 276 (expression_any)


State 892

   99 expression_if_then_else: $@9 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1072
    "static_if"  shift, and go to state 1073

    if_or_static_if  go to state 1074


State 893

  277 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 277 (expression_any)


State 894

  271 expression_any: expression_for_loop .

    $default  reduce using rule 271 (expression_any)


State 895

  109 expression_for_loop: $@10 . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1075


State 896

  268 expression_any: expression_unsafe .

    $default  reduce using rule 268 (expression_any)


State 897

  267 expression_any: expression_while_loop .

    $default  reduce using rule 267 (expression_any)


State 898

  112 expression_while_loop: $@11 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1076


State 899

  269 expression_any: expression_with .

    $default  reduce using rule 269 (expression_any)


State 900

  114 expression_with: $@12 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1077


State 901

  270 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1078


State 902

  261 expression_block: $@16 '{' expressions $@17 . '}' expression_block_finally

    '}'  shift, and go to state 1079


State 903

  283 expressions: expressions expression_any .

    $default  reduce using rule 283 (expressions)


State 904

  265 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1080


State 905

   82 expression_if_one_liner: expression_break .
  272 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 82 (expression_if_one_liner)

    SEMICOLON  go to state 1081


State 906

   83 expression_if_one_liner: expression_continue .
  273 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 83 (expression_if_one_liner)

    SEMICOLON  go to state 1082


State 907

   80 expression_if_one_liner: expression_return .
  274 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1083


State 908

   81 expression_if_one_liner: expression_yield .
  275 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1084


State 909

  278 expression_any: expression_try_catch .

    $default  reduce using rule 278 (expression_any)


State 910

  325 expression_let: kwd_let . optional_in_scope let_variable_declaration
  326               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  327               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1085

    $default  reduce using rule 320 (optional_in_scope)

    optional_in_scope  go to state 1086


State 911

  266 expression_any: expression_let .

    $default  reduce using rule 266 (expression_any)


State 912

  264 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1087


State 913

   79 expression_if_one_liner: expr .
  370 expr_assign: expr .
  371            | expr . '=' expr
  372            | expr . "<-" expr
  373            | expr . ":=" expr
  374            | expr . "&=" expr
  375            | expr . "|=" expr
  376            | expr . "^=" expr
  377            | expr . "&&=" expr
  378            | expr . "||=" expr
  379            | expr . "^^=" expr
  380            | expr . "+=" expr
  381            | expr . "-=" expr
  382            | expr . "*=" expr
  383            | expr . "/=" expr
  384            | expr . "%=" expr
  385            | expr . "<<=" expr
  386            | expr . ">>=" expr
  387            | expr . "<<<=" expr
  388            | expr . ">>>=" expr
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 620
    "as"    shift, and go to state 621
    "+="    shift, and go to state 1088
    "-="    shift, and go to state 1089
    "/="    shift, and go to state 1090
    "*="    shift, and go to state 1091
    "%="    shift, and go to state 1092
    "&="    shift, and go to state 1093
    "|="    shift, and go to state 1094
    "^="    shift, and go to state 1095
    "<<"    shift, and go to state 622
    ">>"    shift, and go to state 623
    "++"    shift, and go to state 624
    "--"    shift, and go to state 625
    "<="    shift, and go to state 626
    "<<="   shift, and go to state 1096
    ">>="   shift, and go to state 1097
    ">="    shift, and go to state 627
    "=="    shift, and go to state 628
    "!="    shift, and go to state 629
    "->"    shift, and go to state 630
    "<-"    shift, and go to state 1098
    "??"    shift, and go to state 631
    "?."    shift, and go to state 632
    "?["    shift, and go to state 633
    "<|"    shift, and go to state 634
    "|>"    shift, and go to state 635
    ":="    shift, and go to state 1099
    "<<<"   shift, and go to state 636
    ">>>"   shift, and go to state 637
    "<<<="  shift, and go to state 1100
    ">>>="  shift, and go to state 1101
    "&&"    shift, and go to state 638
    "||"    shift, and go to state 639
    "^^"    shift, and go to state 640
    "&&="   shift, and go to state 1102
    "||="   shift, and go to state 1103
    "^^="   shift, and go to state 1104
    ".."    shift, and go to state 641
    '='     shift, and go to state 1105
    '?'     shift, and go to state 642
    '|'     shift, and go to state 643
    '^'     shift, and go to state 644
    '&'     shift, and go to state 645
    '<'     shift, and go to state 646
    '>'     shift, and go to state 647
    '-'     shift, and go to state 648
    '+'     shift, and go to state 649
    '*'     shift, and go to state 650
    '/'     shift, and go to state 651
    '%'     shift, and go to state 652
    '.'     shift, and go to state 653
    '['     shift, and go to state 654

    "if"      reduce using rule 79 (expression_if_one_liner)
    $default  reduce using rule 370 (expr_assign)


State 914

  605 enum_expression: "name" .
  606                | "name" . '=' expr

    '='  shift, and go to state 1106

    $default  reduce using rule 605 (enum_expression)


State 915

  610 enum_list: enum_expression .

    $default  reduce using rule 610 (enum_list)


State 916

  611 enum_list: enum_list . commas enum_expression
  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list . optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 714
    ','                shift, and go to state 715

    $default  reduce using rule 624 (optional_commas)

    COMMA            go to state 860
    commas           go to state 1107
    optional_commas  go to state 1108


State 917

  535 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  537                                 | struct_variable_declaration_list . $@40 structure_variable_declaration SEMICOLON
  539                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  541                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block
  647 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1109
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1110

    "def"     reduce using rule 156 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 536 ($@40)

    optional_annotation_list_with_emit_semis  go to state 1111
    $@40                                      go to state 1112


State 918

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  578 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1113


State 919

  579 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 579 (let_variable_name_with_pos_list)


State 920

  580 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  581                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1114

    $default  reduce using rule 580 (let_variable_name_with_pos_list)


State 921

  587 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  588                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 369
    "implicit"             shift, and go to state 370
    "explicit"             shift, and go to state 371
    "=="                   shift, and go to state 372
    "<-"                   shift, and go to state 550
    "??"                   shift, and go to state 373
    ":="                   shift, and go to state 551
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 552
    '?'                    shift, and go to state 374
    '&'                    shift, and go to state 375
    '-'                    shift, and go to state 376
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 377

    SEMICOLON              go to state 1115
    copy_or_move_or_clone  go to state 1116


State 922

  589 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1117
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 923

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  591 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 620
    "as"                   shift, and go to state 621
    "<<"                   shift, and go to state 622
    ">>"                   shift, and go to state 623
    "++"                   shift, and go to state 624
    "--"                   shift, and go to state 625
    "<="                   shift, and go to state 626
    ">="                   shift, and go to state 627
    "=="                   shift, and go to state 628
    "!="                   shift, and go to state 629
    "->"                   shift, and go to state 630
    "??"                   shift, and go to state 631
    "?."                   shift, and go to state 632
    "?["                   shift, and go to state 633
    "<|"                   shift, and go to state 634
    "|>"                   shift, and go to state 635
    "<<<"                  shift, and go to state 636
    ">>>"                  shift, and go to state 637
    "&&"                   shift, and go to state 638
    "||"                   shift, and go to state 639
    "^^"                   shift, and go to state 640
    ".."                   shift, and go to state 641
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 642
    '|'                    shift, and go to state 643
    '^'                    shift, and go to state 644
    '&'                    shift, and go to state 645
    '<'                    shift, and go to state 646
    '>'                    shift, and go to state 647
    '-'                    shift, and go to state 648
    '+'                    shift, and go to state 649
    '*'                    shift, and go to state 650
    '/'                    shift, and go to state 651
    '%'                    shift, and go to state 652
    '.'                    shift, and go to state 653
    '['                    shift, and go to state 654
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1118


State 924

  592 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 592 (global_let_variable_declaration)


State 925

  720 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 926

  743 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 927

  746 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62 .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 928

  707 table_type_pair: type_declaration c_or_s type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 707 (table_type_pair)


State 929

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1119
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 930

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1120
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 931

  298 new_type_declaration: '<' $@18 type_declaration . '>' $@19
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1121


State 932

  304 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  818 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988

    $default  reduce using rule 818 (use_initializer)

    make_struct_fields  go to state 608
    make_struct_single  go to state 1122


State 933

  302 expr_new: "new" new_type_declaration '(' expr_list . ')'
  344 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1123


State 934

  303 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1124


State 935

  301 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1125


State 936

  341 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  342               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 1126
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 1127


State 937

  340 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1128


State 938

  339 expr_type_decl: "type" '<' $@26 type_declaration . '>' $@27
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1129


State 939

  840 make_dim_decl: "array" "struct" '<' $@103 . type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1130
    type_declaration_no_options_no_dim  go to state 277


State 940

  843 make_dim_decl: "array" "tuple" '<' $@105 . tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 668
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 669
    tuple_type_list                     go to state 1131
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 671


State 941

  846 make_dim_decl: "array" "variant" '<' $@107 . variant_type_list '>' $@108 '(' make_variant_dim ')'

    "name"  shift, and go to state 672

    variant_type       go to state 673
    variant_type_list  go to state 1132


State 942

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  850 make_dim_decl: "array" '<' $@109 type_declaration_no_options . '>' $@110 '(' optional_expr_list ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1133
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 943

  847 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1134


State 944

  860 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1135


State 945

  861 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1136
    type_declaration_no_options_no_dim  go to state 277


State 946

  831 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1137
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 947

  856 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  865 optional_comma: ',' .

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 865 (optional_comma)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 732
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_map_tuple          go to state 1138
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 948

  859 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1139


State 949

  470 expr: "deref" '(' expr ')' .

    $default  reduce using rule 470 (expr)


State 950

  330 expr_cast: "cast" '<' $@20 type_declaration_no_options . '>' $@21 expr
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1140
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 951

  333 expr_cast: "upcast" '<' $@22 type_declaration_no_options . '>' $@23 expr
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1141
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 952

  471 expr: "addr" '(' expr ')' .

    $default  reduce using rule 471 (expr)


State 953

  336 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options . '>' $@25 expr
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1142
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 954

  501 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 501 (expr)


State 955

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options . '>' $@112 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1143
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 956

  851 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1144


State 957

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  830 make_struct_decl: "default" '<' $@99 type_declaration_no_options . '>' $@100 use_initializer

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1145
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 958

  553 tuple_type_list: tuple_type_list . c_or_s tuple_type
  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 1146
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 852


State 959

  833 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1147


State 960

  559 variant_type_list: variant_type_list . c_or_s variant_type
  827 make_struct_decl: "variant" '<' $@97 variant_type_list . '>' $@98 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 1148
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 855


State 961

  502 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  503               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  504               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 784

    $default  reduce using rule 358 (optional_capture_list)

    optional_capture_list  go to state 1149


State 962

  505 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 963

  506 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 964

  507 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 965

  508 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 966

  509 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 967

  511 expr_mtag: "$c" '(' expr ')' . '(' ')'
  512          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1150


State 968

   42 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    ':'    shift, and go to state 1151
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 37 (optional_format_string)

    optional_format_string  go to state 1152


State 969

  102 for_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1153


State 970

  101 for_variable_name_with_pos_list: "name" .
  103                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1154

    $default  reduce using rule 101 (for_variable_name_with_pos_list)


State 971

  104 for_variable_name_with_pos_list: '(' . tuple_expansion ')'

    "name"  shift, and go to state 1155

    tuple_expansion  go to state 1156


State 972

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1157
    ','   shift, and go to state 1158


State 973

  867 array_comprehension: '[' "iterator" "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 969
    "name"  shift, and go to state 970
    '('     shift, and go to state 971

    for_variable_name_with_pos_list  go to state 1159


State 974

  344 expr_list: expr_list ',' expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 344 (expr_list)


State 975

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  804 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  805                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1160


State 976

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  801 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 801 (make_struct_fields)


State 977

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  800 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 800 (make_struct_fields)


State 978

  459 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 459 (expr)


State 979

  806 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  807                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1161


State 980

  802 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  803                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 763
    ":="  shift, and go to state 1162
    '='   shift, and go to state 765

    copy_or_move  go to state 1163


State 981

  394 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1164
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 982

  520 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1165
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 983

  398 func_addr_expr: '@' '@' '<' $@28 . type_declaration_no_options '>' $@29 func_addr_name

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1166
    type_declaration_no_options_no_dim  go to state 277


State 984

  401 func_addr_expr: '@' '@' '<' $@30 . optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1167


State 985

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1168
    ','   shift, and go to state 1158


State 986

  858 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1169


State 987

  288 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  856 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 947

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 1170


State 988

  800 make_struct_fields: "name" . copy_or_move expr
  801                   | "name" . ":=" expr

    "<-"  shift, and go to state 763
    ":="  shift, and go to state 764
    '='   shift, and go to state 765

    copy_or_move  go to state 766


State 989

  413 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 413 (expr_call)


State 990

  415 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1171


State 991

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1172
    ']'  shift, and go to state 1173


State 992

  344 expr_list: expr_list ',' . expr
  390 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 1174
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 974
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 993

  416 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 416 (expr_call)


State 994

  414 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 414 (expr_call)


State 995

  155 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 155 (optional_annotation_list)


State 996

  359 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1175
    ":="    shift, and go to state 1176
    "name"  shift, and go to state 1177
    '='     shift, and go to state 1178
    '&'     shift, and go to state 1179

    capture_entry  go to state 1180
    capture_list   go to state 1181


State 997

  360 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1182


State 998

  362 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 362 (expr_full_block_assumed_piped)


State 999

  361 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1183


State 1000

  477 expr: expr "is" "type" '<' . $@34 type_declaration_no_options '>' $@35

    $default  reduce using rule 475 ($@34)

    $@34  go to state 1184


State 1001

  519 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1185
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1002

  483 expr: expr "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 481 ($@36)

    $@36  go to state 1186


State 1003

  517 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1187
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1004

  391 expr_method_call: expr "->" "name" '(' . ')'
  392                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1188
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1189
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1005

  514 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1190
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1006

  463 expr: expr "?[" expr ']' .

    $default  reduce using rule 463 (expr)


State 1007

  488 expr: expr '?' "as" "type" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 1191


State 1008

  518 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1192


State 1009

  485 expr: expr '?' "as" "name" .

    $default  reduce using rule 485 (expr)


State 1010

  489 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 489 (expr)


State 1011

  474 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1193
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1012

  516 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1194


State 1013

  466 expr: expr '.' "?." "name" .

    $default  reduce using rule 466 (expr)


State 1014

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  464     | expr '.' "?[" expr . ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ']'    shift, and go to state 1195


State 1015

  513 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1196
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1016

  404 expr_field: expr '.' "name" '(' . ')'
  405           | expr '.' "name" '(' . expr_list ')'
  406           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 1197
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1198
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1199
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1017

  515 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1200


State 1018

  403 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 403 (expr_field)


State 1019

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  462     | expr '.' '[' expr . ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ']'    shift, and go to state 1201


State 1020

  411 expr_field: expr '.' $@32 error . $@33

    $default  reduce using rule 410 ($@33)

    $@33  go to state 1202


State 1021

  407 expr_field: expr '.' basic_type_declaration '(' . ')'
  408           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1203
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1204
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1022

  461 expr: expr '[' expr ']' .

    $default  reduce using rule 461 (expr)


State 1023

  344 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 974
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1024

  418 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 418 (expr_call)


State 1025

  749 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 1026

  739 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 739 (type_declaration_no_options_no_dim)


State 1027

  703 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53 .

    $default  reduce using rule 703 (bitfield_type_declaration)


State 1028

  697 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 697 (bitfield_bits)


State 1029

  753 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 753 (type_declaration_no_options_no_dim)


State 1030

  756 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 755 ($@68)

    $@68  go to state 1205


State 1031

  760 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 760 (type_declaration_no_options_no_dim)


State 1032

  763 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 762 ($@72)

    $@72  go to state 1206


State 1033

  767 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74 .

    $default  reduce using rule 767 (type_declaration_no_options_no_dim)


State 1034

  770 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' . $@76

    $default  reduce using rule 769 ($@76)

    $@76  go to state 1207


State 1035

  551 tuple_type: "name" ':' type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 551 (tuple_type)


State 1036

  773 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78 .

    $default  reduce using rule 773 (type_declaration_no_options_no_dim)


State 1037

  553 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 553 (tuple_type_list)


State 1038

  557 variant_type: "name" ':' type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 557 (variant_type)


State 1039

  776 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80 .

    $default  reduce using rule 776 (type_declaration_no_options_no_dim)


State 1040

  559 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 559 (variant_type_list)


State 1041

  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1208


State 1042

  290 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1209


State 1043

  700 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 700 (bitfield_alias_bits)


State 1044

  608 commas: commas COMMA .

    $default  reduce using rule 608 (commas)


State 1045

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 . '}'

    '}'  shift, and go to state 1210


State 1046

   85 semis: semis SEMICOLON .

    $default  reduce using rule 85 (semis)


State 1047

  556 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 556 (tuple_alias_type_list)


State 1048

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1211


State 1049

  562 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 562 (variant_alias_type_list)


State 1050

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 . '}'

    '}'  shift, and go to state 1212


State 1051

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  653 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1213


State 1052

  654 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 654 (variable_name_with_pos_list)


State 1053

  655 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  656                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1214

    $default  reduce using rule 655 (variable_name_with_pos_list)


State 1054

  568 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  569                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 763
    '='   shift, and go to state 765
    '|'   shift, and go to state 380

    $default  reduce using rule 568 (variable_declaration_type)

    copy_or_move  go to state 1215


State 1055

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  567 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 567 (variable_declaration_no_type)


State 1056

  310 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1216
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1057

  309 expression_return: "return" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 309 (expression_return)


State 1058

  313 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1217


State 1059

  295 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1218
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1060

  294 expression_delete: "delete" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 294 (expression_delete)


State 1061

  115 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1219


State 1062

  281 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 281 (expression_any)


State 1063

   63 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1220


State 1064

   64 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1221


State 1065

   65 expression_goto: "goto" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 65 (expression_goto)


State 1066

  110 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1222
    $@16              go to state 400


State 1067

  312 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1223
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1068

  311 expression_yield: "yield" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 311 (expression_yield)


State 1069

  279 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 279 (expression_any)


State 1070

  280 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 280 (expression_any)


State 1071

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1224


State 1072

   75 if_or_static_if: "if" .

    $default  reduce using rule 75 (if_or_static_if)


State 1073

   76 if_or_static_if: "static_if" .

    $default  reduce using rule 76 (if_or_static_if)


State 1074

   99 expression_if_then_else: $@9 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1225


State 1075

  109 expression_for_loop: $@10 "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1226


State 1076

  112 expression_while_loop: $@11 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1227


State 1077

  114 expression_with: $@12 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1228


State 1078

  270 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 270 (expression_any)


State 1079

  261 expression_block: $@16 '{' expressions $@17 '}' . expression_block_finally

    "finally"  shift, and go to state 1229

    $default  reduce using rule 255 (expression_block_finally)

    expression_block_finally  go to state 1230


State 1080

  265 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 265 (expression_any)


State 1081

  272 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 272 (expression_any)


State 1082

  273 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 273 (expression_any)


State 1083

  274 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 274 (expression_any)


State 1084

  275 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 275 (expression_any)


State 1085

  319 optional_in_scope: "inscope" .

    $default  reduce using rule 319 (optional_in_scope)


State 1086

  325 expression_let: kwd_let optional_in_scope . let_variable_declaration
  326               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  327               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 543
    "name"  shift, and go to state 544
    '('     shift, and go to state 1231
    '{'     shift, and go to state 1232

    tuple_expansion_variable_declaration  go to state 1233
    let_variable_name_with_pos_list       go to state 545
    let_variable_declaration              go to state 1234


State 1087

  264 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 264 (expression_any)


State 1088

  380 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1235
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1089

  381 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1236
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1090

  383 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1237
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1091

  382 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1238
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1092

  384 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1239
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1093

  374 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1240
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1094

  375 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1241
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1095

  376 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1242
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1096

  385 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1243
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1097

  386 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1244
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1098

  372 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1245
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1099

  373 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1246
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1100

  387 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1247
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1101

  388 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1248
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1102

  377 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1249
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1103

  378 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1250
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1104

  379 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1251
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1105

  371 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1252
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1106

  606 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1253
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1107

  608 commas: commas . COMMA
  611 enum_list: enum_list commas . enum_expression
  625 optional_commas: commas .

    "name"             shift, and go to state 914
    "new line, comma"  shift, and go to state 714
    ','                shift, and go to state 715

    $default  reduce using rule 625 (optional_commas)

    COMMA            go to state 1044
    enum_expression  go to state 1254


State 1108

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas . $@48 '}'

    $default  reduce using rule 632 ($@48)

    $@48  go to state 1255


State 1109

  535 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 535 (struct_variable_declaration_list)


State 1110

  647 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 647 (optional_struct_variable_declaration_list)


State 1111

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  541                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1256


State 1112

  537 struct_variable_declaration_list: struct_variable_declaration_list $@40 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 222

    $default  reduce using rule 521 (optional_field_annotation)

    metadata_argument_list          go to state 223
    optional_field_annotation       go to state 1257
    structure_variable_declaration  go to state 1258


State 1113

  578 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 578 (let_variable_name_with_pos_list)


State 1114

  581 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1259


State 1115

  587 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 587 (let_variable_declaration)


State 1116

  588 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1260
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1117

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  589 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 620
    "as"                   shift, and go to state 621
    "<<"                   shift, and go to state 622
    ">>"                   shift, and go to state 623
    "++"                   shift, and go to state 624
    "--"                   shift, and go to state 625
    "<="                   shift, and go to state 626
    ">="                   shift, and go to state 627
    "=="                   shift, and go to state 628
    "!="                   shift, and go to state 629
    "->"                   shift, and go to state 630
    "??"                   shift, and go to state 631
    "?."                   shift, and go to state 632
    "?["                   shift, and go to state 633
    "<|"                   shift, and go to state 634
    "|>"                   shift, and go to state 635
    "<<<"                  shift, and go to state 636
    ">>>"                  shift, and go to state 637
    "&&"                   shift, and go to state 638
    "||"                   shift, and go to state 639
    "^^"                   shift, and go to state 640
    ".."                   shift, and go to state 641
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 642
    '|'                    shift, and go to state 643
    '^'                    shift, and go to state 644
    '&'                    shift, and go to state 645
    '<'                    shift, and go to state 646
    '>'                    shift, and go to state 647
    '-'                    shift, and go to state 648
    '+'                    shift, and go to state 649
    '*'                    shift, and go to state 650
    '/'                    shift, and go to state 651
    '%'                    shift, and go to state 652
    '.'                    shift, and go to state 653
    '['                    shift, and go to state 654
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1261


State 1118

  591 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 591 (global_let_variable_declaration)


State 1119

  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 820 ($@94)

    $@94  go to state 1262


State 1120

  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 823 ($@96)

    $@96  go to state 1263


State 1121

  298 new_type_declaration: '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 297 ($@19)

    $@19  go to state 1264


State 1122

  304 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1265


State 1123

  302 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 302 (expr_new)


State 1124

  303 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 303 (expr_new)


State 1125

  301 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 301 (expr_new)


State 1126

  341 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1266


State 1127

  342 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1267


State 1128

  340 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 340 (expr_type_info)


State 1129

  339 expr_type_decl: "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 338 ($@27)

    $@27  go to state 1268


State 1130

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1269
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1131

  553 tuple_type_list: tuple_type_list . c_or_s tuple_type
  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list . '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 1270
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 852


State 1132

  559 variant_type_list: variant_type_list . c_or_s variant_type
  846 make_dim_decl: "array" "variant" '<' $@107 variant_type_list . '>' $@108 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 714
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 715
    '>'                    shift, and go to state 1271
    ';'                    shift, and go to state 16

    COMMA      go to state 716
    SEMICOLON  go to state 717
    c_or_s     go to state 855


State 1133

  850 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' . $@110 '(' optional_expr_list ')'

    $default  reduce using rule 849 ($@110)

    $@110  go to state 1272


State 1134

  847 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 847 (make_dim_decl)


State 1135

  860 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 287 (optional_expr_map_tuple_list)

    string_builder                go to state 472
    expr_reader                   go to state 473
    expr_call_pipe                go to state 474
    optional_expr_map_tuple_list  go to state 1273
    name_in_namespace             go to state 475
    expr_new                      go to state 476
    expr_cast                     go to state 477
    expr_type_decl                go to state 478
    expr_type_info                go to state 479
    block_or_lambda               go to state 480
    expr_full_block               go to state 481
    expr_numeric_const            go to state 482
    expr_named_call               go to state 483
    expr_method_call              go to state 484
    func_addr_expr                go to state 485
    expr_field                    go to state 486
    expr_call                     go to state 487
    expr                          go to state 732
    expr_generator                go to state 489
    expr_mtag                     go to state 490
    basic_type_declaration        go to state 491
    make_decl                     go to state 492
    make_struct_decl              go to state 493
    make_map_tuple                go to state 733
    make_tuple_call               go to state 494
    make_dim_decl                 go to state 495
    expr_map_tuple_list           go to state 987
    make_table_decl               go to state 496
    array_comprehension           go to state 497


State 1136

  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"
  861 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1274
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1137

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  831 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 831 (make_map_tuple)


State 1138

  856 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 856 (expr_map_tuple_list)


State 1139

  859 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 859 (make_table_decl)


State 1140

  330 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 329 ($@21)

    $@21  go to state 1275


State 1141

  333 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' . $@23 expr

    $default  reduce using rule 332 ($@23)

    $@23  go to state 1276


State 1142

  336 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' . $@25 expr

    $default  reduce using rule 335 ($@25)

    $@25  go to state 1277


State 1143

  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' . $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 853 ($@112)

    $@112  go to state 1278


State 1144

  851 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 851 (make_dim_decl)


State 1145

  830 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' . $@100 use_initializer

    $default  reduce using rule 829 ($@100)

    $@100  go to state 1279


State 1146

  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 835 ($@102)

    $@102  go to state 1280


State 1147

  833 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 833 (make_tuple_call)


State 1148

  827 make_struct_decl: "variant" '<' $@97 variant_type_list '>' . $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 826 ($@98)

    $@98  go to state 1281


State 1149

  502 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  503               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  504               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1282

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1283


State 1150

  511 expr_mtag: "$c" '(' expr ')' '(' . ')'
  512          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1284
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1285
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1151

   39 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 38 ($@1)

    $@1  go to state 1286


State 1152

   42 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1287


State 1153

  102 for_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1288
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1154

  103 for_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1289


State 1155

  321 tuple_expansion: "name" .

    $default  reduce using rule 321 (tuple_expansion)


State 1156

  104 for_variable_name_with_pos_list: '(' tuple_expansion . ')'
  322 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1290
    ')'  shift, and go to state 1291


State 1157

  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1292
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1158

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' . "name"
  106                                | for_variable_name_with_pos_list ',' . "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' . '(' tuple_expansion ')'

    "name"  shift, and go to state 1293
    '('     shift, and go to state 1294


State 1159

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1295
    ','   shift, and go to state 1158


State 1160

  804 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  805                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 763
    ":="  shift, and go to state 1296
    '='   shift, and go to state 765

    copy_or_move  go to state 1297


State 1161

  806 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  807                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1298
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1162

  803 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1299
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1163

  802 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1300
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1164

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  394 func_addr_name: "$i" '(' expr . ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1301


State 1165

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  520          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1302


State 1166

  398 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options . '>' $@29 func_addr_name
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1303
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1167

  401 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list . optional_function_type '>' $@31 func_addr_name

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1304


State 1168

  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1305
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1169

  858 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 858 (make_table_decl)


State 1170

  288 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 288 (optional_expr_map_tuple_list)


State 1171

  415 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 415 (expr_call)


State 1172

  802 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  803                   | make_struct_fields ',' . "name" ":=" expr
  806                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 979
    "name"  shift, and go to state 980


State 1173

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1306


State 1174

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  837 make_dim_decl: '[' . optional_expr_list ']'
  866 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  867                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 600
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 601
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 605
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 606
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 285 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 602
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 603
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 1307
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1175

  353 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1308


State 1176

  354 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1309


State 1177

  355 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1310


State 1178

  352 capture_entry: '=' . "name"

    "name"  shift, and go to state 1311


State 1179

  351 capture_entry: '&' . "name"

    "name"  shift, and go to state 1312


State 1180

  356 capture_list: capture_entry .

    $default  reduce using rule 356 (capture_list)


State 1181

  357 capture_list: capture_list . ',' capture_entry
  359 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1313
    ')'  shift, and go to state 1314


State 1182

  360 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1315


State 1183

  361 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1316


State 1184

  477 expr: expr "is" "type" '<' $@34 . type_declaration_no_options '>' $@35

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1317
    type_declaration_no_options_no_dim  go to state 277


State 1185

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  519          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1318


State 1186

  483 expr: expr "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1319


State 1187

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  517          | expr "as" "$f" '(' expr . ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1320


State 1188

  391 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 391 (expr_method_call)


State 1189

  344 expr_list: expr_list . ',' expr
  392 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1321


State 1190

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  514          | expr "?." "$f" '(' expr . ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1322


State 1191

  488 expr: expr '?' "as" "type" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 486 ($@38)

    $@38  go to state 1323


State 1192

  518 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1324
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1193

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  474     | expr '?' expr ':' expr .
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 474 (expr)


State 1194

  516 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1325
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1195

  464 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 464 (expr)


State 1196

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr '.' "$f" '(' expr . ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1326


State 1197

  406 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  837 make_dim_decl: '[' . optional_expr_list ']'
  866 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  867                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 600
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 601
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 605
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 606
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 285 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 602
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 603
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 1327
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1198

  404 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 404 (expr_field)


State 1199

  344 expr_list: expr_list . ',' expr
  405 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1328


State 1200

  515 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1329
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1201

  462 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 462 (expr)


State 1202

  411 expr_field: expr '.' $@32 error $@33 .

    $default  reduce using rule 411 (expr_field)


State 1203

  407 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 407 (expr_field)


State 1204

  344 expr_list: expr_list . ',' expr
  408 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1330


State 1205

  756 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 756 (type_declaration_no_options_no_dim)


State 1206

  763 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 763 (type_declaration_no_options_no_dim)


State 1207

  770 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76 .

    $default  reduce using rule 770 (type_declaration_no_options_no_dim)


State 1208

  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 285 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 1331
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 603
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1209

  290 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 290 (type_declaration_no_options_list)


State 1210

  794 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}' .

    $default  reduce using rule 794 (bitfield_alias_declaration)


State 1211

  784 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 784 (tuple_alias_declaration)


State 1212

  789 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}' .

    $default  reduce using rule 789 (variant_alias_declaration)


State 1213

  653 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 653 (variable_name_with_pos_list)


State 1214

  656 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1332


State 1215

  569 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1333
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1216

  310 expression_return: "return" "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 310 (expression_return)


State 1217

  313 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1334
    $@16              go to state 400


State 1218

  295 expression_delete: "delete" "explicit" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 295 (expression_delete)


State 1219

  115 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1335
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1220

   63 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 63 (expression_label)


State 1221

   64 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 64 (expression_goto)


State 1222

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 110 (expression_unsafe)


State 1223

  312 expression_yield: "yield" "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 312 (expression_yield)


State 1224

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1336
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1225

   99 expression_if_then_else: $@9 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1337
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1226

  109 expression_for_loop: $@10 "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 969
    "name"  shift, and go to state 970
    '('     shift, and go to state 971

    for_variable_name_with_pos_list  go to state 1338


State 1227

  112 expression_while_loop: $@11 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1339
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1228

  114 expression_with: $@12 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1340
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1229

  258 expression_block_finally: "finally" . $@14 '{' expressions $@15 '}'

    $default  reduce using rule 256 ($@14)

    $@14  go to state 1341


State 1230

  261 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally .

    $default  reduce using rule 261 (expression_block)


State 1231

  323 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  324                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1155

    tuple_expansion  go to state 1342


State 1232

  327 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 584 (variable_declaration_list)

    variable_declaration_list  go to state 1343


State 1233

  326 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 326 (expression_let)


State 1234

  325 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 325 (expression_let)


State 1235

  380 expr_assign: expr "+=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 380 (expr_assign)


State 1236

  381 expr_assign: expr "-=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 381 (expr_assign)


State 1237

  383 expr_assign: expr "/=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 383 (expr_assign)


State 1238

  382 expr_assign: expr "*=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 382 (expr_assign)


State 1239

  384 expr_assign: expr "%=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 384 (expr_assign)


State 1240

  374 expr_assign: expr "&=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 374 (expr_assign)


State 1241

  375 expr_assign: expr "|=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 375 (expr_assign)


State 1242

  376 expr_assign: expr "^=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 376 (expr_assign)


State 1243

  385 expr_assign: expr "<<=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 385 (expr_assign)


State 1244

  386 expr_assign: expr ">>=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 386 (expr_assign)


State 1245

  372 expr_assign: expr "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 372 (expr_assign)


State 1246

  373 expr_assign: expr ":=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 373 (expr_assign)


State 1247

  387 expr_assign: expr "<<<=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 387 (expr_assign)


State 1248

  388 expr_assign: expr ">>>=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 388 (expr_assign)


State 1249

  377 expr_assign: expr "&&=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 377 (expr_assign)


State 1250

  378 expr_assign: expr "||=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 378 (expr_assign)


State 1251

  379 expr_assign: expr "^^=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 379 (expr_assign)


State 1252

  371 expr_assign: expr '=' expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 371 (expr_assign)


State 1253

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  606 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 606 (enum_expression)


State 1254

  611 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 611 (enum_list)


State 1255

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 . '}'

    '}'  shift, and go to state 1344


State 1256

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  541                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1345
    "private"  shift, and go to state 1346

    $default  reduce using rule 528 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1347


State 1257

  533 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1348

    $default  reduce using rule 531 (optional_static_member_variable)

    optional_static_member_variable  go to state 1349


State 1258

  537 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1350


State 1259

  581 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 581 (let_variable_name_with_pos_list)


State 1260

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  588 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 620
    "as"                   shift, and go to state 621
    "<<"                   shift, and go to state 622
    ">>"                   shift, and go to state 623
    "++"                   shift, and go to state 624
    "--"                   shift, and go to state 625
    "<="                   shift, and go to state 626
    ">="                   shift, and go to state 627
    "=="                   shift, and go to state 628
    "!="                   shift, and go to state 629
    "->"                   shift, and go to state 630
    "??"                   shift, and go to state 631
    "?."                   shift, and go to state 632
    "?["                   shift, and go to state 633
    "<|"                   shift, and go to state 634
    "|>"                   shift, and go to state 635
    "<<<"                  shift, and go to state 636
    ">>>"                  shift, and go to state 637
    "&&"                   shift, and go to state 638
    "||"                   shift, and go to state 639
    "^^"                   shift, and go to state 640
    ".."                   shift, and go to state 641
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 642
    '|'                    shift, and go to state 643
    '^'                    shift, and go to state 644
    '&'                    shift, and go to state 645
    '<'                    shift, and go to state 646
    '>'                    shift, and go to state 647
    '-'                    shift, and go to state 648
    '+'                    shift, and go to state 649
    '*'                    shift, and go to state 650
    '/'                    shift, and go to state 651
    '%'                    shift, and go to state 652
    '.'                    shift, and go to state 653
    '['                    shift, and go to state 654
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1351


State 1261

  589 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 589 (let_variable_declaration)


State 1262

  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1352


State 1263

  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1353


State 1264

  298 new_type_declaration: '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 298 (new_type_declaration)


State 1265

  304 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 304 (expr_new)


State 1266

  341 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1354
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1267

  342 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1355


State 1268

  339 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 339 (expr_type_decl)


State 1269

  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 839 ($@104)

    $@104  go to state 1356


State 1270

  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' . $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 842 ($@106)

    $@106  go to state 1357


State 1271

  846 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' . $@108 '(' make_variant_dim ')'

    $default  reduce using rule 845 ($@108)

    $@108  go to state 1358


State 1272

  850 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 . '(' optional_expr_list ')'

    '('  shift, and go to state 1359


State 1273

  860 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1360


State 1274

  861 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1361


State 1275

  330 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1362
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1276

  333 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1363
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1277

  336 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1364
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1278

  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1365


State 1279

  830 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 . use_initializer

    "uninitialized"  shift, and go to state 1366

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1367


State 1280

  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1368


State 1281

  827 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1369


State 1282

  502 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  503               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1370
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1371
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1283

  504 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1372
    $@16              go to state 400


State 1284

  511 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1285

  344 expr_list: expr_list . ',' expr
  512 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1373


State 1286

   39 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 35 (format_string)

    format_string  go to state 1374


State 1287

   42 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 42 (string_builder_body)


State 1288

  102 for_variable_name_with_pos_list: "$i" '(' expr . ')'
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1375


State 1289

  103 for_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 103 (for_variable_name_with_pos_list)


State 1290

  322 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1376


State 1291

  104 for_variable_name_with_pos_list: '(' tuple_expansion ')' .

    $default  reduce using rule 104 (for_variable_name_with_pos_list)


State 1292

  344 expr_list: expr_list . ',' expr
  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1377


State 1293

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" .
  106                                | for_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1378

    $default  reduce using rule 105 (for_variable_name_with_pos_list)


State 1294

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' . tuple_expansion ')'

    "name"  shift, and go to state 1155

    tuple_expansion  go to state 1379


State 1295

  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1380
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1296

  805 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1381
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1297

  804 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1382
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1298

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  806 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  807                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1383


State 1299

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  803 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 803 (make_struct_fields)


State 1300

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  802 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 802 (make_struct_fields)


State 1301

  394 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 394 (func_addr_name)


State 1302

  520 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 1303

  398 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' . $@29 func_addr_name

    $default  reduce using rule 397 ($@29)

    $@29  go to state 1384


State 1304

  401 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type . '>' $@31 func_addr_name

    '>'  shift, and go to state 1385


State 1305

  344 expr_list: expr_list . ',' expr
  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1386


State 1306

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 389 (expr_named_call)


State 1307

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1172
    ']'  shift, and go to state 1387


State 1308

  353 capture_entry: "<-" "name" .

    $default  reduce using rule 353 (capture_entry)


State 1309

  354 capture_entry: ":=" "name" .

    $default  reduce using rule 354 (capture_entry)


State 1310

  355 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1388


State 1311

  352 capture_entry: '=' "name" .

    $default  reduce using rule 352 (capture_entry)


State 1312

  351 capture_entry: '&' "name" .

    $default  reduce using rule 351 (capture_entry)


State 1313

  357 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1175
    ":="    shift, and go to state 1176
    "name"  shift, and go to state 1177
    '='     shift, and go to state 1178
    '&'     shift, and go to state 1179

    capture_entry  go to state 1389


State 1314

  359 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 359 (optional_capture_list)


State 1315

  360 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1390

    $default  reduce using rule 259 ($@16)

    expression_block       go to state 1391
    $@16                   go to state 400
    block_or_simple_block  go to state 1392


State 1316

  361 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1393


State 1317

  477 expr: expr "is" "type" '<' $@34 type_declaration_no_options . '>' $@35
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1394
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1318

  519 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 1319

  483 expr: expr "as" "type" '<' $@36 type_declaration . '>' $@37
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1395


State 1320

  517 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1321

  392 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 392 (expr_method_call)


State 1322

  514 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1323

  488 expr: expr '?' "as" "type" '<' $@38 . type_declaration '>' $@39

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1396


State 1324

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr '?' "as" "$f" '(' expr . ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1397


State 1325

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr '.' "?." "$f" '(' expr . ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1398


State 1326

  513 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1327

  406 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1172
    ']'  shift, and go to state 1399


State 1328

  405 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 405 (expr_field)


State 1329

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr '.' '.' "$f" '(' expr . ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1400


State 1330

  408 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 408 (expr_field)


State 1331

  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1401


State 1332

  656 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 656 (variable_name_with_pos_list)


State 1333

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  569 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 569 (variable_declaration_type)


State 1334

  313 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 313 (expression_try_catch)


State 1335

  115 expression_with_alias: "assume" "name" '=' expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 115 (expression_with_alias)


State 1336

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1402


State 1337

   99 expression_if_then_else: $@9 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1403


State 1338

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block

    "in"  shift, and go to state 1404
    ','   shift, and go to state 1158


State 1339

  112 expression_while_loop: $@11 "while" '(' expr . ')' optional_emit_semis expression_block
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1405


State 1340

  114 expression_with: $@12 "with" '(' expr . ')' optional_emit_semis expression_block
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1406


State 1341

  258 expression_block_finally: "finally" $@14 . '{' expressions $@15 '}'

    '{'  shift, and go to state 1407


State 1342

  322 tuple_expansion: tuple_expansion . ',' "name"
  323 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  324                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1290
    ')'  shift, and go to state 1408


State 1343

  327 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  585 variable_declaration_list: variable_declaration_list . SEMICOLON
  586                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 543
    "name"                 shift, and go to state 544
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1409

    SEMICOLON                        go to state 1410
    let_variable_name_with_pos_list  go to state 545
    let_variable_declaration         go to state 1411


State 1344

  633 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}' .

    $default  reduce using rule 633 (enum_declaration)


State 1345

  529 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 529 (optional_public_or_private_member_variable)


State 1346

  530 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 530 (optional_public_or_private_member_variable)


State 1347

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  541                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1412
    "static"    shift, and go to state 1348

    $default  reduce using rule 531 (optional_static_member_variable)

    optional_static_member_variable  go to state 1413


State 1348

  532 optional_static_member_variable: "static" .

    $default  reduce using rule 532 (optional_static_member_variable)


State 1349

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1414
    "sealed"    shift, and go to state 1415

    $default  reduce using rule 523 (optional_override)

    optional_override  go to state 1416


State 1350

  537 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 537 (struct_variable_declaration_list)


State 1351

  588 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 588 (let_variable_declaration)


State 1352

  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1366

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1417


State 1353

  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1366

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1418


State 1354

  341 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1419


State 1355

  342 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1420


State 1356

  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1421


State 1357

  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1422


State 1358

  846 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 . '(' make_variant_dim ')'

    '('  shift, and go to state 1423


State 1359

  850 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 285 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 1424
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 603
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1360

  860 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 860 (make_table_decl)


State 1361

  861 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 287 (optional_expr_map_tuple_list)

    string_builder                go to state 472
    expr_reader                   go to state 473
    expr_call_pipe                go to state 474
    optional_expr_map_tuple_list  go to state 1425
    name_in_namespace             go to state 475
    expr_new                      go to state 476
    expr_cast                     go to state 477
    expr_type_decl                go to state 478
    expr_type_info                go to state 479
    block_or_lambda               go to state 480
    expr_full_block               go to state 481
    expr_numeric_const            go to state 482
    expr_named_call               go to state 483
    expr_method_call              go to state 484
    func_addr_expr                go to state 485
    expr_field                    go to state 486
    expr_call                     go to state 487
    expr                          go to state 732
    expr_generator                go to state 489
    expr_mtag                     go to state 490
    basic_type_declaration        go to state 491
    make_decl                     go to state 492
    make_struct_decl              go to state 493
    make_map_tuple                go to state 733
    make_tuple_call               go to state 494
    make_dim_decl                 go to state 495
    expr_map_tuple_list           go to state 987
    make_table_decl               go to state 496
    array_comprehension           go to state 497


State 1362

  330 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 330 (expr_cast)


State 1363

  333 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 333 (expr_cast)


State 1364

  336 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 336 (expr_cast)


State 1365

  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1426
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1366

  818 use_initializer: "uninitialized" .

    $default  reduce using rule 818 (use_initializer)


State 1367

  830 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer .

    $default  reduce using rule 830 (make_struct_decl)


State 1368

  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1366

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1427


State 1369

  827 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1366

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1428


State 1370

  502 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 502 (expr_generator)


State 1371

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  503 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1429


State 1372

  504 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 504 (expr_generator)


State 1373

  512 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1374

   36 format_string: format_string . STRING_CHARACTER
   39 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1430

    $default  reduce using rule 39 (optional_format_string)


State 1375

  102 for_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 102 (for_variable_name_with_pos_list)


State 1376

  322 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 322 (tuple_expansion)


State 1377

  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1431


State 1378

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1432


State 1379

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion . ')'
  322 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1290
    ')'  shift, and go to state 1433


State 1380

  344 expr_list: expr_list . ',' expr
  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1434


State 1381

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  805 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 805 (make_struct_fields)


State 1382

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  804 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 804 (make_struct_fields)


State 1383

  806 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  807                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 763
    ":="  shift, and go to state 1435
    '='   shift, and go to state 765

    copy_or_move  go to state 1436


State 1384

  398 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 771
    "name"  shift, and go to state 58

    name_in_namespace  go to state 774
    func_addr_name     go to state 1437


State 1385

  401 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' . $@31 func_addr_name

    $default  reduce using rule 400 ($@31)

    $@31  go to state 1438


State 1386

  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1439


State 1387

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1440


State 1388

  355 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1441


State 1389

  357 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 357 (capture_list)


State 1390

  346 block_or_simple_block: "=>" . expr
  347                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "<-"                              shift, and go to state 1442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1443
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1391

  345 block_or_simple_block: expression_block .

    $default  reduce using rule 345 (block_or_simple_block)


State 1392

  360 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 360 (expr_full_block)


State 1393

  361 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1444
    $@16              go to state 400


State 1394

  477 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' . $@35

    $default  reduce using rule 476 ($@35)

    $@35  go to state 1445


State 1395

  483 expr: expr "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 482 ($@37)

    $@37  go to state 1446


State 1396

  488 expr: expr '?' "as" "type" '<' $@38 type_declaration . '>' $@39
  778 type_declaration: type_declaration . '|' type_declaration_no_options
  779                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1447


State 1397

  518 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 1398

  516 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 1399

  406 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1448


State 1400

  515 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1401

  724 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 1402

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1449

    $default  reduce using rule 77 (expression_else_one_liner)

    expression_else_one_liner  go to state 1450


State 1403

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1451


State 1404

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1452
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 604
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1405

  112 expression_while_loop: $@11 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1453


State 1406

  114 expression_with: $@12 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1454


State 1407

  258 expression_block_finally: "finally" $@14 '{' . expressions $@15 '}'

    $default  reduce using rule 282 (expressions)

    expressions  go to state 1455


State 1408

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  324                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1456
    '&'  shift, and go to state 418

    $default  reduce using rule 575 (optional_ref)

    optional_ref  go to state 1457


State 1409

  327 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 327 (expression_let)


State 1410

  585 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 585 (variable_declaration_list)


State 1411

  586 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 586 (variable_declaration_list)


State 1412

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@41 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1458

    $default  reduce using rule 526 (optional_constant)

    optional_constant  go to state 1459


State 1413

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1414
    "sealed"    shift, and go to state 1415

    $default  reduce using rule 523 (optional_override)

    optional_override  go to state 1460


State 1414

  524 optional_override: "override" .

    $default  reduce using rule 524 (optional_override)


State 1415

  525 optional_override: "sealed" .

    $default  reduce using rule 525 (optional_override)


State 1416

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1345
    "private"  shift, and go to state 1346

    $default  reduce using rule 528 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1461


State 1417

  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988
    '('     shift, and go to state 1462

    $default  reduce using rule 816 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1463
    make_struct_dim_list           go to state 1464
    make_struct_dim_decl           go to state 1465
    optional_make_struct_dim_decl  go to state 1466


State 1418

  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988
    '('     shift, and go to state 1462

    $default  reduce using rule 816 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1463
    make_struct_dim_list           go to state 1464
    make_struct_dim_decl           go to state 1465
    optional_make_struct_dim_decl  go to state 1467


State 1419

  341 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 341 (expr_type_info)


State 1420

  342 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1468
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1421

  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1366

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1469


State 1422

  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1366

    $default  reduce using rule 817 (use_initializer)

    use_initializer  go to state 1470


State 1423

  846 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988

    $default  reduce using rule 808 (make_variant_dim)

    make_struct_fields  go to state 1471
    make_variant_dim    go to state 1472


State 1424

  850 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1473


State 1425

  861 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1474


State 1426

  344 expr_list: expr_list . ',' expr
  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 760

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 1475


State 1427

  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988
    '('     shift, and go to state 1462

    $default  reduce using rule 816 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1463
    make_struct_dim_list           go to state 1464
    make_struct_dim_decl           go to state 1465
    optional_make_struct_dim_decl  go to state 1476


State 1428

  827 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988

    $default  reduce using rule 808 (make_variant_dim)

    make_struct_fields  go to state 1471
    make_variant_dim    go to state 1477


State 1429

  503 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 503 (expr_generator)


State 1430

   36 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 36 (format_string)


State 1431

  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1478
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1432

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 106 (for_variable_name_with_pos_list)


State 1433

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion ')' .

    $default  reduce using rule 107 (for_variable_name_with_pos_list)


State 1434

  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1479


State 1435

  807 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1480
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1436

  806 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1481
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1437

  398 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name .

    $default  reduce using rule 398 (func_addr_expr)


State 1438

  401 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 771
    "name"  shift, and go to state 58

    name_in_namespace  go to state 774
    func_addr_name     go to state 1482


State 1439

  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 732
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_map_tuple          go to state 1483
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1440

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 390 (expr_named_call)


State 1441

  355 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 355 (capture_entry)


State 1442

  347 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1484
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1443

  346 block_or_simple_block: "=>" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    ".."  error (nonassociative)

    $default  reduce using rule 346 (block_or_simple_block)


State 1444

  361 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 361 (expr_full_block_assumed_piped)


State 1445

  477 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35 .

    $default  reduce using rule 477 (expr)


State 1446

  483 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 483 (expr)


State 1447

  488 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 487 ($@39)

    $@39  go to state 1485


State 1448

  406 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 406 (expr_field)


State 1449

   78 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder           go to state 472
    expr_reader              go to state 473
    expression_if_one_liner  go to state 1486
    expr_call_pipe           go to state 474
    name_in_namespace        go to state 475
    expr_new                 go to state 476
    expression_break         go to state 1487
    expression_continue      go to state 1488
    expression_return        go to state 1489
    expression_yield         go to state 1490
    expr_cast                go to state 477
    expr_type_decl           go to state 478
    expr_type_info           go to state 479
    block_or_lambda          go to state 480
    expr_full_block          go to state 481
    expr_numeric_const       go to state 482
    expr_named_call          go to state 483
    expr_method_call         go to state 484
    func_addr_expr           go to state 485
    expr_field               go to state 486
    expr_call                go to state 487
    expr                     go to state 1491
    expr_generator           go to state 489
    expr_mtag                go to state 490
    basic_type_declaration   go to state 491
    make_decl                go to state 492
    make_struct_decl         go to state 493
    make_tuple_call          go to state 494
    make_dim_decl            go to state 495
    make_table_decl          go to state 496
    array_comprehension      go to state 497


State 1450

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1492


State 1451

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 88 ($@3)
    '{'       [reduce using rule 91 ($@5)]
    $default  reduce using rule 91 ($@5)

    expression_if_block  go to state 1493
    $@3                  go to state 1494
    $@5                  go to state 1495


State 1452

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  344 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1023
    ')'  shift, and go to state 1496


State 1453

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1497
    $@16              go to state 400


State 1454

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1498
    $@16              go to state 400


State 1455

  258 expression_block_finally: "finally" $@14 '{' expressions . $@15 '}'
  283 expressions: expressions . expression_any
  284            | expressions . error

    error                             shift, and go to state 875
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "try"                             shift, and go to state 878
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 879
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 880
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "pass"                            shift, and go to state 882
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 883
    "goto"                            shift, and go to state 884
    "unsafe"                          shift, and go to state 885
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 257 ($@15)

    SEMICOLON                         go to state 887
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 888
    expression_goto                   go to state 889
    expression_if_one_liner           go to state 890
    expression_if_then_else           go to state 891
    $@9                               go to state 892
    expression_if_then_else_oneliner  go to state 893
    expression_for_loop               go to state 894
    $@10                              go to state 895
    expression_unsafe                 go to state 896
    expression_while_loop             go to state 897
    $@11                              go to state 898
    expression_with                   go to state 899
    $@12                              go to state 900
    expression_with_alias             go to state 901
    $@15                              go to state 1499
    expr_call_pipe                    go to state 474
    expression_any                    go to state 903
    name_in_namespace                 go to state 475
    expression_delete                 go to state 904
    expr_new                          go to state 476
    expression_break                  go to state 905
    expression_continue               go to state 906
    expression_return                 go to state 907
    expression_yield                  go to state 908
    expression_try_catch              go to state 909
    kwd_let                           go to state 910
    expression_let                    go to state 911
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 912
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 913
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 1456

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1500
    type_declaration_no_options_no_dim  go to state 277


State 1457

  324 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 550
    ":="  shift, and go to state 551
    '='   shift, and go to state 552

    copy_or_move_or_clone  go to state 1501


State 1458

  527 optional_constant: "const" .

    $default  reduce using rule 527 (optional_constant)


State 1459

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@41 function_declaration_header SEMICOLON

    $default  reduce using rule 538 ($@41)

    $@41  go to state 1502


State 1460

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1458

    $default  reduce using rule 526 (optional_constant)

    optional_constant  go to state 1503


State 1461

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 689
    "name"  shift, and go to state 690

    variable_declaration_no_type  go to state 1504
    variable_declaration_type     go to state 1505
    variable_declaration          go to state 1506
    variable_name_with_pos_list   go to state 693


State 1462

  811 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988

    make_struct_fields  go to state 1507


State 1463

  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  813 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1172

    $default  reduce using rule 813 (make_struct_dim_decl)


State 1464

  812 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  814 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1508

    $default  reduce using rule 864 (optional_comma)

    optional_comma  go to state 1509


State 1465

  815 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 815 (optional_make_struct_dim_decl)


State 1466

  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1510


State 1467

  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1511


State 1468

  342 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1512


State 1469

  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988
    '('     shift, and go to state 1462

    $default  reduce using rule 816 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1463
    make_struct_dim_list           go to state 1464
    make_struct_dim_decl           go to state 1465
    optional_make_struct_dim_decl  go to state 1513


State 1470

  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988
    '('     shift, and go to state 1462

    $default  reduce using rule 816 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1463
    make_struct_dim_list           go to state 1464
    make_struct_dim_decl           go to state 1465
    optional_make_struct_dim_decl  go to state 1514


State 1471

  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  809 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1172

    $default  reduce using rule 809 (make_variant_dim)


State 1472

  846 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1515


State 1473

  850 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')' .

    $default  reduce using rule 850 (make_dim_decl)


State 1474

  861 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 861 (make_table_decl)


State 1475

  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1516


State 1476

  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1517


State 1477

  827 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1518


State 1478

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ';'    shift, and go to state 1519

    $default  reduce using rule 862 (array_comprehension_where)

    array_comprehension_where  go to state 1520


State 1479

  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1521
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1480

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  807 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 807 (make_struct_fields)


State 1481

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  806 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 806 (make_struct_fields)


State 1482

  401 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name .

    $default  reduce using rule 401 (func_addr_expr)


State 1483

  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1519

    $default  reduce using rule 862 (array_comprehension_where)

    array_comprehension_where  go to state 1522


State 1484

  347 block_or_simple_block: "=>" "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 347 (block_or_simple_block)


State 1485

  488 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 488 (expr)


State 1486

   78 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 78 (expression_else_one_liner)


State 1487

   82 expression_if_one_liner: expression_break .

    $default  reduce using rule 82 (expression_if_one_liner)


State 1488

   83 expression_if_one_liner: expression_continue .

    $default  reduce using rule 83 (expression_if_one_liner)


State 1489

   80 expression_if_one_liner: expression_return .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1490

   81 expression_if_one_liner: expression_yield .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1491

   79 expression_if_one_liner: expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 79 (expression_if_one_liner)


State 1492

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 100 (expression_if_then_else_oneliner)


State 1493

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1523
    "elif"         shift, and go to state 1524
    "static_elif"  shift, and go to state 1525

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1526
    expression_else      go to state 1527


State 1494

   90 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1528


State 1495

   92 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder           go to state 472
    expr_reader              go to state 473
    expression_if_one_liner  go to state 1529
    expr_call_pipe           go to state 474
    name_in_namespace        go to state 475
    expr_new                 go to state 476
    expression_break         go to state 1487
    expression_continue      go to state 1488
    expression_return        go to state 1489
    expression_yield         go to state 1490
    expr_cast                go to state 477
    expr_type_decl           go to state 478
    expr_type_info           go to state 479
    block_or_lambda          go to state 480
    expr_full_block          go to state 481
    expr_numeric_const       go to state 482
    expr_named_call          go to state 483
    expr_method_call         go to state 484
    func_addr_expr           go to state 485
    expr_field               go to state 486
    expr_call                go to state 487
    expr                     go to state 1491
    expr_generator           go to state 489
    expr_mtag                go to state 490
    basic_type_declaration   go to state 491
    make_decl                go to state 492
    make_struct_decl         go to state 493
    make_tuple_call          go to state 494
    make_dim_decl            go to state 495
    make_table_decl          go to state 496
    array_comprehension      go to state 497


State 1496

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1530


State 1497

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 112 (expression_while_loop)


State 1498

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 114 (expression_with)


State 1499

  258 expression_block_finally: "finally" $@14 '{' expressions $@15 . '}'

    '}'  shift, and go to state 1531


State 1500

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  725 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  726                                   | type_declaration_no_options . "explicit"
  727                                   | type_declaration_no_options . "const"
  728                                   | type_declaration_no_options . '-' "const"
  729                                   | type_declaration_no_options . '&'
  730                                   | type_declaration_no_options . '-' '&'
  731                                   | type_declaration_no_options . '#'
  732                                   | type_declaration_no_options . "implicit"
  733                                   | type_declaration_no_options . '-' '#'
  734                                   | type_declaration_no_options . "==" "const"
  735                                   | type_declaration_no_options . "==" '&'
  736                                   | type_declaration_no_options . '?'
  740                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "<-"        shift, and go to state 550
    "??"        shift, and go to state 373
    ":="        shift, and go to state 551
    '='         shift, and go to state 552
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377

    copy_or_move_or_clone  go to state 1532


State 1501

  324 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1533
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1502

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1534


State 1503

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@42 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 540 ($@42)

    $@42  go to state 1535


State 1504

  571 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 571 (variable_declaration)


State 1505

  570 variable_declaration: variable_declaration_type .

    $default  reduce using rule 570 (variable_declaration)


State 1506

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 533 (structure_variable_declaration)


State 1507

  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  811 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1172
    ')'  shift, and go to state 1536


State 1508

  812 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  865 optional_comma: ',' .

    '('  shift, and go to state 1537

    $default  reduce using rule 865 (optional_comma)


State 1509

  814 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 814 (make_struct_dim_decl)


State 1510

  821 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 821 (make_struct_decl)


State 1511

  824 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 824 (make_struct_decl)


State 1512

  342 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 342 (expr_type_info)


State 1513

  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1538


State 1514

  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1539


State 1515

  846 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')' .

    $default  reduce using rule 846 (make_dim_decl)


State 1516

  854 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')' .

    $default  reduce using rule 854 (make_dim_decl)


State 1517

  836 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 836 (make_tuple_call)


State 1518

  827 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 827 (make_struct_decl)


State 1519

  863 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1540


State 1520

  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1541


State 1521

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ';'    shift, and go to state 1519

    $default  reduce using rule 862 (array_comprehension_where)

    array_comprehension_where  go to state 1542


State 1522

  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1543


State 1523

   73 expression_else: "else" . optional_emit_semis expression_else_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1544


State 1524

   66 elif_or_static_elif: "elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1525

   67 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 67 (elif_or_static_elif)


State 1526

   74 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_else_block expression_else

    '('  shift, and go to state 1545


State 1527

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 99 (expression_if_then_else)


State 1528

   90 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 282 (expressions)

    expressions  go to state 1546


State 1529

   92 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1547


State 1530

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1548
    $@16              go to state 400


State 1531

  258 expression_block_finally: "finally" $@14 '{' expressions $@15 '}' .

    $default  reduce using rule 258 (expression_block_finally)


State 1532

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1549
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1533

  324 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 620
    "as"                   shift, and go to state 621
    "<<"                   shift, and go to state 622
    ">>"                   shift, and go to state 623
    "++"                   shift, and go to state 624
    "--"                   shift, and go to state 625
    "<="                   shift, and go to state 626
    ">="                   shift, and go to state 627
    "=="                   shift, and go to state 628
    "!="                   shift, and go to state 629
    "->"                   shift, and go to state 630
    "??"                   shift, and go to state 631
    "?."                   shift, and go to state 632
    "?["                   shift, and go to state 633
    "<|"                   shift, and go to state 634
    "|>"                   shift, and go to state 635
    "<<<"                  shift, and go to state 636
    ">>>"                  shift, and go to state 637
    "&&"                   shift, and go to state 638
    "||"                   shift, and go to state 639
    "^^"                   shift, and go to state 640
    ".."                   shift, and go to state 641
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 642
    '|'                    shift, and go to state 643
    '^'                    shift, and go to state 644
    '&'                    shift, and go to state 645
    '<'                    shift, and go to state 646
    '>'                    shift, and go to state 647
    '-'                    shift, and go to state 648
    '+'                    shift, and go to state 649
    '*'                    shift, and go to state 650
    '/'                    shift, and go to state 651
    '%'                    shift, and go to state 652
    '.'                    shift, and go to state 653
    '['                    shift, and go to state 654
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1550


State 1534

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1551


State 1535

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1552


State 1536

  811 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 811 (make_struct_dim_list)


State 1537

  812 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 605
    "name"  shift, and go to state 988

    make_struct_fields  go to state 1553


State 1538

  840 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 840 (make_dim_decl)


State 1539

  843 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 843 (make_dim_decl)


State 1540

  863 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1554
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1541

  866 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 866 (array_comprehension)


State 1542

  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1555


State 1543

  868 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 868 (array_comprehension)


State 1544

   73 expression_else: "else" optional_emit_semis . expression_else_block

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1556
    $@6                    go to state 1557
    $@8                    go to state 1558


State 1545

   74 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_else_block expression_else

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1559
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1546

   90 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  283 expressions: expressions . expression_any
  284            | expressions . error

    error                             shift, and go to state 875
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "try"                             shift, and go to state 878
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 879
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 880
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "pass"                            shift, and go to state 882
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 883
    "goto"                            shift, and go to state 884
    "unsafe"                          shift, and go to state 885
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 89 ($@4)

    SEMICOLON                         go to state 887
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 888
    expression_goto                   go to state 889
    expression_if_one_liner           go to state 890
    $@4                               go to state 1560
    expression_if_then_else           go to state 891
    $@9                               go to state 892
    expression_if_then_else_oneliner  go to state 893
    expression_for_loop               go to state 894
    $@10                              go to state 895
    expression_unsafe                 go to state 896
    expression_while_loop             go to state 897
    $@11                              go to state 898
    expression_with                   go to state 899
    $@12                              go to state 900
    expression_with_alias             go to state 901
    expr_call_pipe                    go to state 474
    expression_any                    go to state 903
    name_in_namespace                 go to state 475
    expression_delete                 go to state 904
    expr_new                          go to state 476
    expression_break                  go to state 905
    expression_continue               go to state 906
    expression_return                 go to state 907
    expression_yield                  go to state 908
    expression_try_catch              go to state 909
    kwd_let                           go to state 910
    expression_let                    go to state 911
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 912
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 913
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 1547

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 92 (expression_if_block)


State 1548

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 109 (expression_for_loop)


State 1549

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 620
    "as"                   shift, and go to state 621
    "<<"                   shift, and go to state 622
    ">>"                   shift, and go to state 623
    "++"                   shift, and go to state 624
    "--"                   shift, and go to state 625
    "<="                   shift, and go to state 626
    ">="                   shift, and go to state 627
    "=="                   shift, and go to state 628
    "!="                   shift, and go to state 629
    "->"                   shift, and go to state 630
    "??"                   shift, and go to state 631
    "?."                   shift, and go to state 632
    "?["                   shift, and go to state 633
    "<|"                   shift, and go to state 634
    "|>"                   shift, and go to state 635
    "<<<"                  shift, and go to state 636
    ">>>"                  shift, and go to state 637
    "&&"                   shift, and go to state 638
    "||"                   shift, and go to state 639
    "^^"                   shift, and go to state 640
    ".."                   shift, and go to state 641
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 642
    '|'                    shift, and go to state 643
    '^'                    shift, and go to state 644
    '&'                    shift, and go to state 645
    '<'                    shift, and go to state 646
    '>'                    shift, and go to state 647
    '-'                    shift, and go to state 648
    '+'                    shift, and go to state 649
    '*'                    shift, and go to state 650
    '/'                    shift, and go to state 651
    '%'                    shift, and go to state 652
    '.'                    shift, and go to state 653
    '['                    shift, and go to state 654
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1561


State 1550

  324 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 324 (tuple_expansion_variable_declaration)


State 1551

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON .

    $default  reduce using rule 539 (struct_variable_declaration_list)


State 1552

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1562


State 1553

  802 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  803                   | make_struct_fields . ',' "name" ":=" expr
  806                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  807                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  812 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1172
    ')'  shift, and go to state 1563


State 1554

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'
  863 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654

    $default  reduce using rule 863 (array_comprehension_where)


State 1555

  867 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 867 (array_comprehension)


State 1556

   73 expression_else: "else" optional_emit_semis expression_else_block .

    $default  reduce using rule 73 (expression_else)


State 1557

   95 expression_else_block: $@6 . '{' expressions $@7 '}' expression_block_finally

    '{'  shift, and go to state 1564


State 1558

   97 expression_else_block: $@8 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder           go to state 472
    expr_reader              go to state 473
    expression_if_one_liner  go to state 1565
    expr_call_pipe           go to state 474
    name_in_namespace        go to state 475
    expr_new                 go to state 476
    expression_break         go to state 1487
    expression_continue      go to state 1488
    expression_return        go to state 1489
    expression_yield         go to state 1490
    expr_cast                go to state 477
    expr_type_decl           go to state 478
    expr_type_info           go to state 479
    block_or_lambda          go to state 480
    expr_full_block          go to state 481
    expr_numeric_const       go to state 482
    expr_named_call          go to state 483
    expr_method_call         go to state 484
    func_addr_expr           go to state 485
    expr_field               go to state 486
    expr_call                go to state 487
    expr                     go to state 1491
    expr_generator           go to state 489
    expr_mtag                go to state 490
    basic_type_declaration   go to state 491
    make_decl                go to state 492
    make_struct_decl         go to state 493
    make_tuple_call          go to state 494
    make_dim_decl            go to state 495
    make_table_decl          go to state 496
    array_comprehension      go to state 497


State 1559

   74 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_else_block expression_else
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  406           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  407           | expr . '.' basic_type_declaration '(' ')'
  408           | expr . '.' basic_type_declaration '(' expr_list ')'
  411           | expr . '.' $@32 error $@33
  433 expr: expr . "<<" expr
  434     | expr . ">>" expr
  435     | expr . "<<<" expr
  436     | expr . ">>>" expr
  437     | expr . '+' expr
  438     | expr . '-' expr
  439     | expr . '*' expr
  440     | expr . '/' expr
  441     | expr . '%' expr
  442     | expr . '<' expr
  443     | expr . '>' expr
  444     | expr . "==" expr
  445     | expr . "!=" expr
  446     | expr . "<=" expr
  447     | expr . ">=" expr
  448     | expr . '&' expr
  449     | expr . '|' expr
  450     | expr . '^' expr
  451     | expr . "&&" expr
  452     | expr . "||" expr
  453     | expr . "^^" expr
  454     | expr . ".." expr
  457     | expr . "++"
  458     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | expr . "??" expr
  474     | expr . '?' expr ':' expr
  477     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  478     | expr . "is" basic_type_declaration
  479     | expr . "is" "name"
  480     | expr . "as" "name"
  483     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  484     | expr . "as" basic_type_declaration
  485     | expr . '?' "as" "name"
  488     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  489     | expr . '?' "as" basic_type_declaration
  497     | expr . "<|" expr
  498     | expr . "|>" expr
  499     | expr . "|>" basic_type_declaration
  513 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr . "?." "$f" '(' expr ')'
  515          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr . "as" "$f" '(' expr ')'
  518          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 620
    "as"   shift, and go to state 621
    "<<"   shift, and go to state 622
    ">>"   shift, and go to state 623
    "++"   shift, and go to state 624
    "--"   shift, and go to state 625
    "<="   shift, and go to state 626
    ">="   shift, and go to state 627
    "=="   shift, and go to state 628
    "!="   shift, and go to state 629
    "->"   shift, and go to state 630
    "??"   shift, and go to state 631
    "?."   shift, and go to state 632
    "?["   shift, and go to state 633
    "<|"   shift, and go to state 634
    "|>"   shift, and go to state 635
    "<<<"  shift, and go to state 636
    ">>>"  shift, and go to state 637
    "&&"   shift, and go to state 638
    "||"   shift, and go to state 639
    "^^"   shift, and go to state 640
    ".."   shift, and go to state 641
    '?'    shift, and go to state 642
    '|'    shift, and go to state 643
    '^'    shift, and go to state 644
    '&'    shift, and go to state 645
    '<'    shift, and go to state 646
    '>'    shift, and go to state 647
    '-'    shift, and go to state 648
    '+'    shift, and go to state 649
    '*'    shift, and go to state 650
    '/'    shift, and go to state 651
    '%'    shift, and go to state 652
    '.'    shift, and go to state 653
    '['    shift, and go to state 654
    ')'    shift, and go to state 1566


State 1560

   90 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1567


State 1561

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 323 (tuple_expansion_variable_declaration)


State 1562

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 259 ($@16)

    expression_block  go to state 1568
    $@16              go to state 400


State 1563

  812 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 812 (make_struct_dim_list)


State 1564

   95 expression_else_block: $@6 '{' . expressions $@7 '}' expression_block_finally

    $default  reduce using rule 282 (expressions)

    expressions  go to state 1569


State 1565

   97 expression_else_block: $@8 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1570


State 1566

   74 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_else_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1571


State 1567

   90 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1229

    $default  reduce using rule 255 (expression_block_finally)

    expression_block_finally  go to state 1572


State 1568

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 541 (struct_variable_declaration_list)


State 1569

   95 expression_else_block: $@6 '{' expressions . $@7 '}' expression_block_finally
  283 expressions: expressions . expression_any
  284            | expressions . error

    error                             shift, and go to state 875
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 876
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 877
    "try"                             shift, and go to state 878
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 879
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 880
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 881
    "pass"                            shift, and go to state 882
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 883
    "goto"                            shift, and go to state 884
    "unsafe"                          shift, and go to state 885
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 886
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 94 ($@7)

    SEMICOLON                         go to state 887
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 888
    expression_goto                   go to state 889
    expression_if_one_liner           go to state 890
    $@7                               go to state 1573
    expression_if_then_else           go to state 891
    $@9                               go to state 892
    expression_if_then_else_oneliner  go to state 893
    expression_for_loop               go to state 894
    $@10                              go to state 895
    expression_unsafe                 go to state 896
    expression_while_loop             go to state 897
    $@11                              go to state 898
    expression_with                   go to state 899
    $@12                              go to state 900
    expression_with_alias             go to state 901
    expr_call_pipe                    go to state 474
    expression_any                    go to state 903
    name_in_namespace                 go to state 475
    expression_delete                 go to state 904
    expr_new                          go to state 476
    expression_break                  go to state 905
    expression_continue               go to state 906
    expression_return                 go to state 907
    expression_yield                  go to state 908
    expression_try_catch              go to state 909
    kwd_let                           go to state 910
    expression_let                    go to state 911
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 912
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 913
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 1570

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 97 (expression_else_block)


State 1571

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_else_block expression_else

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1574
    $@6                    go to state 1557
    $@8                    go to state 1558


State 1572

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 90 (expression_if_block)


State 1573

   95 expression_else_block: $@6 '{' expressions $@7 . '}' expression_block_finally

    '}'  shift, and go to state 1575


State 1574

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block . expression_else

    "else"         shift, and go to state 1523
    "elif"         shift, and go to state 1524
    "static_elif"  shift, and go to state 1525

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1526
    expression_else      go to state 1576


State 1575

   95 expression_else_block: $@6 '{' expressions $@7 '}' . expression_block_finally

    "finally"  shift, and go to state 1229

    $default  reduce using rule 255 (expression_block_finally)

    expression_block_finally  go to state 1577


State 1576

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else .

    $default  reduce using rule 74 (expression_else)


State 1577

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally .

    $default  reduce using rule 95 (expression_else_block)
