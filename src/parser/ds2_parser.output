Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1477 conflicts: 1 reduce/reduce
State 1570 conflicts: 1 reduce/reduce
State 1597 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 optional_not_required: %empty
   27                      | '!' "inscope"

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   29 character_sequence: STRING_CHARACTER
   30                   | STRING_CHARACTER_ESC
   31                   | character_sequence STRING_CHARACTER
   32                   | character_sequence STRING_CHARACTER_ESC

   33 string_constant: "start of the string" character_sequence "end of the string"
   34                | "start of the string" "end of the string"

   35 format_string: %empty
   36              | format_string STRING_CHARACTER

   37 optional_format_string: %empty

   38 $@1: %empty

   39 optional_format_string: ':' $@1 format_string

   40 string_builder_body: %empty
   41                    | string_builder_body character_sequence
   42                    | string_builder_body "{" expr optional_format_string "}"

   43 string_builder: "start of the string" string_builder_body "end of the string"

   44 reader_character_sequence: STRING_CHARACTER
   45                          | reader_character_sequence STRING_CHARACTER

   46 $@2: %empty

   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   48 options_declaration: "options" annotation_argument_list

   49 require_declaration: "require" require_module

   50 require_module_name: "name"
   51                    | '%' require_module_name
   52                    | require_module_name '.' "name"
   53                    | require_module_name '/' "name"

   54 require_module: require_module_name is_public_module
   55               | require_module_name "as" "name" is_public_module

   56 is_public_module: %empty
   57                 | "public"

   58 expect_declaration: "expect" expect_list

   59 expect_list: expect_error
   60            | expect_list ',' expect_error

   61 expect_error: "integer constant"
   62             | "integer constant" ':' "integer constant"

   63 expression_label: "label" "integer constant" ':'

   64 expression_goto: "goto" "label" "integer constant"
   65                | "goto" expr

   66 elif_or_static_elif: "elif"
   67                    | "static_elif"

   68 emit_semis: "new line, semicolon"
   69           | emit_semis "new line, semicolon"

   70 optional_emit_semis: %empty
   71                    | emit_semis

   72 expression_else: %empty
   73                | "else" optional_emit_semis expression_else_block
   74                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else

   75 if_or_static_if: "if"
   76                | "static_if"

   77 expression_else_one_liner: %empty
   78                          | "else" expression_if_one_liner

   79 expression_if_one_liner: expr
   80                        | expression_return
   81                        | expression_yield
   82                        | expression_break
   83                        | expression_continue

   84 semis: SEMICOLON
   85      | semis SEMICOLON

   86 optional_semis: %empty
   87               | semis

   88 $@3: %empty

   89 $@4: %empty

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   91 $@5: %empty

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   93 $@6: %empty

   94 $@7: %empty

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally

   96 $@8: %empty

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON

   98 $@9: %empty

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

  101 for_variable_name_with_pos_list: "name"
  102                                | "$i" '(' expr ')'
  103                                | "name" "aka" "name"
  104                                | '(' tuple_expansion ')'
  105                                | for_variable_name_with_pos_list ',' "name"
  106                                | for_variable_name_with_pos_list ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' '(' tuple_expansion ')'

  108 $@10: %empty

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block

  111 $@11: %empty

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block

  113 $@12: %empty

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block

  115 expression_with_alias: "assume" "name" '=' expr
  116                      | "typedef" "name" '=' type_declaration

  117 annotation_argument_value: string_constant
  118                          | "name"
  119                          | "integer constant"
  120                          | "floating point constant"
  121                          | "true"
  122                          | "false"

  123 annotation_argument_value_list: annotation_argument_value
  124                               | annotation_argument_value_list ',' annotation_argument_value

  125 annotation_argument_name: "name"
  126                         | "type"
  127                         | "in"

  128 annotation_argument: annotation_argument_name '=' string_constant
  129                    | annotation_argument_name '=' "name"
  130                    | annotation_argument_name '=' "integer constant"
  131                    | annotation_argument_name '=' "floating point constant"
  132                    | annotation_argument_name '=' "true"
  133                    | annotation_argument_name '=' "false"
  134                    | annotation_argument_name
  135                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  136 annotation_argument_list: annotation_argument
  137                         | annotation_argument_list ',' annotation_argument

  138 metadata_argument_list: '@' annotation_argument optional_emit_semis
  139                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  140 annotation_declaration_name: name_in_namespace
  141                            | "require"
  142                            | "private"
  143                            | "template"

  144 annotation_declaration_basic: annotation_declaration_name
  145                             | annotation_declaration_name '(' annotation_argument_list ')'

  146 annotation_declaration: annotation_declaration_basic
  147                       | '!' annotation_declaration
  148                       | annotation_declaration "&&" annotation_declaration
  149                       | annotation_declaration "||" annotation_declaration
  150                       | annotation_declaration "^^" annotation_declaration
  151                       | '(' annotation_declaration ')'
  152                       | "|>" annotation_declaration

  153 annotation_list: annotation_declaration
  154                | annotation_list ',' annotation_declaration

  155 optional_annotation_list: %empty
  156                         | '[' annotation_list ']'

  157 optional_annotation_list_with_emit_semis: %empty
  158                                         | '[' annotation_list ']' optional_emit_semis

  159 optional_function_argument_list: %empty
  160                                | '(' ')'
  161                                | '(' function_argument_list ')'

  162 optional_function_type: %empty
  163                       | ':' type_declaration

  164 function_name: "name"
  165              | "operator" '!'
  166              | "operator" '~'
  167              | "operator" "+="
  168              | "operator" "-="
  169              | "operator" "*="
  170              | "operator" "/="
  171              | "operator" "%="
  172              | "operator" "&="
  173              | "operator" "|="
  174              | "operator" "^="
  175              | "operator" "&&="
  176              | "operator" "||="
  177              | "operator" "^^="
  178              | "operator" "&&"
  179              | "operator" "||"
  180              | "operator" "^^"
  181              | "operator" '+'
  182              | "operator" '-'
  183              | "operator" '*'
  184              | "operator" '/'
  185              | "operator" '%'
  186              | "operator" '<'
  187              | "operator" '>'
  188              | "operator" ".."
  189              | "operator" "=="
  190              | "operator" "!="
  191              | "operator" "<="
  192              | "operator" ">="
  193              | "operator" '&'
  194              | "operator" '|'
  195              | "operator" '^'
  196              | "++" "operator"
  197              | "--" "operator"
  198              | "operator" "++"
  199              | "operator" "--"
  200              | "operator" "<<"
  201              | "operator" ">>"
  202              | "operator" "<<="
  203              | "operator" ">>="
  204              | "operator" "<<<"
  205              | "operator" ">>>"
  206              | "operator" "<<<="
  207              | "operator" ">>>="
  208              | "operator" '[' ']'
  209              | "operator" "?[" ']'
  210              | "operator" '.'
  211              | "operator" "?."
  212              | "operator" '.' "name"
  213              | "operator" '.' "name" ":="
  214              | "operator" '.' "name" "+="
  215              | "operator" '.' "name" "-="
  216              | "operator" '.' "name" "*="
  217              | "operator" '.' "name" "/="
  218              | "operator" '.' "name" "%="
  219              | "operator" '.' "name" "&="
  220              | "operator" '.' "name" "|="
  221              | "operator" '.' "name" "^="
  222              | "operator" '.' "name" "&&="
  223              | "operator" '.' "name" "||="
  224              | "operator" '.' "name" "^^="
  225              | "operator" "?." "name"
  226              | "operator" ":="
  227              | "operator" "delete"
  228              | "operator" "??"
  229              | "operator" "is"
  230              | "operator" "as"
  231              | "operator" "is" "name"
  232              | "operator" "as" "name"
  233              | "operator" '?' "as"
  234              | "operator" '?' "as" "name"
  235              | "bool"
  236              | "string"
  237              | "int"
  238              | "int2"
  239              | "int3"
  240              | "int4"
  241              | "uint"
  242              | "uint2"
  243              | "uint3"
  244              | "uint4"
  245              | "float"
  246              | "float2"
  247              | "float3"
  248              | "float4"
  249              | "range"
  250              | "urange"
  251              | "range64"
  252              | "urange64"
  253              | "int64"
  254              | "uint64"
  255              | "double"
  256              | "int8"
  257              | "uint8"
  258              | "int16"
  259              | "uint16"

  260 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  261 optional_public_or_private_function: %empty
  262                                    | "private"
  263                                    | "public"

  264 function_declaration_header: function_name optional_function_argument_list optional_function_type

  265 $@13: %empty

  266 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block

  267 expression_block_finally: %empty

  268 $@14: %empty

  269 $@15: %empty

  270 expression_block_finally: "finally" $@14 '{' expressions $@15 '}'

  271 $@16: %empty

  272 $@17: %empty

  273 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally

  274 expr_call_pipe: expr_call expr_full_block_assumed_piped

  275 expression_any: SEMICOLON
  276               | expr_assign SEMICOLON
  277               | expression_delete SEMICOLON
  278               | expression_let
  279               | expression_while_loop
  280               | expression_unsafe
  281               | expression_with
  282               | expression_with_alias SEMICOLON
  283               | expression_for_loop
  284               | expression_break SEMICOLON
  285               | expression_continue SEMICOLON
  286               | expression_return SEMICOLON
  287               | expression_yield SEMICOLON
  288               | expression_if_then_else
  289               | expression_if_then_else_oneliner
  290               | expression_try_catch
  291               | expression_label SEMICOLON
  292               | expression_goto SEMICOLON
  293               | "pass" SEMICOLON

  294 expressions: %empty
  295            | expressions expression_any
  296            | expressions error

  297 optional_expr_list: %empty
  298                   | expr_list optional_comma

  299 optional_expr_map_tuple_list: %empty
  300                             | expr_map_tuple_list optional_comma

  301 type_declaration_no_options_list: type_declaration
  302                                 | type_declaration_no_options_list c_or_s type_declaration

  303 name_in_namespace: "name"
  304                  | "name" "::" "name"
  305                  | "::" "name"

  306 expression_delete: "delete" expr
  307                  | "delete" "explicit" expr

  308 $@18: %empty

  309 $@19: %empty

  310 new_type_declaration: '<' $@18 type_declaration '>' $@19
  311                     | structure_type_declaration

  312 expr_new: "new" new_type_declaration
  313         | "new" new_type_declaration '(' use_initializer ')'
  314         | "new" new_type_declaration '(' expr_list ')'
  315         | "new" new_type_declaration '(' make_struct_single ')'
  316         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  317         | "new" make_decl

  318 expression_break: "break"

  319 expression_continue: "continue"

  320 expression_return: "return"
  321                  | "return" expr
  322                  | "return" "<-" expr

  323 expression_yield: "yield" expr
  324                 | "yield" "<-" expr

  325 expression_try_catch: "try" expression_block "recover" expression_block

  326 kwd_let_var_or_nothing: "let"
  327                       | "var"
  328                       | %empty

  329 kwd_let: "let"
  330        | "var"

  331 optional_in_scope: "inscope"
  332                  | %empty

  333 tuple_expansion: "name"
  334                | tuple_expansion ',' "name"

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  336                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  337 expression_let: kwd_let optional_in_scope let_variable_declaration
  338               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  339               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  340 $@20: %empty

  341 $@21: %empty

  342 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr

  343 $@22: %empty

  344 $@23: %empty

  345 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr

  346 $@24: %empty

  347 $@25: %empty

  348 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr

  349 $@26: %empty

  350 $@27: %empty

  351 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27

  352 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  353               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  354               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  355 expr_list: expr
  356          | expr_list ',' expr

  357 block_or_simple_block: expression_block
  358                      | "=>" expr
  359                      | "=>" "<-" expr

  360 block_or_lambda: '$'
  361                | '@'
  362                | '@' '@'

  363 capture_entry: '&' "name"
  364              | '=' "name"
  365              | "<-" "name"
  366              | ":=" "name"
  367              | "name" '(' "name" ')'

  368 capture_list: capture_entry
  369             | capture_list ',' capture_entry

  370 optional_capture_list: %empty
  371                      | "capture" '(' capture_list ')'

  372 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  373 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  374                              | '{' expressions '}'

  375 expr_numeric_const: "integer constant"
  376                   | "unsigned integer constant"
  377                   | "long integer constant"
  378                   | "unsigned long integer constant"
  379                   | "unsigned int8 constant"
  380                   | "floating point constant"
  381                   | "double constant"

  382 expr_assign: expr
  383            | expr '=' expr
  384            | expr "<-" expr
  385            | expr ":=" expr
  386            | expr "&=" expr
  387            | expr "|=" expr
  388            | expr "^=" expr
  389            | expr "&&=" expr
  390            | expr "||=" expr
  391            | expr "^^=" expr
  392            | expr "+=" expr
  393            | expr "-=" expr
  394            | expr "*=" expr
  395            | expr "/=" expr
  396            | expr "%=" expr
  397            | expr "<<=" expr
  398            | expr ">>=" expr
  399            | expr "<<<=" expr
  400            | expr ">>>=" expr

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  402                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  403 expr_method_call: expr "->" "name" '(' ')'
  404                 | expr "->" "name" '(' expr_list ')'

  405 func_addr_name: name_in_namespace
  406               | "$i" '(' expr ')'

  407 func_addr_expr: '@' '@' func_addr_name

  408 $@28: %empty

  409 $@29: %empty

  410 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name

  411 $@30: %empty

  412 $@31: %empty

  413 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

  414 expr_field: expr '.' "name"
  415           | expr '.' '.' "name"
  416           | expr '.' "name" '(' ')'
  417           | expr '.' "name" '(' expr_list ')'
  418           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr '.' basic_type_declaration '(' ')'
  420           | expr '.' basic_type_declaration '(' expr_list ')'

  421 $@32: %empty

  422 $@33: %empty

  423 expr_field: expr '.' $@32 error $@33

  424 expr_call: name_in_namespace '(' ')'
  425          | name_in_namespace '(' "uninitialized" ')'
  426          | name_in_namespace '(' make_struct_single ')'
  427          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  428          | name_in_namespace '(' expr_list ')'
  429          | basic_type_declaration '(' ')'
  430          | basic_type_declaration '(' expr_list ')'

  431 expr: "null"
  432     | name_in_namespace
  433     | expr_numeric_const
  434     | expr_reader
  435     | string_builder
  436     | make_decl
  437     | "true"
  438     | "false"
  439     | expr_field
  440     | expr_mtag
  441     | '!' expr
  442     | '~' expr
  443     | '+' expr
  444     | '-' expr
  445     | expr "<<" expr
  446     | expr ">>" expr
  447     | expr "<<<" expr
  448     | expr ">>>" expr
  449     | expr '+' expr
  450     | expr '-' expr
  451     | expr '*' expr
  452     | expr '/' expr
  453     | expr '%' expr
  454     | expr '<' expr
  455     | expr '>' expr
  456     | expr "==" expr
  457     | expr "!=" expr
  458     | expr "<=" expr
  459     | expr ">=" expr
  460     | expr '&' expr
  461     | expr '|' expr
  462     | expr '^' expr
  463     | expr "&&" expr
  464     | expr "||" expr
  465     | expr "^^" expr
  466     | expr ".." expr
  467     | "++" expr
  468     | "--" expr
  469     | expr "++"
  470     | expr "--"
  471     | '(' expr_list optional_comma ')'
  472     | '(' make_struct_single ')'
  473     | expr '[' expr ']'
  474     | expr '.' '[' expr ']'
  475     | expr "?[" expr ']'
  476     | expr '.' "?[" expr ']'
  477     | expr "?." "name"
  478     | expr '.' "?." "name"
  479     | func_addr_expr
  480     | expr_call
  481     | '*' expr
  482     | "deref" '(' expr ')'
  483     | "addr" '(' expr ')'
  484     | expr_generator
  485     | expr "??" expr
  486     | expr '?' expr ':' expr

  487 $@34: %empty

  488 $@35: %empty

  489 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr "is" basic_type_declaration
  491     | expr "is" "name"
  492     | expr "as" "name"

  493 $@36: %empty

  494 $@37: %empty

  495 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr "as" basic_type_declaration
  497     | expr '?' "as" "name"

  498 $@38: %empty

  499 $@39: %empty

  500 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr '?' "as" basic_type_declaration
  502     | expr_type_info
  503     | expr_type_decl
  504     | expr_cast
  505     | expr_new
  506     | expr_method_call
  507     | expr_named_call
  508     | expr_full_block
  509     | expr "<|" expr
  510     | expr "|>" expr
  511     | expr "|>" basic_type_declaration
  512     | expr_call_pipe
  513     | "unsafe" '(' expr ')'

  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  515               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  516               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  517 expr_mtag: "$$" '(' expr ')'
  518          | "$i" '(' expr ')'
  519          | "$v" '(' expr ')'
  520          | "$b" '(' expr ')'
  521          | "$a" '(' expr ')'
  522          | "..."
  523          | "$c" '(' expr ')' '(' ')'
  524          | "$c" '(' expr ')' '(' expr_list ')'
  525          | expr '.' "$f" '(' expr ')'
  526          | expr "?." "$f" '(' expr ')'
  527          | expr '.' '.' "$f" '(' expr ')'
  528          | expr '.' "?." "$f" '(' expr ')'
  529          | expr "as" "$f" '(' expr ')'
  530          | expr '?' "as" "$f" '(' expr ')'
  531          | expr "is" "$f" '(' expr ')'
  532          | '@' '@' "$c" '(' expr ')'

  533 optional_field_annotation: %empty
  534                          | metadata_argument_list

  535 optional_override: %empty
  536                  | "override"
  537                  | "sealed"

  538 optional_constant: %empty
  539                  | "const"

  540 optional_public_or_private_member_variable: %empty
  541                                           | "public"
  542                                           | "private"

  543 optional_static_member_variable: %empty
  544                                | "static"

  545 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  546 struct_variable_declaration_list: %empty
  547                                 | struct_variable_declaration_list "new line, semicolon"

  548 $@40: %empty

  549 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON

  550 $@41: %empty

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON

  552 $@42: %empty

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

  554 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  555 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  556                                   | "$a" '(' expr ')'

  557 function_argument_list: function_argument_declaration_no_type
  558                       | function_argument_declaration_type
  559                       | function_argument_declaration_no_type ';' function_argument_list
  560                       | function_argument_declaration_type ';' function_argument_list
  561                       | function_argument_declaration_type ',' function_argument_list

  562 tuple_type: type_declaration
  563           | "name" ':' type_declaration

  564 tuple_type_list: tuple_type
  565                | tuple_type_list c_or_s tuple_type

  566 tuple_alias_type_list: %empty
  567                      | tuple_type
  568                      | tuple_alias_type_list semis tuple_type

  569 variant_type: "name" ':' type_declaration

  570 variant_type_list: variant_type
  571                  | variant_type_list c_or_s variant_type

  572 variant_alias_type_list: %empty
  573                        | variant_type
  574                        | variant_alias_type_list semis variant_type

  575 copy_or_move: '='
  576             | "<-"

  577 variable_declaration_no_type: variable_name_with_pos_list
  578                             | variable_name_with_pos_list '&'
  579                             | variable_name_with_pos_list copy_or_move expr

  580 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  581                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  582 variable_declaration: variable_declaration_type
  583                     | variable_declaration_no_type

  584 copy_or_move_or_clone: '='
  585                      | "<-"
  586                      | ":="

  587 optional_ref: %empty
  588             | '&'

  589 let_variable_name_with_pos_list: "name"
  590                                | "$i" '(' expr ')'
  591                                | "name" "aka" "name"
  592                                | let_variable_name_with_pos_list ',' "name"
  593                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  594 global_let_variable_name_with_pos_list: "name"
  595                                       | global_let_variable_name_with_pos_list ',' "name"

  596 variable_declaration_list: %empty
  597                          | variable_declaration_list SEMICOLON
  598                          | variable_declaration_list let_variable_declaration

  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  600                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  601                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  603                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  604                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  605 optional_shared: %empty
  606                | "shared"

  607 optional_public_or_private_variable: %empty
  608                                    | "private"
  609                                    | "public"

  610 global_variable_declaration_list: %empty
  611                                 | global_variable_declaration_list SEMICOLON

  612 $@43: %empty

  613 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration

  614 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  615 $@44: %empty

  616 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

  617 enum_expression: "name"
  618                | "name" '=' expr

  619 commas: COMMA
  620       | commas COMMA

  621 enum_list: %empty
  622          | enum_expression
  623          | enum_list commas enum_expression

  624 optional_public_or_private_alias: %empty
  625                                 | "private"
  626                                 | "public"

  627 $@45: %empty

  628 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration

  629 alias_declaration: "typedef" single_alias SEMICOLON

  630 optional_public_or_private_enum: %empty
  631                                | "private"
  632                                | "public"

  633 enum_name: "name"

  634 optional_enum_basic_type_declaration: %empty
  635                                     | ':' enum_basic_type_declaration

  636 optional_commas: %empty
  637                | commas

  638 emit_commas: "new line, comma"
  639            | emit_commas "new line, comma"

  640 optional_emit_commas: %empty
  641                     | emit_commas

  642 $@46: %empty

  643 $@47: %empty

  644 $@48: %empty

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

  646 optional_structure_parent: %empty
  647                          | ':' name_in_namespace

  648 optional_sealed: %empty
  649                | "sealed"

  650 structure_name: optional_sealed "name" optional_structure_parent

  651 class_or_struct: "class"
  652                | "struct"
  653                | "template" "class"
  654                | "template" "struct"

  655 optional_public_or_private_structure: %empty
  656                                     | "private"
  657                                     | "public"

  658 optional_struct_variable_declaration_list: ';'
  659                                          | '{' struct_variable_declaration_list '}'

  660 $@49: %empty

  661 $@50: %empty

  662 $@51: %empty

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

  664 variable_name_with_pos_list: "name"
  665                            | "$i" '(' expr ')'
  666                            | "name" "aka" "name"
  667                            | variable_name_with_pos_list ',' "name"
  668                            | variable_name_with_pos_list ',' "name" "aka" "name"

  669 basic_type_declaration: "bool"
  670                       | "string"
  671                       | "int"
  672                       | "int8"
  673                       | "int16"
  674                       | "int64"
  675                       | "int2"
  676                       | "int3"
  677                       | "int4"
  678                       | "uint"
  679                       | "uint8"
  680                       | "uint16"
  681                       | "uint64"
  682                       | "uint2"
  683                       | "uint3"
  684                       | "uint4"
  685                       | "float"
  686                       | "float2"
  687                       | "float3"
  688                       | "float4"
  689                       | "void"
  690                       | "range"
  691                       | "urange"
  692                       | "range64"
  693                       | "urange64"
  694                       | "double"
  695                       | "bitfield"

  696 enum_basic_type_declaration: "int"
  697                            | "int8"
  698                            | "int16"
  699                            | "uint"
  700                            | "uint8"
  701                            | "uint16"
  702                            | "int64"
  703                            | "uint64"

  704 structure_type_declaration: name_in_namespace

  705 auto_type_declaration: "auto"
  706                      | "auto" '(' "name" ')'
  707                      | "$t" '(' expr ')'

  708 bitfield_bits: "name"
  709              | bitfield_bits ';' "name"

  710 bitfield_alias_bits: %empty
  711                    | "name"
  712                    | "name" '=' expr
  713                    | bitfield_alias_bits commas "name"
  714                    | bitfield_alias_bits commas "name" '=' expr

  715 bitfield_basic_type_declaration: %empty
  716                                | ':' "uint8"
  717                                | ':' "uint16"
  718                                | ':' "uint"
  719                                | ':' "uint64"

  720 $@52: %empty

  721 $@53: %empty

  722 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@52 bitfield_bits '>' $@53

  723 c_or_s: COMMA
  724       | SEMICOLON

  725 table_type_pair: type_declaration
  726                | type_declaration c_or_s type_declaration

  727 dim_list: '[' expr ']'
  728         | '[' ']'
  729         | dim_list '[' expr ']'
  730         | dim_list '[' ']'

  731 type_declaration_no_options: type_declaration_no_options_no_dim
  732                            | type_declaration_no_options_no_dim dim_list

  733 type_declaration_no_options_no_dim: basic_type_declaration
  734                                   | auto_type_declaration
  735                                   | bitfield_type_declaration
  736                                   | structure_type_declaration

  737 $@54: %empty

  738 $@55: %empty

  739 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55
  740                                   | "typedecl" '(' expr ')'
  741                                   | '$' name_in_namespace '(' optional_expr_list ')'

  742 $@56: %empty

  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  744                                   | type_declaration_no_options '-' '[' ']'
  745                                   | type_declaration_no_options "explicit"
  746                                   | type_declaration_no_options "const"
  747                                   | type_declaration_no_options '-' "const"
  748                                   | type_declaration_no_options '&'
  749                                   | type_declaration_no_options '-' '&'
  750                                   | type_declaration_no_options '#'
  751                                   | type_declaration_no_options "implicit"
  752                                   | type_declaration_no_options '-' '#'
  753                                   | type_declaration_no_options "==" "const"
  754                                   | type_declaration_no_options "==" '&'
  755                                   | type_declaration_no_options '?'

  756 $@57: %empty

  757 $@58: %empty

  758 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58
  759                                   | type_declaration_no_options "??"

  760 $@59: %empty

  761 $@60: %empty

  762 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60

  763 $@61: %empty

  764 $@62: %empty

  765 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62

  766 $@63: %empty

  767 $@64: %empty

  768 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64
  769                                   | "block"

  770 $@65: %empty

  771 $@66: %empty

  772 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66

  773 $@67: %empty

  774 $@68: %empty

  775 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  776                                   | "function"

  777 $@69: %empty

  778 $@70: %empty

  779 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70

  780 $@71: %empty

  781 $@72: %empty

  782 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72
  783                                   | "lambda"

  784 $@73: %empty

  785 $@74: %empty

  786 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74

  787 $@75: %empty

  788 $@76: %empty

  789 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76

  790 $@77: %empty

  791 $@78: %empty

  792 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78

  793 $@79: %empty

  794 $@80: %empty

  795 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80

  796 type_declaration: type_declaration_no_options
  797                 | type_declaration '|' type_declaration_no_options
  798                 | type_declaration '|' '#'

  799 $@81: %empty

  800 $@82: %empty

  801 $@83: %empty

  802 $@84: %empty

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

  804 $@85: %empty

  805 $@86: %empty

  806 $@87: %empty

  807 $@88: %empty

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

  809 $@89: %empty

  810 $@90: %empty

  811 $@91: %empty

  812 $@92: %empty

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

  814 make_decl: make_struct_decl
  815          | make_dim_decl
  816          | make_table_decl
  817          | array_comprehension
  818          | make_tuple_call

  819 make_struct_fields: "name" copy_or_move expr
  820                   | "name" ":=" expr
  821                   | make_struct_fields ',' "name" copy_or_move expr
  822                   | make_struct_fields ',' "name" ":=" expr
  823                   | "$f" '(' expr ')' copy_or_move expr
  824                   | "$f" '(' expr ')' ":=" expr
  825                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  827 make_variant_dim: %empty
  828                 | make_struct_fields

  829 make_struct_single: make_struct_fields optional_comma

  830 make_struct_dim_list: '(' make_struct_fields ')'
  831                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  832 make_struct_dim_decl: make_struct_fields
  833                     | make_struct_dim_list optional_comma

  834 optional_make_struct_dim_decl: make_struct_dim_decl
  835                              | %empty

  836 use_initializer: %empty
  837                | "uninitialized"

  838 $@93: %empty

  839 $@94: %empty

  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  841 $@95: %empty

  842 $@96: %empty

  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  844 $@97: %empty

  845 $@98: %empty

  846 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

  847 $@99: %empty

  848 $@100: %empty

  849 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer

  850 make_map_tuple: expr "=>" expr
  851               | expr

  852 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  853 $@101: %empty

  854 $@102: %empty

  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  856 make_dim_decl: '[' optional_expr_list ']'

  857 $@103: %empty

  858 $@104: %empty

  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  860 $@105: %empty

  861 $@106: %empty

  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

  863 $@107: %empty

  864 $@108: %empty

  865 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  866              | "array" '(' expr_list optional_comma ')'

  867 $@109: %empty

  868 $@110: %empty

  869 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'
  870              | "fixed_array" '(' expr_list optional_comma ')'

  871 $@111: %empty

  872 $@112: %empty

  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

  874 expr_map_tuple_list: make_map_tuple
  875                    | expr_map_tuple_list ',' make_map_tuple

  876 $@113: %empty

  877 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  878                | "table" '(' expr_map_tuple_list optional_comma ')'
  879                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  881 array_comprehension_where: %empty
  882                          | ';' "where" expr

  883 optional_comma: %empty
  884               | ','

  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  886                    | '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  887                    | '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 27 147 165 441
    '#' (35) 750 752 798
    '$' (36) 24 360 741 743
    '%' (37) 47 51 185 453
    '&' (38) 193 363 460 578 588 748 749 754
    '(' (40) 74 99 100 102 104 107 109 112 114 135 145 151 160 161 313 314 315 316 335 336 352 353 354 367 371 401 402 403 404 406 416 417 418 419 420 424 425 426 427 428 429 430 471 472 482 483 513 514 515 517 518 519 520 521 523 524 525 526 527 528 529 530 531 532 556 590 665 706 707 740 741 743 823 824 825 826 830 831 840 843 846 852 855 859 862 865 866 869 870 873 878 879 880 885 886 887
    ')' (41) 74 99 100 102 104 107 109 112 114 135 145 151 160 161 313 314 315 316 335 336 352 353 354 367 371 401 402 403 404 406 416 417 418 419 420 424 425 426 427 428 429 430 471 472 482 483 513 514 515 517 518 519 520 521 523 524 525 526 527 528 529 530 531 532 556 590 665 706 707 740 741 743 823 824 825 826 830 831 840 843 846 852 855 859 862 865 866 869 870 873 878 879 880 885 886 887
    '*' (42) 183 451 481
    '+' (43) 181 443 449
    ',' (44) 16 60 105 106 107 124 137 154 334 356 369 402 561 592 593 595 667 668 821 822 825 826 831 875 884
    '-' (45) 182 444 450 744 747 749 752
    '.' (46) 52 210 212 213 214 215 216 217 218 219 220 221 222 223 224 414 415 416 417 418 419 420 423 474 476 478 525 527 528
    '/' (47) 53 184 452
    ':' (58) 39 62 63 163 335 486 563 569 580 581 599 600 602 603 635 647 716 717 718 719
    ';' (59) 18 559 560 658 709 882 885 886 887
    '<' (60) 186 310 342 345 348 351 353 354 410 413 454 489 495 500 514 515 516 722 739 743 758 762 765 768 772 775 779 782 786 789 792 795 840 843 846 849 855 859 862 865 869 873 879 880
    '=' (61) 115 116 128 129 130 131 132 133 135 364 383 575 584 618 628 712 714
    '>' (62) 187 310 342 345 348 351 353 354 410 413 455 489 495 500 514 515 516 722 739 743 758 762 765 768 772 775 779 782 786 789 792 795 840 843 846 849 855 859 862 865 869 873 879 880
    '?' (63) 233 234 486 497 500 501 530 755
    '@' (64) 138 139 361 362 407 410 413 532
    '[' (91) 156 158 208 401 402 418 473 474 727 728 729 730 744 856 885 886
    ']' (93) 156 158 208 209 401 402 418 473 474 475 476 727 728 729 730 744 856 885 886
    '^' (94) 195 462
    '{' (123) 90 95 270 273 339 374 614 645 659 803 808 813 877 887
    '|' (124) 194 461 797 798
    '}' (125) 90 95 270 273 339 374 614 645 659 803 808 813 877 887
    '~' (126) 166 442
    error (256) 296 423
    "lexer error" (258)
    "capture" (259) 371
    "struct" (260) 652 654 840 859
    "class" (261) 651 653 843
    "let" (262) 326 329
    "def" (263) 260 551 553
    "while" (264) 112
    "if" (265) 75 100
    "static_if" (266) 76
    "else" (267) 73 78
    "for" (268) 109 885 886 887
    "recover" (269) 325
    "true" (270) 121 132 437
    "false" (271) 122 133 438
    "new" (272) 312 313 314 315 316 317
    "typeinfo" (273) 352 353 354
    "type" (274) 126 351 489 495 500 739
    "in" (275) 109 127 885 886 887
    "is" (276) 229 231 489 490 491 531
    "as" (277) 55 230 232 233 234 492 495 496 497 500 501 529 530
    "elif" (278) 66
    "static_elif" (279) 67
    "array" (280) 762 859 862 865 866 869
    "return" (281) 320 321 322
    "null" (282) 431
    "break" (283) 318
    "try" (284) 325
    "options" (285) 48
    "table" (286) 765 878 879 880
    "expect" (287) 58
    "const" (288) 539 746 747 753
    "require" (289) 49 141
    "operator" (290) 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234
    "enum" (291) 645
    "finally" (292) 270
    "delete" (293) 227 306 307
    "deref" (294) 482
    "typedef" (295) 116 629
    "typedecl" (296) 740
    "with" (297) 114
    "aka" (298) 103 106 591 593 666 668
    "assume" (299) 115
    "cast" (300) 342
    "override" (301) 536
    "abstract" (302) 551
    "upcast" (303) 345
    "iterator" (304) 768 886
    "var" (305) 327 330
    "addr" (306) 483
    "continue" (307) 319
    "where" (308) 882
    "pass" (309) 293
    "reinterpret" (310) 348
    "module" (311) 28
    "public" (312) 22 57 263 541 609 626 632 657
    "label" (313) 63 64
    "goto" (314) 64 65
    "implicit" (315) 751
    "explicit" (316) 307 745
    "shared" (317) 606
    "private" (318) 23 142 262 542 608 625 631 656
    "smart_ptr" (319) 758
    "unsafe" (320) 110 513
    "inscope" (321) 27 331
    "static" (322) 544
    "fixed_array" (323) 870 873
    "default" (324) 849
    "uninitialized" (325) 316 425 427 837
    "bool" (326) 235 669
    "void" (327) 689
    "string" (328) 236 670
    "auto" (329) 705 706
    "int" (330) 237 671 696
    "int2" (331) 238 675
    "int3" (332) 239 676
    "int4" (333) 240 677
    "uint" (334) 241 678 699 718
    "bitfield" (335) 695 722 813
    "uint2" (336) 242 682
    "uint3" (337) 243 683
    "uint4" (338) 244 684
    "float" (339) 245 685
    "float2" (340) 246 686
    "float3" (341) 247 687
    "float4" (342) 248 688
    "range" (343) 249 690
    "urange" (344) 250 691
    "range64" (345) 251 692
    "urange64" (346) 252 693
    "block" (347) 769 772 775
    "int64" (348) 253 674 702
    "uint64" (349) 254 681 703 719
    "double" (350) 255 694
    "function" (351) 776 779 782
    "lambda" (352) 783 786 789
    "int8" (353) 256 672 697
    "uint8" (354) 257 679 700 716
    "int16" (355) 258 673 698
    "uint16" (356) 259 680 701 717
    "tuple" (357) 792 803 852 855 862
    "variant" (358) 795 808 846 865
    "generator" (359) 514 515 516
    "yield" (360) 323 324
    "sealed" (361) 537 649
    "template" (362) 143 653 654
    "+=" (363) 167 214 392
    "-=" (364) 168 215 393
    "/=" (365) 170 217 395
    "*=" (366) 169 216 394
    "%=" (367) 171 218 396
    "&=" (368) 172 219 386
    "|=" (369) 173 220 387
    "^=" (370) 174 221 388
    "<<" (371) 200 445
    ">>" (372) 201 446
    "++" (373) 196 198 467 469
    "--" (374) 197 199 468 470
    "<=" (375) 191 458
    "<<=" (376) 202 397
    ">>=" (377) 203 398
    ">=" (378) 192 459
    "==" (379) 189 456 753 754
    "!=" (380) 190 457
    "->" (381) 403 404
    "<-" (382) 322 324 359 365 384 576 585
    "??" (383) 228 485 759
    "?." (384) 211 225 477 478 526 528
    "?[" (385) 209 475 476
    "<|" (386) 509
    "|>" (387) 152 510 511
    ":=" (388) 213 226 366 385 586 820 822 824 826
    "<<<" (389) 204 447
    ">>>" (390) 205 448
    "<<<=" (391) 206 399
    ">>>=" (392) 207 400
    "=>" (393) 358 359 850
    "::" (394) 304 305
    "&&" (395) 148 178 463
    "||" (396) 149 179 464
    "^^" (397) 150 180 465
    "&&=" (398) 175 222 389
    "||=" (399) 176 223 390
    "^^=" (400) 177 224 391
    ".." (401) 188 466
    "$$" (402) 517
    "$i" (403) 102 406 518 590 665
    "$v" (404) 519
    "$b" (405) 520
    "$a" (406) 521 556
    "$t" (407) 707
    "$c" (408) 523 524 532
    "$f" (409) 525 526 527 528 529 530 531 823 824 825 826
    "..." (410) 522
    "integer constant" <i> (411) 61 62 63 64 119 130 375
    "long integer constant" <i64> (412) 377
    "unsigned integer constant" <ui> (413) 376
    "unsigned long integer constant" <ui64> (414) 378
    "unsigned int8 constant" <ui> (415) 379
    "floating point constant" <fd> (416) 120 131 380
    "double constant" <d> (417) 381
    "name" <s> (418) 25 50 52 53 55 101 103 105 106 115 116 118 125 129 164 212 213 214 215 216 217 218 219 220 221 222 223 224 225 231 232 234 303 304 305 333 334 353 354 363 364 365 366 367 403 404 414 415 416 417 418 477 478 491 492 497 563 569 589 591 592 593 594 595 617 618 628 633 650 664 666 667 668 706 708 709 711 712 713 714 803 808 813 819 820 821 822
    "new line, comma" (419) 17 638 639
    "new line, semicolon" (420) 19 68 69 547
    "start of the string" (421) 33 34 43
    STRING_CHARACTER <ch> (422) 29 31 36 44 45
    STRING_CHARACTER_ESC (423) 30 32
    "end of the string" (424) 33 34 43
    "{" (425) 42
    "}" (426) 42
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 619 620 723
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 84 85 92 97 100 275 276 277 282 284 285 286 287 291 292 293 335 336 549 551 597 599 600 601 602 603 604 611 629 724
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 28
    module_name <s> (214)
        on left: 24 25
        on right: 28
    optional_not_required <b> (215)
        on left: 26 27
        on right: 28
    module_declaration (216)
        on left: 28
        on right: 2
    character_sequence <s> (217)
        on left: 29 30 31 32
        on right: 31 32 33 41
    string_constant <s> (218)
        on left: 33 34
        on right: 117 128
    format_string <s> (219)
        on left: 35 36
        on right: 36 39
    optional_format_string <s> (220)
        on left: 37 39
        on right: 42
    $@1 (221)
        on left: 38
        on right: 39
    string_builder_body <pExpression> (222)
        on left: 40 41 42
        on right: 41 42 43
    string_builder <pExpression> (223)
        on left: 43
        on right: 435
    reader_character_sequence (224)
        on left: 44 45
        on right: 45 47
    expr_reader <pExpression> (225)
        on left: 47
        on right: 20 434
    $@2 (226)
        on left: 46
        on right: 47
    options_declaration (227)
        on left: 48
        on right: 9
    require_declaration (228)
        on left: 49
        on right: 8
    require_module_name <s> (229)
        on left: 50 51 52 53
        on right: 51 52 53 54 55
    require_module (230)
        on left: 54 55
        on right: 49
    is_public_module <b> (231)
        on left: 56 57
        on right: 54 55
    expect_declaration (232)
        on left: 58
        on right: 7
    expect_list (233)
        on left: 59 60
        on right: 58 60
    expect_error (234)
        on left: 61 62
        on right: 59 60
    expression_label <pExpression> (235)
        on left: 63
        on right: 291
    expression_goto <pExpression> (236)
        on left: 64 65
        on right: 292
    elif_or_static_elif <b> (237)
        on left: 66 67
        on right: 74
    emit_semis (238)
        on left: 68 69
        on right: 69 71
    optional_emit_semis (239)
        on left: 70 71
        on right: 73 74 99 109 110 112 114 138 139 158 266 372 373 516 553 663 803 808 877
    expression_else <pExpression> (240)
        on left: 72 73 74
        on right: 74 99
    if_or_static_if <b> (241)
        on left: 75 76
        on right: 99
    expression_else_one_liner <pExpression> (242)
        on left: 77 78
        on right: 100
    expression_if_one_liner <pExpression> (243)
        on left: 79 80 81 82 83
        on right: 78 92 97 100
    semis (244)
        on left: 84 85
        on right: 85 87 568 574
    optional_semis (245)
        on left: 86 87
        on right: 803 808
    expression_if_block <pExpression> (246)
        on left: 90 92
        on right: 99
    $@3 (247)
        on left: 88
        on right: 90
    $@4 (248)
        on left: 89
        on right: 90
    $@5 (249)
        on left: 91
        on right: 92
    expression_else_block <pExpression> (250)
        on left: 95 97
        on right: 73 74
    $@6 (251)
        on left: 93
        on right: 95
    $@7 (252)
        on left: 94
        on right: 95
    $@8 (253)
        on left: 96
        on right: 97
    expression_if_then_else <pExpression> (254)
        on left: 99
        on right: 288
    $@9 (255)
        on left: 98
        on right: 99
    expression_if_then_else_oneliner <pExpression> (256)
        on left: 100
        on right: 289
    for_variable_name_with_pos_list <pNameWithPosList> (257)
        on left: 101 102 103 104 105 106 107
        on right: 105 106 107 109 885 886 887
    expression_for_loop <pExpression> (258)
        on left: 109
        on right: 283
    $@10 (259)
        on left: 108
        on right: 109
    expression_unsafe <pExpression> (260)
        on left: 110
        on right: 280
    expression_while_loop <pExpression> (261)
        on left: 112
        on right: 279
    $@11 (262)
        on left: 111
        on right: 112
    expression_with <pExpression> (263)
        on left: 114
        on right: 281
    $@12 (264)
        on left: 113
        on right: 114
    expression_with_alias <pExpression> (265)
        on left: 115 116
        on right: 282
    annotation_argument_value <aa> (266)
        on left: 117 118 119 120 121 122
        on right: 123 124
    annotation_argument_value_list <aaList> (267)
        on left: 123 124
        on right: 124 135
    annotation_argument_name <s> (268)
        on left: 125 126 127
        on right: 128 129 130 131 132 133 134 135
    annotation_argument <aa> (269)
        on left: 128 129 130 131 132 133 134 135
        on right: 136 137 138 139
    annotation_argument_list <aaList> (270)
        on left: 136 137
        on right: 48 137 145
    metadata_argument_list <aaList> (271)
        on left: 138 139
        on right: 139 534
    annotation_declaration_name <s> (272)
        on left: 140 141 142 143
        on right: 144 145
    annotation_declaration_basic <fa> (273)
        on left: 144 145
        on right: 146
    annotation_declaration <fa> (274)
        on left: 146 147 148 149 150 151 152
        on right: 147 148 149 150 151 152 153 154
    annotation_list <faList> (275)
        on left: 153 154
        on right: 154 156 158
    optional_annotation_list <faList> (276)
        on left: 155 156
        on right: 372 373
    optional_annotation_list_with_emit_semis <faList> (277)
        on left: 157 158
        on right: 260 551 553 645 663
    optional_function_argument_list <pVarDeclList> (278)
        on left: 159 160 161
        on right: 264 372 373 413 775 782 789
    optional_function_type <pTypeDecl> (279)
        on left: 162 163
        on right: 264 372 373 413 775 782 789
    function_name <s> (280)
        on left: 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259
        on right: 264
    global_function_declaration (281)
        on left: 260
        on right: 6
    optional_public_or_private_function <b> (282)
        on left: 261 262 263
        on right: 266
    function_declaration_header <pFuncDecl> (283)
        on left: 264
        on right: 266 551 553
    function_declaration <pFuncDecl> (284)
        on left: 266
        on right: 260
    $@13 (285)
        on left: 265
        on right: 266
    expression_block_finally <pExpression> (286)
        on left: 267 270
        on right: 90 95 273
    $@14 (287)
        on left: 268
        on right: 270
    $@15 (288)
        on left: 269
        on right: 270
    expression_block <pExpression> (289)
        on left: 273
        on right: 109 110 112 114 266 325 357 373 516 553
    $@16 (290)
        on left: 271
        on right: 273
    $@17 (291)
        on left: 272
        on right: 273
    expr_call_pipe <pExpression> (292)
        on left: 274
        on right: 512
    expression_any <pExpression> (293)
        on left: 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293
        on right: 295
    expressions <pExpression> (294)
        on left: 294 295 296
        on right: 90 95 270 273 295 296 374
    optional_expr_list <pExpression> (295)
        on left: 297 298
        on right: 741 743 856 869
    optional_expr_map_tuple_list <pExpression> (296)
        on left: 299 300
        on right: 877 879 880
    type_declaration_no_options_list <pTypeDeclList> (297)
        on left: 301 302
        on right: 302 743
    name_in_namespace <s> (298)
        on left: 303 304 305
        on right: 47 140 352 353 354 401 402 405 424 425 426 427 428 432 647 704 741 743
    expression_delete <pExpression> (299)
        on left: 306 307
        on right: 277
    new_type_declaration <pTypeDecl> (300)
        on left: 310 311
        on right: 312 313 314 315 316
    $@18 (301)
        on left: 308
        on right: 310
    $@19 (302)
        on left: 309
        on right: 310
    expr_new <pExpression> (303)
        on left: 312 313 314 315 316 317
        on right: 505
    expression_break <pExpression> (304)
        on left: 318
        on right: 82 284
    expression_continue <pExpression> (305)
        on left: 319
        on right: 83 285
    expression_return <pExpression> (306)
        on left: 320 321 322
        on right: 80 286
    expression_yield <pExpression> (307)
        on left: 323 324
        on right: 81 287
    expression_try_catch <pExpression> (308)
        on left: 325
        on right: 290
    kwd_let_var_or_nothing <b> (309)
        on left: 326 327 328
        on right: 554 555
    kwd_let <b> (310)
        on left: 329 330
        on right: 337 338 339 614 616
    optional_in_scope <b> (311)
        on left: 331 332
        on right: 337 338 339
    tuple_expansion <pNameList> (312)
        on left: 333 334
        on right: 104 107 334 335 336
    tuple_expansion_variable_declaration <pVarDecl> (313)
        on left: 335 336
        on right: 338
    expression_let <pExpression> (314)
        on left: 337 338 339
        on right: 278
    expr_cast <pExpression> (315)
        on left: 342 345 348
        on right: 504
    $@20 (316)
        on left: 340
        on right: 342
    $@21 (317)
        on left: 341
        on right: 342
    $@22 (318)
        on left: 343
        on right: 345
    $@23 (319)
        on left: 344
        on right: 345
    $@24 (320)
        on left: 346
        on right: 348
    $@25 (321)
        on left: 347
        on right: 348
    expr_type_decl <pExpression> (322)
        on left: 351
        on right: 503
    $@26 (323)
        on left: 349
        on right: 351
    $@27 (324)
        on left: 350
        on right: 351
    expr_type_info <pExpression> (325)
        on left: 352 353 354
        on right: 502
    expr_list <pExpression> (326)
        on left: 355 356
        on right: 109 298 314 356 402 404 417 420 428 430 471 524 852 866 870 873 885 886 887
    block_or_simple_block <pExpression> (327)
        on left: 357 358 359
        on right: 372
    block_or_lambda <i> (328)
        on left: 360 361 362
        on right: 372 373
    capture_entry <pCapt> (329)
        on left: 363 364 365 366 367
        on right: 368 369
    capture_list <pCaptList> (330)
        on left: 368 369
        on right: 369 371
    optional_capture_list <pCaptList> (331)
        on left: 370 371
        on right: 372 373 514 515 516
    expr_full_block <pExpression> (332)
        on left: 372
        on right: 508
    expr_full_block_assumed_piped <pExpression> (333)
        on left: 373 374
        on right: 274
    expr_numeric_const <pExpression> (334)
        on left: 375 376 377 378 379 380 381
        on right: 433
    expr_assign <pExpression> (335)
        on left: 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400
        on right: 276
    expr_named_call <pExpression> (336)
        on left: 401 402
        on right: 507
    expr_method_call <pExpression> (337)
        on left: 403 404
        on right: 506
    func_addr_name <pExpression> (338)
        on left: 405 406
        on right: 407 410 413
    func_addr_expr <pExpression> (339)
        on left: 407 410 413
        on right: 479
    $@28 (340)
        on left: 408
        on right: 410
    $@29 (341)
        on left: 409
        on right: 410
    $@30 (342)
        on left: 411
        on right: 413
    $@31 (343)
        on left: 412
        on right: 413
    expr_field <pExpression> (344)
        on left: 414 415 416 417 418 419 420 423
        on right: 439
    $@32 (345)
        on left: 421
        on right: 423
    $@33 (346)
        on left: 422
        on right: 423
    expr_call <pExpression> (347)
        on left: 424 425 426 427 428 429 430
        on right: 274 480
    expr <pExpression> (348)
        on left: 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 489 490 491 492 495 496 497 500 501 502 503 504 505 506 507 508 509 510 511 512 513
        on right
    $@34 (349)
        on left: 487
        on right: 489
    $@35 (350)
        on left: 488
        on right: 489
    $@36 (351)
        on left: 493
        on right: 495
    $@37 (352)
        on left: 494
        on right: 495
    $@38 (353)
        on left: 498
        on right: 500
    $@39 (354)
        on left: 499
        on right: 500
    expr_generator <pExpression> (355)
        on left: 514 515 516
        on right: 484
    expr_mtag <pExpression> (356)
        on left: 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532
        on right: 440
    optional_field_annotation <aaList> (357)
        on left: 533 534
        on right: 545 554 555 613 616
    optional_override <i> (358)
        on left: 535 536 537
        on right: 545 553
    optional_constant <b> (359)
        on left: 538 539
        on right: 551 553
    optional_public_or_private_member_variable <b> (360)
        on left: 540 541 542
        on right: 545 551 553
    optional_static_member_variable <b> (361)
        on left: 543 544
        on right: 545 553
    structure_variable_declaration <pVarDecl> (362)
        on left: 545
        on right: 549
    struct_variable_declaration_list <pVarDeclList> (363)
        on left: 546 547 549 551 553
        on right: 547 549 551 553 659
    $@40 (364)
        on left: 548
        on right: 549
    $@41 (365)
        on left: 550
        on right: 551
    $@42 (366)
        on left: 552
        on right: 553
    function_argument_declaration_no_type <pVarDecl> (367)
        on left: 554
        on right: 557 559
    function_argument_declaration_type <pVarDecl> (368)
        on left: 555 556
        on right: 558 560 561
    function_argument_list <pVarDeclList> (369)
        on left: 557 558 559 560 561
        on right: 161 559 560 561
    tuple_type <pVarDecl> (370)
        on left: 562 563
        on right: 564 565 567 568
    tuple_type_list <pVarDeclList> (371)
        on left: 564 565
        on right: 565 792 855 862
    tuple_alias_type_list <pVarDeclList> (372)
        on left: 566 567 568
        on right: 568 803
    variant_type <pVarDecl> (373)
        on left: 569
        on right: 570 571 573 574
    variant_type_list <pVarDeclList> (374)
        on left: 570 571
        on right: 571 795 846 865
    variant_alias_type_list <pVarDeclList> (375)
        on left: 572 573 574
        on right: 574 808
    copy_or_move <b> (376)
        on left: 575 576
        on right: 579 581 819 821 823 825
    variable_declaration_no_type <pVarDecl> (377)
        on left: 577 578 579
        on right: 554 583
    variable_declaration_type <pVarDecl> (378)
        on left: 580 581
        on right: 555 582
    variable_declaration <pVarDecl> (379)
        on left: 582 583
        on right: 545
    copy_or_move_or_clone <i> (380)
        on left: 584 585 586
        on right: 335 336 600 601 603 604
    optional_ref <b> (381)
        on left: 587 588
        on right: 336 601 604
    let_variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 589 590 591 592 593
        on right: 592 593 599 600 601
    global_let_variable_name_with_pos_list <pNameWithPosList> (383)
        on left: 594 595
        on right: 595 602 603 604
    variable_declaration_list <pVarDeclList> (384)
        on left: 596 597 598
        on right: 339 597 598
    let_variable_declaration <pVarDecl> (385)
        on left: 599 600 601
        on right: 337 598 613
    global_let_variable_declaration <pVarDecl> (386)
        on left: 602 603 604
        on right: 616
    optional_shared <b> (387)
        on left: 605 606
        on right: 28 614 616
    optional_public_or_private_variable <b> (388)
        on left: 607 608 609
        on right: 614 616
    global_variable_declaration_list <pVarDeclList> (389)
        on left: 610 611 613
        on right: 611 613 614
    $@43 (390)
        on left: 612
        on right: 613
    global_let (391)
        on left: 614 616
        on right: 5
    $@44 (392)
        on left: 615
        on right: 616
    enum_expression <pEnumPair> (393)
        on left: 617 618
        on right: 622 623
    commas (394)
        on left: 619 620
        on right: 620 623 637 713 714
    enum_list <pEnum> (395)
        on left: 621 622 623
        on right: 623 645
    optional_public_or_private_alias <b> (396)
        on left: 624 625 626
        on right: 628 803 808 813
    single_alias (397)
        on left: 628
        on right: 629
    $@45 (398)
        on left: 627
        on right: 628
    alias_declaration (399)
        on left: 629
        on right: 10
    optional_public_or_private_enum <b> (400)
        on left: 630 631 632
        on right: 645
    enum_name <pEnum> (401)
        on left: 633
        on right: 645
    optional_enum_basic_type_declaration <type> (402)
        on left: 634 635
        on right: 645
    optional_commas (403)
        on left: 636 637
        on right: 645 813
    emit_commas (404)
        on left: 638 639
        on right: 639 641
    optional_emit_commas (405)
        on left: 640 641
        on right: 645 813
    enum_declaration (406)
        on left: 645
        on right: 4
    $@46 (407)
        on left: 642
        on right: 645
    $@47 (408)
        on left: 643
        on right: 645
    $@48 (409)
        on left: 644
        on right: 645
    optional_structure_parent <s> (410)
        on left: 646 647
        on right: 650
    optional_sealed <b> (411)
        on left: 648 649
        on right: 650
    structure_name <pStructure> (412)
        on left: 650
        on right: 663
    class_or_struct <i> (413)
        on left: 651 652 653 654
        on right: 663
    optional_public_or_private_structure <b> (414)
        on left: 655 656 657
        on right: 663
    optional_struct_variable_declaration_list <pVarDeclList> (415)
        on left: 658 659
        on right: 663
    structure_declaration (416)
        on left: 663
        on right: 3
    $@49 (417)
        on left: 660
        on right: 663
    $@50 (418)
        on left: 661
        on right: 663
    $@51 (419)
        on left: 662
        on right: 663
    variable_name_with_pos_list <pNameWithPosList> (420)
        on left: 664 665 666 667 668
        on right: 577 578 579 580 581 667 668
    basic_type_declaration <type> (421)
        on left: 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695
        on right: 419 420 429 430 490 496 501 511 733
    enum_basic_type_declaration <type> (422)
        on left: 696 697 698 699 700 701 702 703
        on right: 635
    structure_type_declaration <pTypeDecl> (423)
        on left: 704
        on right: 311 736
    auto_type_declaration <pTypeDecl> (424)
        on left: 705 706 707
        on right: 734
    bitfield_bits <pNameList> (425)
        on left: 708 709
        on right: 709 722
    bitfield_alias_bits <pNameExprList> (426)
        on left: 710 711 712 713 714
        on right: 713 714 813
    bitfield_basic_type_declaration <type> (427)
        on left: 715 716 717 718 719
        on right: 722 813
    bitfield_type_declaration <pTypeDecl> (428)
        on left: 722
        on right: 735
    $@52 (429)
        on left: 720
        on right: 722
    $@53 (430)
        on left: 721
        on right: 722
    c_or_s (431)
        on left: 723 724
        on right: 302 354 565 571 726 880
    table_type_pair <aTypePair> (432)
        on left: 725 726
        on right: 765
    dim_list <pTypeDecl> (433)
        on left: 727 728 729 730
        on right: 729 730 732
    type_declaration_no_options <pTypeDecl> (434)
        on left: 731 732
        on right: 335 342 345 348 410 489 514 515 516 599 600 602 603 744 745 746 747 748 749 750 751 752 753 754 755 759 796 797 840 843 849 859 869 873 879 880
    type_declaration_no_options_no_dim <pTypeDecl> (435)
        on left: 733 734 735 736 739 740 741 743 744 745 746 747 748 749 750 751 752 753 754 755 758 759 762 765 768 769 772 775 776 779 782 783 786 789 792 795
        on right: 731 732
    $@54 (436)
        on left: 737
        on right: 739
    $@55 (437)
        on left: 738
        on right: 739
    $@56 (438)
        on left: 742
        on right: 743
    $@57 (439)
        on left: 756
        on right: 758
    $@58 (440)
        on left: 757
        on right: 758
    $@59 (441)
        on left: 760
        on right: 762
    $@60 (442)
        on left: 761
        on right: 762
    $@61 (443)
        on left: 763
        on right: 765
    $@62 (444)
        on left: 764
        on right: 765
    $@63 (445)
        on left: 766
        on right: 768
    $@64 (446)
        on left: 767
        on right: 768
    $@65 (447)
        on left: 770
        on right: 772
    $@66 (448)
        on left: 771
        on right: 772
    $@67 (449)
        on left: 773
        on right: 775
    $@68 (450)
        on left: 774
        on right: 775
    $@69 (451)
        on left: 777
        on right: 779
    $@70 (452)
        on left: 778
        on right: 779
    $@71 (453)
        on left: 780
        on right: 782
    $@72 (454)
        on left: 781
        on right: 782
    $@73 (455)
        on left: 784
        on right: 786
    $@74 (456)
        on left: 785
        on right: 786
    $@75 (457)
        on left: 787
        on right: 789
    $@76 (458)
        on left: 788
        on right: 789
    $@77 (459)
        on left: 790
        on right: 792
    $@78 (460)
        on left: 791
        on right: 792
    $@79 (461)
        on left: 793
        on right: 795
    $@80 (462)
        on left: 794
        on right: 795
    type_declaration <pTypeDecl> (463)
        on left: 796 797 798
        on right: 116 163 301 302 310 351 495 500 562 563 569 580 581 628 725 726 739 758 762 768 772 779 786 797 798
    tuple_alias_declaration (464)
        on left: 803
        on right: 12
    $@81 (465)
        on left: 799
        on right: 803
    $@82 (466)
        on left: 800
        on right: 803
    $@83 (467)
        on left: 801
        on right: 803
    $@84 (468)
        on left: 802
        on right: 803
    variant_alias_declaration (469)
        on left: 808
        on right: 11
    $@85 (470)
        on left: 804
        on right: 808
    $@86 (471)
        on left: 805
        on right: 808
    $@87 (472)
        on left: 806
        on right: 808
    $@88 (473)
        on left: 807
        on right: 808
    bitfield_alias_declaration (474)
        on left: 813
        on right: 13
    $@89 (475)
        on left: 809
        on right: 813
    $@90 (476)
        on left: 810
        on right: 813
    $@91 (477)
        on left: 811
        on right: 813
    $@92 (478)
        on left: 812
        on right: 813
    make_decl <pExpression> (479)
        on left: 814 815 816 817 818
        on right: 317 436
    make_struct_fields <pMakeStruct> (480)
        on left: 819 820 821 822 823 824 825 826
        on right: 401 402 418 821 822 825 826 828 829 830 831 832
    make_variant_dim <pExpression> (481)
        on left: 827 828
        on right: 846 865
    make_struct_single <pExpression> (482)
        on left: 829
        on right: 315 316 426 427 472
    make_struct_dim_list <pExpression> (483)
        on left: 830 831
        on right: 831 833
    make_struct_dim_decl <pExpression> (484)
        on left: 832 833
        on right: 834
    optional_make_struct_dim_decl <pExpression> (485)
        on left: 834 835
        on right: 840 843 855 859 862
    use_initializer <b> (486)
        on left: 836 837
        on right: 313 840 843 846 849 855 859 862
    make_struct_decl <pExpression> (487)
        on left: 840 843 846 849
        on right: 814
    $@93 (488)
        on left: 838
        on right: 840
    $@94 (489)
        on left: 839
        on right: 840
    $@95 (490)
        on left: 841
        on right: 843
    $@96 (491)
        on left: 842
        on right: 843
    $@97 (492)
        on left: 844
        on right: 846
    $@98 (493)
        on left: 845
        on right: 846
    $@99 (494)
        on left: 847
        on right: 849
    $@100 (495)
        on left: 848
        on right: 849
    make_map_tuple <pExpression> (496)
        on left: 850 851
        on right: 874 875 887
    make_tuple_call <pExpression> (497)
        on left: 852 855
        on right: 818
    $@101 (498)
        on left: 853
        on right: 855
    $@102 (499)
        on left: 854
        on right: 855
    make_dim_decl <pExpression> (500)
        on left: 856 859 862 865 866 869 870 873
        on right: 815
    $@103 (501)
        on left: 857
        on right: 859
    $@104 (502)
        on left: 858
        on right: 859
    $@105 (503)
        on left: 860
        on right: 862
    $@106 (504)
        on left: 861
        on right: 862
    $@107 (505)
        on left: 863
        on right: 865
    $@108 (506)
        on left: 864
        on right: 865
    $@109 (507)
        on left: 867
        on right: 869
    $@110 (508)
        on left: 868
        on right: 869
    $@111 (509)
        on left: 871
        on right: 873
    $@112 (510)
        on left: 872
        on right: 873
    expr_map_tuple_list <pExpression> (511)
        on left: 874 875
        on right: 300 875 878
    make_table_decl <pExpression> (512)
        on left: 877 878 879 880
        on right: 816
    $@113 (513)
        on left: 876
        on right: 877
    array_comprehension_where <pExpression> (514)
        on left: 881 882
        on right: 885 886 887
    optional_comma <b> (515)
        on left: 883 884
        on right: 298 300 471 829 833 852 866 870 873 878
    array_comprehension <pExpression> (516)
        on left: 885 886 887
        on right: 817


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 157 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  329 kwd_let: "let" .

    $default  reduce using rule 329 (kwd_let)


State 4

   48 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   58 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   49 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  629 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 624 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  330 kwd_let: "var" .

    $default  reduce using rule 330 (kwd_let)


State 9

   28 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  813 bitfield_alias_declaration: "bitfield" . $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 809 ($@89)

    $@89  go to state 54


State 11

  803 tuple_alias_declaration: "tuple" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 799 ($@81)

    $@81  go to state 55


State 12

  808 variant_alias_declaration: "variant" . $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 804 ($@85)

    $@85  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   47 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  158 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  260 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  645 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'
  663 structure_declaration: optional_annotation_list_with_emit_semis . $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 660 ($@49)

    $@49  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  614 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  616           | kwd_let . optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 605 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  126 annotation_argument_name: "type" .

    $default  reduce using rule 126 (annotation_argument_name)


State 35

  127 annotation_argument_name: "in" .

    $default  reduce using rule 127 (annotation_argument_name)


State 36

  125 annotation_argument_name: "name" .

    $default  reduce using rule 125 (annotation_argument_name)


State 37

  128 annotation_argument: annotation_argument_name . '=' string_constant
  129                    | annotation_argument_name . '=' "name"
  130                    | annotation_argument_name . '=' "integer constant"
  131                    | annotation_argument_name . '=' "floating point constant"
  132                    | annotation_argument_name . '=' "true"
  133                    | annotation_argument_name . '=' "false"
  134                    | annotation_argument_name .
  135                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 134 (annotation_argument)


State 38

  136 annotation_argument_list: annotation_argument .

    $default  reduce using rule 136 (annotation_argument_list)


State 39

   48 options_declaration: "options" annotation_argument_list .
  137 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 48 (options_declaration)


State 40

   61 expect_error: "integer constant" .
   62             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 61 (expect_error)


State 41

   58 expect_declaration: "expect" expect_list .
   60 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 58 (expect_declaration)


State 42

   59 expect_list: expect_error .

    $default  reduce using rule 59 (expect_list)


State 43

   50 require_module_name: "name" .

    $default  reduce using rule 50 (require_module_name)


State 44

   51 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   52 require_module_name: require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"
   54 require_module: require_module_name . is_public_module
   55               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 88


State 46

   49 require_declaration: "require" require_module .

    $default  reduce using rule 49 (require_declaration)


State 47

  626 optional_public_or_private_alias: "public" .

    $default  reduce using rule 626 (optional_public_or_private_alias)


State 48

  625 optional_public_or_private_alias: "private" .

    $default  reduce using rule 625 (optional_public_or_private_alias)


State 49

  628 single_alias: optional_public_or_private_alias . "name" $@45 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  629 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   28 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 77

    $default  reduce using rule 605 (optional_shared)

    optional_shared  go to state 91


State 54

  813 bitfield_alias_declaration: "bitfield" $@89 . optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 624 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  803 tuple_alias_declaration: "tuple" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 624 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  808 variant_alias_declaration: "variant" $@85 . optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 624 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  305 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  303 name_in_namespace: "name" .
  304                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 303 (name_in_namespace)


State 59

   47 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 46 ($@2)

    $@2  go to state 97


State 60

  141 annotation_declaration_name: "require" .

    $default  reduce using rule 141 (annotation_declaration_name)


State 61

  142 annotation_declaration_name: "private" .

    $default  reduce using rule 142 (annotation_declaration_name)


State 62

  143 annotation_declaration_name: "template" .

    $default  reduce using rule 143 (annotation_declaration_name)


State 63

  152 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  147 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  151 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  144 annotation_declaration_basic: annotation_declaration_name .
  145                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 144 (annotation_declaration_basic)


State 67

  146 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 146 (annotation_declaration)


State 68

  148 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  149                       | annotation_declaration . "||" annotation_declaration
  150                       | annotation_declaration . "^^" annotation_declaration
  153 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 153 (annotation_list)


State 69

  154 annotation_list: annotation_list . ',' annotation_declaration
  158 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  140 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 140 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  260 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 261 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 642 ($@46)

    $@46  go to state 111


State 76

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 . class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  606 optional_shared: "shared" .

    $default  reduce using rule 606 (optional_shared)


State 78

  614 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  616           | kwd_let optional_shared . optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 607 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  128 annotation_argument: annotation_argument_name '=' . string_constant
  129                    | annotation_argument_name '=' . "name"
  130                    | annotation_argument_name '=' . "integer constant"
  131                    | annotation_argument_name '=' . "floating point constant"
  132                    | annotation_argument_name '=' . "true"
  133                    | annotation_argument_name '=' . "false"
  135                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  137 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   62 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   60 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   51 require_module_name: '%' require_module_name .
   52                    | require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 51 (require_module_name)


State 84

   55 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   57 is_public_module: "public" .

    $default  reduce using rule 57 (is_public_module)


State 86

   53 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   52 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   54 require_module: require_module_name is_public_module .

    $default  reduce using rule 54 (require_module)


State 89

  628 single_alias: optional_public_or_private_alias "name" . $@45 '=' type_declaration

    $default  reduce using rule 627 ($@45)

    $@45  go to state 133


State 90

  629 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 629 (alias_declaration)


State 91

   28 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias . "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 137


State 93

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 138


State 94

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias . "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 139


State 95

  305 name_in_namespace: "::" "name" .

    $default  reduce using rule 305 (name_in_namespace)


State 96

  304 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   47 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  148 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  149                       | annotation_declaration . "||" annotation_declaration
  150                       | annotation_declaration . "^^" annotation_declaration
  152                       | "|>" annotation_declaration .

    $default  reduce using rule 152 (annotation_declaration)


State 99

  147 annotation_declaration: '!' annotation_declaration .
  148                       | annotation_declaration . "&&" annotation_declaration
  149                       | annotation_declaration . "||" annotation_declaration
  150                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 147 (annotation_declaration)


State 100

  148 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  149                       | annotation_declaration . "||" annotation_declaration
  150                       | annotation_declaration . "^^" annotation_declaration
  151                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  145 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  148 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  149 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  150 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  154 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  158 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  263 optional_public_or_private_function: "public" .

    $default  reduce using rule 263 (optional_public_or_private_function)


State 108

  262 optional_public_or_private_function: "private" .

    $default  reduce using rule 262 (optional_public_or_private_function)


State 109

  266 function_declaration: optional_public_or_private_function . $@13 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 265 ($@13)

    $@13  go to state 152


State 110

  260 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 260 (global_function_declaration)


State 111

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 630 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  652 class_or_struct: "struct" .

    $default  reduce using rule 652 (class_or_struct)


State 113

  651 class_or_struct: "class" .

    $default  reduce using rule 651 (class_or_struct)


State 114

  653 class_or_struct: "template" . "class"
  654                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct . optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 655 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  609 optional_public_or_private_variable: "public" .

    $default  reduce using rule 609 (optional_public_or_private_variable)


State 117

  608 optional_public_or_private_variable: "private" .

    $default  reduce using rule 608 (optional_public_or_private_variable)


State 118

  614 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  616           | kwd_let optional_shared optional_public_or_private_variable . $@44 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 615 ($@44)

    $@44  go to state 162


State 119

  132 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 132 (annotation_argument)


State 120

  133 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 133 (annotation_argument)


State 121

  130 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 130 (annotation_argument)


State 122

  131 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 131 (annotation_argument)


State 123

  129 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 129 (annotation_argument)


State 124

   33 string_constant: "start of the string" . character_sequence "end of the string"
   34                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  135 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  128 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 128 (annotation_argument)


State 127

  137 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 137 (annotation_argument_list)


State 128

   62 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 62 (expect_error)


State 129

   60 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 60 (expect_list)


State 130

   55 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 175


State 131

   53 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 53 (require_module_name)


State 132

   52 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 52 (require_module_name)


State 133

  628 single_alias: optional_public_or_private_alias "name" $@45 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 177

    $default  reduce using rule 26 (optional_not_required)

    optional_not_required  go to state 178


State 137

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" . bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    ':'  shift, and go to state 179

    $default  reduce using rule 715 (bitfield_basic_type_declaration)

    bitfield_basic_type_declaration  go to state 180


State 138

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 139

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" . optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 182


State 140

  304 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 304 (name_in_namespace)


State 141

   44 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 44 (reader_character_sequence)


State 142

   45 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 183

    $default  reduce using rule 47 (expr_reader)


State 143

  151 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 151 (annotation_declaration)


State 144

  137 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  145 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 184


State 145

  148 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration "&&" annotation_declaration .
  149                       | annotation_declaration . "||" annotation_declaration
  150                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 148 (annotation_declaration)


State 146

  148 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  149                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration "||" annotation_declaration .
  150                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 149 (annotation_declaration)


State 147

  148 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  149                       | annotation_declaration . "||" annotation_declaration
  150                       | annotation_declaration . "^^" annotation_declaration
  150                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 150 (annotation_declaration)


State 148

  148 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  149                       | annotation_declaration . "||" annotation_declaration
  150                       | annotation_declaration . "^^" annotation_declaration
  154 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 154 (annotation_list)


State 149

   68 emit_semis: "new line, semicolon" .

    $default  reduce using rule 68 (emit_semis)


State 150

   69 emit_semis: emit_semis . "new line, semicolon"
   71 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 185

    $default  reduce using rule 71 (optional_emit_semis)


State 151

  158 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 158 (optional_annotation_list_with_emit_semis)


State 152

  266 function_declaration: optional_public_or_private_function $@13 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 153

  632 optional_public_or_private_enum: "public" .

    $default  reduce using rule 632 (optional_public_or_private_enum)


State 154

  631 optional_public_or_private_enum: "private" .

    $default  reduce using rule 631 (optional_public_or_private_enum)


State 155

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 217

    enum_name  go to state 218


State 156

  654 class_or_struct: "template" "struct" .

    $default  reduce using rule 654 (class_or_struct)


State 157

  653 class_or_struct: "template" "class" .

    $default  reduce using rule 653 (class_or_struct)


State 158

  657 optional_public_or_private_structure: "public" .

    $default  reduce using rule 657 (optional_public_or_private_structure)


State 159

  656 optional_public_or_private_structure: "private" .

    $default  reduce using rule 656 (optional_public_or_private_structure)


State 160

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure . $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 661 ($@50)

    $@50  go to state 219


State 161

  614 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 610 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 220


State 162

  616 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 221

    $default  reduce using rule 533 (optional_field_annotation)

    metadata_argument_list     go to state 222
    optional_field_annotation  go to state 223


State 163

   29 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 164

   30 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 165

   34 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 34 (string_constant)


State 166

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   33 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 224
    STRING_CHARACTER_ESC  shift, and go to state 225
    "end of the string"   shift, and go to state 226


State 167

  121 annotation_argument_value: "true" .

    $default  reduce using rule 121 (annotation_argument_value)


State 168

  122 annotation_argument_value: "false" .

    $default  reduce using rule 122 (annotation_argument_value)


State 169

  119 annotation_argument_value: "integer constant" .

    $default  reduce using rule 119 (annotation_argument_value)


State 170

  120 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 120 (annotation_argument_value)


State 171

  118 annotation_argument_value: "name" .

    $default  reduce using rule 118 (annotation_argument_value)


State 172

  117 annotation_argument_value: string_constant .

    $default  reduce using rule 117 (annotation_argument_value)


State 173

  123 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 123 (annotation_argument_value_list)


State 174

  124 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  135 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 227
    ')'  shift, and go to state 228


State 175

   55 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 55 (require_module)


State 176

  628 single_alias: optional_public_or_private_alias "name" $@45 '=' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 277


State 177

   27 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 278


State 178

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 28 (module_declaration)


State 179

  716 bitfield_basic_type_declaration: ':' . "uint8"
  717                                | ':' . "uint16"
  718                                | ':' . "uint"
  719                                | ':' . "uint64"

    "uint"    shift, and go to state 279
    "uint64"  shift, and go to state 280
    "uint8"   shift, and go to state 281
    "uint16"  shift, and go to state 282


State 180

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration . optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 283

    $default  reduce using rule 640 (optional_emit_commas)

    emit_commas           go to state 284
    optional_emit_commas  go to state 285


State 181

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 800 ($@82)

    $@82  go to state 286


State 182

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis . $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 805 ($@86)

    $@86  go to state 287


State 183

   45 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 45 (reader_character_sequence)


State 184

  145 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 145 (annotation_declaration_basic)


State 185

   69 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 69 (emit_semis)


State 186

  165 function_name: "operator" . '!'
  166              | "operator" . '~'
  167              | "operator" . "+="
  168              | "operator" . "-="
  169              | "operator" . "*="
  170              | "operator" . "/="
  171              | "operator" . "%="
  172              | "operator" . "&="
  173              | "operator" . "|="
  174              | "operator" . "^="
  175              | "operator" . "&&="
  176              | "operator" . "||="
  177              | "operator" . "^^="
  178              | "operator" . "&&"
  179              | "operator" . "||"
  180              | "operator" . "^^"
  181              | "operator" . '+'
  182              | "operator" . '-'
  183              | "operator" . '*'
  184              | "operator" . '/'
  185              | "operator" . '%'
  186              | "operator" . '<'
  187              | "operator" . '>'
  188              | "operator" . ".."
  189              | "operator" . "=="
  190              | "operator" . "!="
  191              | "operator" . "<="
  192              | "operator" . ">="
  193              | "operator" . '&'
  194              | "operator" . '|'
  195              | "operator" . '^'
  198              | "operator" . "++"
  199              | "operator" . "--"
  200              | "operator" . "<<"
  201              | "operator" . ">>"
  202              | "operator" . "<<="
  203              | "operator" . ">>="
  204              | "operator" . "<<<"
  205              | "operator" . ">>>"
  206              | "operator" . "<<<="
  207              | "operator" . ">>>="
  208              | "operator" . '[' ']'
  209              | "operator" . "?[" ']'
  210              | "operator" . '.'
  211              | "operator" . "?."
  212              | "operator" . '.' "name"
  213              | "operator" . '.' "name" ":="
  214              | "operator" . '.' "name" "+="
  215              | "operator" . '.' "name" "-="
  216              | "operator" . '.' "name" "*="
  217              | "operator" . '.' "name" "/="
  218              | "operator" . '.' "name" "%="
  219              | "operator" . '.' "name" "&="
  220              | "operator" . '.' "name" "|="
  221              | "operator" . '.' "name" "^="
  222              | "operator" . '.' "name" "&&="
  223              | "operator" . '.' "name" "||="
  224              | "operator" . '.' "name" "^^="
  225              | "operator" . "?." "name"
  226              | "operator" . ":="
  227              | "operator" . "delete"
  228              | "operator" . "??"
  229              | "operator" . "is"
  230              | "operator" . "as"
  231              | "operator" . "is" "name"
  232              | "operator" . "as" "name"
  233              | "operator" . '?' "as"
  234              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 288
    "as"      shift, and go to state 289
    "delete"  shift, and go to state 290
    "+="      shift, and go to state 291
    "-="      shift, and go to state 292
    "/="      shift, and go to state 293
    "*="      shift, and go to state 294
    "%="      shift, and go to state 295
    "&="      shift, and go to state 296
    "|="      shift, and go to state 297
    "^="      shift, and go to state 298
    "<<"      shift, and go to state 299
    ">>"      shift, and go to state 300
    "++"      shift, and go to state 301
    "--"      shift, and go to state 302
    "<="      shift, and go to state 303
    "<<="     shift, and go to state 304
    ">>="     shift, and go to state 305
    ">="      shift, and go to state 306
    "=="      shift, and go to state 307
    "!="      shift, and go to state 308
    "??"      shift, and go to state 309
    "?."      shift, and go to state 310
    "?["      shift, and go to state 311
    ":="      shift, and go to state 312
    "<<<"     shift, and go to state 313
    ">>>"     shift, and go to state 314
    "<<<="    shift, and go to state 315
    ">>>="    shift, and go to state 316
    "&&"      shift, and go to state 317
    "||"      shift, and go to state 318
    "^^"      shift, and go to state 319
    "&&="     shift, and go to state 320
    "||="     shift, and go to state 321
    "^^="     shift, and go to state 322
    ".."      shift, and go to state 323
    '?'       shift, and go to state 324
    '|'       shift, and go to state 325
    '^'       shift, and go to state 326
    '&'       shift, and go to state 327
    '<'       shift, and go to state 328
    '>'       shift, and go to state 329
    '-'       shift, and go to state 330
    '+'       shift, and go to state 331
    '*'       shift, and go to state 332
    '/'       shift, and go to state 333
    '%'       shift, and go to state 334
    '~'       shift, and go to state 335
    '!'       shift, and go to state 336
    '.'       shift, and go to state 337
    '['       shift, and go to state 338


State 187

  235 function_name: "bool" .

    $default  reduce using rule 235 (function_name)


State 188

  236 function_name: "string" .

    $default  reduce using rule 236 (function_name)


State 189

  237 function_name: "int" .

    $default  reduce using rule 237 (function_name)


State 190

  238 function_name: "int2" .

    $default  reduce using rule 238 (function_name)


State 191

  239 function_name: "int3" .

    $default  reduce using rule 239 (function_name)


State 192

  240 function_name: "int4" .

    $default  reduce using rule 240 (function_name)


State 193

  241 function_name: "uint" .

    $default  reduce using rule 241 (function_name)


State 194

  242 function_name: "uint2" .

    $default  reduce using rule 242 (function_name)


State 195

  243 function_name: "uint3" .

    $default  reduce using rule 243 (function_name)


State 196

  244 function_name: "uint4" .

    $default  reduce using rule 244 (function_name)


State 197

  245 function_name: "float" .

    $default  reduce using rule 245 (function_name)


State 198

  246 function_name: "float2" .

    $default  reduce using rule 246 (function_name)


State 199

  247 function_name: "float3" .

    $default  reduce using rule 247 (function_name)


State 200

  248 function_name: "float4" .

    $default  reduce using rule 248 (function_name)


State 201

  249 function_name: "range" .

    $default  reduce using rule 249 (function_name)


State 202

  250 function_name: "urange" .

    $default  reduce using rule 250 (function_name)


State 203

  251 function_name: "range64" .

    $default  reduce using rule 251 (function_name)


State 204

  252 function_name: "urange64" .

    $default  reduce using rule 252 (function_name)


State 205

  253 function_name: "int64" .

    $default  reduce using rule 253 (function_name)


State 206

  254 function_name: "uint64" .

    $default  reduce using rule 254 (function_name)


State 207

  255 function_name: "double" .

    $default  reduce using rule 255 (function_name)


State 208

  256 function_name: "int8" .

    $default  reduce using rule 256 (function_name)


State 209

  257 function_name: "uint8" .

    $default  reduce using rule 257 (function_name)


State 210

  258 function_name: "int16" .

    $default  reduce using rule 258 (function_name)


State 211

  259 function_name: "uint16" .

    $default  reduce using rule 259 (function_name)


State 212

  196 function_name: "++" . "operator"

    "operator"  shift, and go to state 339


State 213

  197 function_name: "--" . "operator"

    "operator"  shift, and go to state 340


State 214

  164 function_name: "name" .

    $default  reduce using rule 164 (function_name)


State 215

  264 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 341

    $default  reduce using rule 159 (optional_function_argument_list)

    optional_function_argument_list  go to state 342


State 216

  266 function_declaration: optional_public_or_private_function $@13 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 343


State 217

  633 enum_name: "name" .

    $default  reduce using rule 633 (enum_name)


State 218

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    ':'  shift, and go to state 344

    $default  reduce using rule 634 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 345


State 219

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 . structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 346

    $default  reduce using rule 648 (optional_sealed)

    optional_sealed  go to state 347
    structure_name   go to state 348


State 220

  611 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  613                                 | global_variable_declaration_list . $@43 optional_field_annotation let_variable_declaration
  614 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 349

    $default  reduce using rule 612 ($@43)

    SEMICOLON  go to state 350
    $@43       go to state 351


State 221

  138 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 352


State 222

  139 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  534 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 353

    $default  reduce using rule 534 (optional_field_annotation)


State 223

  616 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 354

    global_let_variable_name_with_pos_list  go to state 355
    global_let_variable_declaration         go to state 356


State 224

   31 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 31 (character_sequence)


State 225

   32 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 32 (character_sequence)


State 226

   33 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 33 (string_constant)


State 227

  124 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 357


State 228

  135 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 135 (annotation_argument)


State 229

  739 type_declaration_no_options_no_dim: "type" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 358


State 230

  762 type_declaration_no_options_no_dim: "array" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 359


State 231

  765 type_declaration_no_options_no_dim: "table" . '<' $@61 table_type_pair '>' $@62

    '<'  shift, and go to state 360


State 232

  740 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 361


State 233

  768 type_declaration_no_options_no_dim: "iterator" . '<' $@63 type_declaration '>' $@64

    '<'  shift, and go to state 362


State 234

  758 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 363


State 235

  669 basic_type_declaration: "bool" .

    $default  reduce using rule 669 (basic_type_declaration)


State 236

  689 basic_type_declaration: "void" .

    $default  reduce using rule 689 (basic_type_declaration)


State 237

  670 basic_type_declaration: "string" .

    $default  reduce using rule 670 (basic_type_declaration)


State 238

  705 auto_type_declaration: "auto" .
  706                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 364

    $default  reduce using rule 705 (auto_type_declaration)


State 239

  671 basic_type_declaration: "int" .

    $default  reduce using rule 671 (basic_type_declaration)


State 240

  675 basic_type_declaration: "int2" .

    $default  reduce using rule 675 (basic_type_declaration)


State 241

  676 basic_type_declaration: "int3" .

    $default  reduce using rule 676 (basic_type_declaration)


State 242

  677 basic_type_declaration: "int4" .

    $default  reduce using rule 677 (basic_type_declaration)


State 243

  678 basic_type_declaration: "uint" .

    $default  reduce using rule 678 (basic_type_declaration)


State 244

  695 basic_type_declaration: "bitfield" .
  722 bitfield_type_declaration: "bitfield" . bitfield_basic_type_declaration '<' $@52 bitfield_bits '>' $@53

    ':'  shift, and go to state 179

    '<'       reduce using rule 715 (bitfield_basic_type_declaration)
    $default  reduce using rule 695 (basic_type_declaration)

    bitfield_basic_type_declaration  go to state 365


State 245

  682 basic_type_declaration: "uint2" .

    $default  reduce using rule 682 (basic_type_declaration)


State 246

  683 basic_type_declaration: "uint3" .

    $default  reduce using rule 683 (basic_type_declaration)


State 247

  684 basic_type_declaration: "uint4" .

    $default  reduce using rule 684 (basic_type_declaration)


State 248

  685 basic_type_declaration: "float" .

    $default  reduce using rule 685 (basic_type_declaration)


State 249

  686 basic_type_declaration: "float2" .

    $default  reduce using rule 686 (basic_type_declaration)


State 250

  687 basic_type_declaration: "float3" .

    $default  reduce using rule 687 (basic_type_declaration)


State 251

  688 basic_type_declaration: "float4" .

    $default  reduce using rule 688 (basic_type_declaration)


State 252

  690 basic_type_declaration: "range" .

    $default  reduce using rule 690 (basic_type_declaration)


State 253

  691 basic_type_declaration: "urange" .

    $default  reduce using rule 691 (basic_type_declaration)


State 254

  692 basic_type_declaration: "range64" .

    $default  reduce using rule 692 (basic_type_declaration)


State 255

  693 basic_type_declaration: "urange64" .

    $default  reduce using rule 693 (basic_type_declaration)


State 256

  769 type_declaration_no_options_no_dim: "block" .
  772                                   | "block" . '<' $@65 type_declaration '>' $@66
  775                                   | "block" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 366

    $default  reduce using rule 769 (type_declaration_no_options_no_dim)


State 257

  674 basic_type_declaration: "int64" .

    $default  reduce using rule 674 (basic_type_declaration)


State 258

  681 basic_type_declaration: "uint64" .

    $default  reduce using rule 681 (basic_type_declaration)


State 259

  694 basic_type_declaration: "double" .

    $default  reduce using rule 694 (basic_type_declaration)


State 260

  776 type_declaration_no_options_no_dim: "function" .
  779                                   | "function" . '<' $@69 type_declaration '>' $@70
  782                                   | "function" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 367

    $default  reduce using rule 776 (type_declaration_no_options_no_dim)


State 261

  783 type_declaration_no_options_no_dim: "lambda" .
  786                                   | "lambda" . '<' $@73 type_declaration '>' $@74
  789                                   | "lambda" . '<' $@75 optional_function_argument_list optional_function_type '>' $@76

    '<'  shift, and go to state 368

    $default  reduce using rule 783 (type_declaration_no_options_no_dim)


State 262

  672 basic_type_declaration: "int8" .

    $default  reduce using rule 672 (basic_type_declaration)


State 263

  679 basic_type_declaration: "uint8" .

    $default  reduce using rule 679 (basic_type_declaration)


State 264

  673 basic_type_declaration: "int16" .

    $default  reduce using rule 673 (basic_type_declaration)


State 265

  680 basic_type_declaration: "uint16" .

    $default  reduce using rule 680 (basic_type_declaration)


State 266

  792 type_declaration_no_options_no_dim: "tuple" . '<' $@77 tuple_type_list '>' $@78

    '<'  shift, and go to state 369


State 267

  795 type_declaration_no_options_no_dim: "variant" . '<' $@79 variant_type_list '>' $@80

    '<'  shift, and go to state 370


State 268

  707 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 371


State 269

  741 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  743                                   | '$' . name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 372


State 270

  704 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 704 (structure_type_declaration)


State 271

  733 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 272

  736 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 736 (type_declaration_no_options_no_dim)


State 273

  734 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 274

  735 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 735 (type_declaration_no_options_no_dim)


State 275

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  796 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381

    $default  reduce using rule 796 (type_declaration)


State 276

  731 type_declaration_no_options: type_declaration_no_options_no_dim .
  732                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 382

    $default  reduce using rule 731 (type_declaration_no_options)

    dim_list  go to state 383


State 277

  628 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 628 (single_alias)


State 278

   27 optional_not_required: '!' "inscope" .

    $default  reduce using rule 27 (optional_not_required)


State 279

  718 bitfield_basic_type_declaration: ':' "uint" .

    $default  reduce using rule 718 (bitfield_basic_type_declaration)


State 280

  719 bitfield_basic_type_declaration: ':' "uint64" .

    $default  reduce using rule 719 (bitfield_basic_type_declaration)


State 281

  716 bitfield_basic_type_declaration: ':' "uint8" .

    $default  reduce using rule 716 (bitfield_basic_type_declaration)


State 282

  717 bitfield_basic_type_declaration: ':' "uint16" .

    $default  reduce using rule 717 (bitfield_basic_type_declaration)


State 283

  638 emit_commas: "new line, comma" .

    $default  reduce using rule 638 (emit_commas)


State 284

  639 emit_commas: emit_commas . "new line, comma"
  641 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 385

    $default  reduce using rule 641 (optional_emit_commas)


State 285

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas . $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 810 ($@90)

    $@90  go to state 386


State 286

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 387


State 287

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 . '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    '{'  shift, and go to state 388


State 288

  229 function_name: "operator" "is" .
  231              | "operator" "is" . "name"

    "name"  shift, and go to state 389

    $default  reduce using rule 229 (function_name)


State 289

  230 function_name: "operator" "as" .
  232              | "operator" "as" . "name"

    "name"  shift, and go to state 390

    $default  reduce using rule 230 (function_name)


State 290

  227 function_name: "operator" "delete" .

    $default  reduce using rule 227 (function_name)


State 291

  167 function_name: "operator" "+=" .

    $default  reduce using rule 167 (function_name)


State 292

  168 function_name: "operator" "-=" .

    $default  reduce using rule 168 (function_name)


State 293

  170 function_name: "operator" "/=" .

    $default  reduce using rule 170 (function_name)


State 294

  169 function_name: "operator" "*=" .

    $default  reduce using rule 169 (function_name)


State 295

  171 function_name: "operator" "%=" .

    $default  reduce using rule 171 (function_name)


State 296

  172 function_name: "operator" "&=" .

    $default  reduce using rule 172 (function_name)


State 297

  173 function_name: "operator" "|=" .

    $default  reduce using rule 173 (function_name)


State 298

  174 function_name: "operator" "^=" .

    $default  reduce using rule 174 (function_name)


State 299

  200 function_name: "operator" "<<" .

    $default  reduce using rule 200 (function_name)


State 300

  201 function_name: "operator" ">>" .

    $default  reduce using rule 201 (function_name)


State 301

  198 function_name: "operator" "++" .

    $default  reduce using rule 198 (function_name)


State 302

  199 function_name: "operator" "--" .

    $default  reduce using rule 199 (function_name)


State 303

  191 function_name: "operator" "<=" .

    $default  reduce using rule 191 (function_name)


State 304

  202 function_name: "operator" "<<=" .

    $default  reduce using rule 202 (function_name)


State 305

  203 function_name: "operator" ">>=" .

    $default  reduce using rule 203 (function_name)


State 306

  192 function_name: "operator" ">=" .

    $default  reduce using rule 192 (function_name)


State 307

  189 function_name: "operator" "==" .

    $default  reduce using rule 189 (function_name)


State 308

  190 function_name: "operator" "!=" .

    $default  reduce using rule 190 (function_name)


State 309

  228 function_name: "operator" "??" .

    $default  reduce using rule 228 (function_name)


State 310

  211 function_name: "operator" "?." .
  225              | "operator" "?." . "name"

    "name"  shift, and go to state 391

    $default  reduce using rule 211 (function_name)


State 311

  209 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 392


State 312

  226 function_name: "operator" ":=" .

    $default  reduce using rule 226 (function_name)


State 313

  204 function_name: "operator" "<<<" .

    $default  reduce using rule 204 (function_name)


State 314

  205 function_name: "operator" ">>>" .

    $default  reduce using rule 205 (function_name)


State 315

  206 function_name: "operator" "<<<=" .

    $default  reduce using rule 206 (function_name)


State 316

  207 function_name: "operator" ">>>=" .

    $default  reduce using rule 207 (function_name)


State 317

  178 function_name: "operator" "&&" .

    $default  reduce using rule 178 (function_name)


State 318

  179 function_name: "operator" "||" .

    $default  reduce using rule 179 (function_name)


State 319

  180 function_name: "operator" "^^" .

    $default  reduce using rule 180 (function_name)


State 320

  175 function_name: "operator" "&&=" .

    $default  reduce using rule 175 (function_name)


State 321

  176 function_name: "operator" "||=" .

    $default  reduce using rule 176 (function_name)


State 322

  177 function_name: "operator" "^^=" .

    $default  reduce using rule 177 (function_name)


State 323

  188 function_name: "operator" ".." .

    $default  reduce using rule 188 (function_name)


State 324

  233 function_name: "operator" '?' . "as"
  234              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 393


State 325

  194 function_name: "operator" '|' .

    $default  reduce using rule 194 (function_name)


State 326

  195 function_name: "operator" '^' .

    $default  reduce using rule 195 (function_name)


State 327

  193 function_name: "operator" '&' .

    $default  reduce using rule 193 (function_name)


State 328

  186 function_name: "operator" '<' .

    $default  reduce using rule 186 (function_name)


State 329

  187 function_name: "operator" '>' .

    $default  reduce using rule 187 (function_name)


State 330

  182 function_name: "operator" '-' .

    $default  reduce using rule 182 (function_name)


State 331

  181 function_name: "operator" '+' .

    $default  reduce using rule 181 (function_name)


State 332

  183 function_name: "operator" '*' .

    $default  reduce using rule 183 (function_name)


State 333

  184 function_name: "operator" '/' .

    $default  reduce using rule 184 (function_name)


State 334

  185 function_name: "operator" '%' .

    $default  reduce using rule 185 (function_name)


State 335

  166 function_name: "operator" '~' .

    $default  reduce using rule 166 (function_name)


State 336

  165 function_name: "operator" '!' .

    $default  reduce using rule 165 (function_name)


State 337

  210 function_name: "operator" '.' .
  212              | "operator" '.' . "name"
  213              | "operator" '.' . "name" ":="
  214              | "operator" '.' . "name" "+="
  215              | "operator" '.' . "name" "-="
  216              | "operator" '.' . "name" "*="
  217              | "operator" '.' . "name" "/="
  218              | "operator" '.' . "name" "%="
  219              | "operator" '.' . "name" "&="
  220              | "operator" '.' . "name" "|="
  221              | "operator" '.' . "name" "^="
  222              | "operator" '.' . "name" "&&="
  223              | "operator" '.' . "name" "||="
  224              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 394

    $default  reduce using rule 210 (function_name)


State 338

  208 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 395


State 339

  196 function_name: "++" "operator" .

    $default  reduce using rule 196 (function_name)


State 340

  197 function_name: "--" "operator" .

    $default  reduce using rule 197 (function_name)


State 341

  160 optional_function_argument_list: '(' . ')'
  161                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 396
    ')'   shift, and go to state 397
    '@'   shift, and go to state 221

    $default  reduce using rule 533 (optional_field_annotation)

    metadata_argument_list                 go to state 222
    optional_field_annotation              go to state 398
    function_argument_declaration_no_type  go to state 399
    function_argument_declaration_type     go to state 400
    function_argument_list                 go to state 401


State 342

  264 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 402

    $default  reduce using rule 162 (optional_function_type)

    optional_function_type  go to state 403


State 343

  266 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 404
    $@16              go to state 405


State 344

  635 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 406
    "uint"    shift, and go to state 407
    "int64"   shift, and go to state 408
    "uint64"  shift, and go to state 409
    "int8"    shift, and go to state 410
    "uint8"   shift, and go to state 411
    "int16"   shift, and go to state 412
    "uint16"  shift, and go to state 413

    enum_basic_type_declaration  go to state 414


State 345

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 283

    $default  reduce using rule 640 (optional_emit_commas)

    emit_commas           go to state 284
    optional_emit_commas  go to state 415


State 346

  649 optional_sealed: "sealed" .

    $default  reduce using rule 649 (optional_sealed)


State 347

  650 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 416


State 348

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name . optional_emit_semis $@51 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 417


State 349

  614 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 614 (global_let)


State 350

  611 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 611 (global_variable_declaration_list)


State 351

  613 global_variable_declaration_list: global_variable_declaration_list $@43 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 221

    $default  reduce using rule 533 (optional_field_annotation)

    metadata_argument_list     go to state 222
    optional_field_annotation  go to state 418


State 352

  138 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 419


State 353

  139 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 420


State 354

  594 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 594 (global_let_variable_name_with_pos_list)


State 355

  595 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  602 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  603                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  604                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 421
    ':'  shift, and go to state 422
    '&'  shift, and go to state 423

    $default  reduce using rule 587 (optional_ref)

    optional_ref  go to state 424


State 356

  616 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 616 (global_let)


State 357

  124 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 124 (annotation_argument_value_list)


State 358

  739 type_declaration_no_options_no_dim: "type" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 737 ($@54)

    $@54  go to state 425


State 359

  762 type_declaration_no_options_no_dim: "array" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 760 ($@59)

    $@59  go to state 426


State 360

  765 type_declaration_no_options_no_dim: "table" '<' . $@61 table_type_pair '>' $@62

    $default  reduce using rule 763 ($@61)

    $@61  go to state 427


State 361

  740 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 493
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 362

  768 type_declaration_no_options_no_dim: "iterator" '<' . $@63 type_declaration '>' $@64

    $default  reduce using rule 766 ($@63)

    $@63  go to state 503


State 363

  758 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 756 ($@57)

    $@57  go to state 504


State 364

  706 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 505


State 365

  722 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration . '<' $@52 bitfield_bits '>' $@53

    '<'  shift, and go to state 506


State 366

  772 type_declaration_no_options_no_dim: "block" '<' . $@65 type_declaration '>' $@66
  775                                   | "block" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 773 ($@67)
    '>'       reduce using rule 773 ($@67)
    '('       reduce using rule 773 ($@67)
    $default  reduce using rule 770 ($@65)

    $@65  go to state 507
    $@67  go to state 508


State 367

  779 type_declaration_no_options_no_dim: "function" '<' . $@69 type_declaration '>' $@70
  782                                   | "function" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 780 ($@71)
    '>'       reduce using rule 780 ($@71)
    '('       reduce using rule 780 ($@71)
    $default  reduce using rule 777 ($@69)

    $@69  go to state 509
    $@71  go to state 510


State 368

  786 type_declaration_no_options_no_dim: "lambda" '<' . $@73 type_declaration '>' $@74
  789                                   | "lambda" '<' . $@75 optional_function_argument_list optional_function_type '>' $@76

    ':'       reduce using rule 787 ($@75)
    '>'       reduce using rule 787 ($@75)
    '('       reduce using rule 787 ($@75)
    $default  reduce using rule 784 ($@73)

    $@73  go to state 511
    $@75  go to state 512


State 369

  792 type_declaration_no_options_no_dim: "tuple" '<' . $@77 tuple_type_list '>' $@78

    $default  reduce using rule 790 ($@77)

    $@77  go to state 513


State 370

  795 type_declaration_no_options_no_dim: "variant" '<' . $@79 variant_type_list '>' $@80

    $default  reduce using rule 793 ($@79)

    $@79  go to state 514


State 371

  707 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 515
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 372

  741 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  743                                   | '$' name_in_namespace . '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 516
    '('  shift, and go to state 517


State 373

  746 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 374

  751 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 751 (type_declaration_no_options_no_dim)


State 375

  745 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 745 (type_declaration_no_options_no_dim)


State 376

  753 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  754                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 518
    '&'      shift, and go to state 519


State 377

  759 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 759 (type_declaration_no_options_no_dim)


State 378

  755 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 755 (type_declaration_no_options_no_dim)


State 379

  748 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 748 (type_declaration_no_options_no_dim)


State 380

  744 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  747                                   | type_declaration_no_options '-' . "const"
  749                                   | type_declaration_no_options '-' . '&'
  752                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 520
    '&'      shift, and go to state 521
    '['      shift, and go to state 522
    '#'      shift, and go to state 523


State 381

  750 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 750 (type_declaration_no_options_no_dim)


State 382

  727 dim_list: '[' . expr ']'
  728         | '[' . ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    ']'                               shift, and go to state 524
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 525
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 383

  729 dim_list: dim_list . '[' expr ']'
  730         | dim_list . '[' ']'
  732 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 526

    $default  reduce using rule 732 (type_declaration_no_options)


State 384

  797 type_declaration: type_declaration '|' . type_declaration_no_options
  798                 | type_declaration '|' . '#'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269
    '#'          shift, and go to state 527

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 528
    type_declaration_no_options_no_dim  go to state 276


State 385

  639 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 639 (emit_commas)


State 386

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 . '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    '{'  shift, and go to state 529


State 387

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 801 ($@83)

    $@83  go to state 530


State 388

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' . $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 806 ($@87)

    $@87  go to state 531


State 389

  231 function_name: "operator" "is" "name" .

    $default  reduce using rule 231 (function_name)


State 390

  232 function_name: "operator" "as" "name" .

    $default  reduce using rule 232 (function_name)


State 391

  225 function_name: "operator" "?." "name" .

    $default  reduce using rule 225 (function_name)


State 392

  209 function_name: "operator" "?[" ']' .

    $default  reduce using rule 209 (function_name)


State 393

  233 function_name: "operator" '?' "as" .
  234              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 532

    $default  reduce using rule 233 (function_name)


State 394

  212 function_name: "operator" '.' "name" .
  213              | "operator" '.' "name" . ":="
  214              | "operator" '.' "name" . "+="
  215              | "operator" '.' "name" . "-="
  216              | "operator" '.' "name" . "*="
  217              | "operator" '.' "name" . "/="
  218              | "operator" '.' "name" . "%="
  219              | "operator" '.' "name" . "&="
  220              | "operator" '.' "name" . "|="
  221              | "operator" '.' "name" . "^="
  222              | "operator" '.' "name" . "&&="
  223              | "operator" '.' "name" . "||="
  224              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 533
    "-="   shift, and go to state 534
    "/="   shift, and go to state 535
    "*="   shift, and go to state 536
    "%="   shift, and go to state 537
    "&="   shift, and go to state 538
    "|="   shift, and go to state 539
    "^="   shift, and go to state 540
    ":="   shift, and go to state 541
    "&&="  shift, and go to state 542
    "||="  shift, and go to state 543
    "^^="  shift, and go to state 544

    $default  reduce using rule 212 (function_name)


State 395

  208 function_name: "operator" '[' ']' .

    $default  reduce using rule 208 (function_name)


State 396

  556 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 545


State 397

  160 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 160 (optional_function_argument_list)


State 398

  554 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  555 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 546
    "var"  shift, and go to state 547

    $default  reduce using rule 328 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 548


State 399

  557 function_argument_list: function_argument_declaration_no_type .
  559                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 549

    $default  reduce using rule 557 (function_argument_list)


State 400

  558 function_argument_list: function_argument_declaration_type .
  560                       | function_argument_declaration_type . ';' function_argument_list
  561                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 550
    ';'  shift, and go to state 551

    $default  reduce using rule 558 (function_argument_list)


State 401

  161 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 552


State 402

  163 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 553


State 403

  264 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 264 (function_declaration_header)


State 404

  266 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 266 (function_declaration)


State 405

  273 expression_block: $@16 . '{' expressions $@17 '}' expression_block_finally

    '{'  shift, and go to state 554


State 406

  696 enum_basic_type_declaration: "int" .

    $default  reduce using rule 696 (enum_basic_type_declaration)


State 407

  699 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 699 (enum_basic_type_declaration)


State 408

  702 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 702 (enum_basic_type_declaration)


State 409

  703 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 703 (enum_basic_type_declaration)


State 410

  697 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 697 (enum_basic_type_declaration)


State 411

  700 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 700 (enum_basic_type_declaration)


State 412

  698 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 698 (enum_basic_type_declaration)


State 413

  701 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 701 (enum_basic_type_declaration)


State 414

  635 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 635 (optional_enum_basic_type_declaration)


State 415

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@47 enum_list optional_commas $@48 '}'

    '{'  shift, and go to state 555


State 416

  650 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 556

    $default  reduce using rule 646 (optional_structure_parent)

    optional_structure_parent  go to state 557


State 417

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis . $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 662 ($@51)

    $@51  go to state 558


State 418

  613 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 559
    "name"  shift, and go to state 560

    let_variable_name_with_pos_list  go to state 561
    let_variable_declaration         go to state 562


State 419

  138 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 138 (metadata_argument_list)


State 420

  139 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 563


State 421

  595 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 564


State 422

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  603                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 565
    type_declaration_no_options_no_dim  go to state 276


State 423

  588 optional_ref: '&' .

    $default  reduce using rule 588 (optional_ref)


State 424

  604 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 569


State 425

  739 type_declaration_no_options_no_dim: "type" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 570


State 426

  762 type_declaration_no_options_no_dim: "array" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 571


State 427

  765 type_declaration_no_options_no_dim: "table" '<' $@61 . table_type_pair '>' $@62

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    table_type_pair                     go to state 572
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 573


State 428

  840 make_struct_decl: "struct" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 574


State 429

  843 make_struct_decl: "class" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 575


State 430

  437 expr: "true" .

    $default  reduce using rule 437 (expr)


State 431

  438 expr: "false" .

    $default  reduce using rule 438 (expr)


State 432

  312 expr_new: "new" . new_type_declaration
  313         | "new" . new_type_declaration '(' use_initializer ')'
  314         | "new" . new_type_declaration '(' expr_list ')'
  315         | "new" . new_type_declaration '(' make_struct_single ')'
  316         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  317         | "new" . make_decl

    "struct"       shift, and go to state 428
    "class"        shift, and go to state 429
    "array"        shift, and go to state 435
    "table"        shift, and go to state 437
    "fixed_array"  shift, and go to state 444
    "default"      shift, and go to state 445
    "tuple"        shift, and go to state 447
    "variant"      shift, and go to state 448
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 576
    '['            shift, and go to state 472
    '{'            shift, and go to state 476

    name_in_namespace           go to state 270
    new_type_declaration        go to state 577
    structure_type_declaration  go to state 578
    make_decl                   go to state 579
    make_struct_decl            go to state 498
    make_tuple_call             go to state 499
    make_dim_decl               go to state 500
    make_table_decl             go to state 501
    array_comprehension         go to state 502


State 433

  352 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  353               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  354               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 580


State 434

  351 expr_type_decl: "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 581


State 435

  859 make_dim_decl: "array" . "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  862              | "array" . "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'
  865              | "array" . "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  866              | "array" . '(' expr_list optional_comma ')'
  869              | "array" . '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "struct"   shift, and go to state 582
    "tuple"    shift, and go to state 583
    "variant"  shift, and go to state 584
    '<'        shift, and go to state 585
    '('        shift, and go to state 586


State 436

  431 expr: "null" .

    $default  reduce using rule 431 (expr)


State 437

  878 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  879                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 587
    '('  shift, and go to state 588


State 438

  482 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 589


State 439

  342 expr_cast: "cast" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 590


State 440

  345 expr_cast: "upcast" . '<' $@22 type_declaration_no_options '>' $@23 expr

    '<'  shift, and go to state 591


State 441

  483 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 592


State 442

  348 expr_cast: "reinterpret" . '<' $@24 type_declaration_no_options '>' $@25 expr

    '<'  shift, and go to state 593


State 443

  513 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 594


State 444

  870 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  873              | "fixed_array" . '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 595
    '('  shift, and go to state 596


State 445

  849 make_struct_decl: "default" . '<' $@99 type_declaration_no_options '>' $@100 use_initializer

    '<'  shift, and go to state 597


State 446

  695 basic_type_declaration: "bitfield" .

    $default  reduce using rule 695 (basic_type_declaration)


State 447

  852 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  855                | "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 598
    '('  shift, and go to state 599


State 448

  846 make_struct_decl: "variant" . '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 600


State 449

  514 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  515               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  516               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 601


State 450

  467 expr: "++" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 602
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 451

  468 expr: "--" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 603
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 452

  517 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 604


State 453

  518 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 605


State 454

  519 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 606


State 455

  520 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 607


State 456

  521 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 608


State 457

  523 expr_mtag: "$c" . '(' expr ')' '(' ')'
  524          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 609


State 458

  522 expr_mtag: "..." .

    $default  reduce using rule 522 (expr_mtag)


State 459

  375 expr_numeric_const: "integer constant" .

    $default  reduce using rule 375 (expr_numeric_const)


State 460

  377 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 377 (expr_numeric_const)


State 461

  376 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 376 (expr_numeric_const)


State 462

  378 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 378 (expr_numeric_const)


State 463

  379 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 379 (expr_numeric_const)


State 464

  380 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 380 (expr_numeric_const)


State 465

  381 expr_numeric_const: "double constant" .

    $default  reduce using rule 381 (expr_numeric_const)


State 466

   43 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 40 (string_builder_body)

    string_builder_body  go to state 610


State 467

  444 expr: '-' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 611
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 468

  443 expr: '+' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 612
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 469

  481 expr: '*' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 613
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 470

  442 expr: '~' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 614
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 471

  441 expr: '!' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 615
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 472

  856 make_dim_decl: '[' . optional_expr_list ']'
  885 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "for"                             shift, and go to state 616
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "iterator"                        shift, and go to state 617
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 297 (optional_expr_list)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    optional_expr_list      go to state 618
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 619
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 473

  471 expr: '(' . expr_list optional_comma ')'
  472     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "$f"                              shift, and go to state 621
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 622
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 623
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_fields      go to state 624
    make_struct_single      go to state 625
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 474

  360 block_or_lambda: '$' .

    $default  reduce using rule 360 (block_or_lambda)


State 475

  361 block_or_lambda: '@' .
  362                | '@' . '@'
  407 func_addr_expr: '@' . '@' func_addr_name
  410               | '@' . '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  413               | '@' . '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  532 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 626

    $default  reduce using rule 361 (block_or_lambda)


State 476

  877 make_table_decl: '{' . $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  887 array_comprehension: '{' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 627

    $default  reduce using rule 876 ($@113)

    $@113  go to state 628


State 477

  435 expr: string_builder .

    $default  reduce using rule 435 (expr)


State 478

  434 expr: expr_reader .

    $default  reduce using rule 434 (expr)


State 479

  512 expr: expr_call_pipe .

    $default  reduce using rule 512 (expr)


State 480

  401 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  402                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  424 expr_call: name_in_namespace . '(' ')'
  425          | name_in_namespace . '(' "uninitialized" ')'
  426          | name_in_namespace . '(' make_struct_single ')'
  427          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  428          | name_in_namespace . '(' expr_list ')'
  432 expr: name_in_namespace .

    '('  shift, and go to state 629

    $default  reduce using rule 432 (expr)


State 481

  505 expr: expr_new .

    $default  reduce using rule 505 (expr)


State 482

  504 expr: expr_cast .

    $default  reduce using rule 504 (expr)


State 483

  503 expr: expr_type_decl .

    $default  reduce using rule 503 (expr)


State 484

  502 expr: expr_type_info .

    $default  reduce using rule 502 (expr)


State 485

  372 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 630

    $default  reduce using rule 155 (optional_annotation_list)

    optional_annotation_list  go to state 631


State 486

  508 expr: expr_full_block .

    $default  reduce using rule 508 (expr)


State 487

  433 expr: expr_numeric_const .

    $default  reduce using rule 433 (expr)


State 488

  507 expr: expr_named_call .

    $default  reduce using rule 507 (expr)


State 489

  506 expr: expr_method_call .

    $default  reduce using rule 506 (expr)


State 490

  479 expr: func_addr_expr .

    $default  reduce using rule 479 (expr)


State 491

  439 expr: expr_field .

    $default  reduce using rule 439 (expr)


State 492

  274 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  480 expr: expr_call .

    '$'  shift, and go to state 474
    '@'  shift, and go to state 632
    '{'  shift, and go to state 633

    $default  reduce using rule 480 (expr)

    block_or_lambda                go to state 634
    expr_full_block_assumed_piped  go to state 635


State 493

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  740 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 671


State 494

  484 expr: expr_generator .

    $default  reduce using rule 484 (expr)


State 495

  440 expr: expr_mtag .

    $default  reduce using rule 440 (expr)


State 496

  429 expr_call: basic_type_declaration . '(' ')'
  430          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 672


State 497

  436 expr: make_decl .

    $default  reduce using rule 436 (expr)


State 498

  814 make_decl: make_struct_decl .

    $default  reduce using rule 814 (make_decl)


State 499

  818 make_decl: make_tuple_call .

    $default  reduce using rule 818 (make_decl)


State 500

  815 make_decl: make_dim_decl .

    $default  reduce using rule 815 (make_decl)


State 501

  816 make_decl: make_table_decl .

    $default  reduce using rule 816 (make_decl)


State 502

  817 make_decl: array_comprehension .

    $default  reduce using rule 817 (make_decl)


State 503

  768 type_declaration_no_options_no_dim: "iterator" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 673


State 504

  758 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 674


State 505

  706 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 675


State 506

  722 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' . $@52 bitfield_bits '>' $@53

    $default  reduce using rule 720 ($@52)

    $@52  go to state 676


State 507

  772 type_declaration_no_options_no_dim: "block" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 677


State 508

  775 type_declaration_no_options_no_dim: "block" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 341

    $default  reduce using rule 159 (optional_function_argument_list)

    optional_function_argument_list  go to state 678


State 509

  779 type_declaration_no_options_no_dim: "function" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 679


State 510

  782 type_declaration_no_options_no_dim: "function" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 341

    $default  reduce using rule 159 (optional_function_argument_list)

    optional_function_argument_list  go to state 680


State 511

  786 type_declaration_no_options_no_dim: "lambda" '<' $@73 . type_declaration '>' $@74

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 681


State 512

  789 type_declaration_no_options_no_dim: "lambda" '<' $@75 . optional_function_argument_list optional_function_type '>' $@76

    '('  shift, and go to state 341

    $default  reduce using rule 159 (optional_function_argument_list)

    optional_function_argument_list  go to state 682


State 513

  792 type_declaration_no_options_no_dim: "tuple" '<' $@77 . tuple_type_list '>' $@78

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 683
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    tuple_type                          go to state 684
    tuple_type_list                     go to state 685
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 686


State 514

  795 type_declaration_no_options_no_dim: "variant" '<' $@79 . variant_type_list '>' $@80

    "name"  shift, and go to state 687

    variant_type       go to state 688
    variant_type_list  go to state 689


State 515

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  707 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 690


State 516

  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 742 ($@56)

    $@56  go to state 691


State 517

  741 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 297 (optional_expr_list)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    optional_expr_list      go to state 692
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 619
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 518

  753 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 753 (type_declaration_no_options_no_dim)


State 519

  754 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 754 (type_declaration_no_options_no_dim)


State 520

  747 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 747 (type_declaration_no_options_no_dim)


State 521

  749 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 522

  744 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 693


State 523

  752 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 752 (type_declaration_no_options_no_dim)


State 524

  728 dim_list: '[' ']' .

    $default  reduce using rule 728 (dim_list)


State 525

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  727 dim_list: '[' expr . ']'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 694


State 526

  729 dim_list: dim_list '[' . expr ']'
  730         | dim_list '[' . ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    ']'                               shift, and go to state 695
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 696
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 527

  798 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 798 (type_declaration)


State 528

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  797 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381

    $default  reduce using rule 797 (type_declaration)


State 529

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' . $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 811 ($@91)

    $@91  go to state 697


State 530

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . tuple_alias_type_list optional_semis $@84 '}'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 683
    '$'          shift, and go to state 269

    $default  reduce using rule 566 (tuple_alias_type_list)

    name_in_namespace                   go to state 270
    tuple_type                          go to state 698
    tuple_alias_type_list               go to state 699
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 686


State 531

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 . variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 687

    $default  reduce using rule 572 (variant_alias_type_list)

    variant_type             go to state 700
    variant_alias_type_list  go to state 701


State 532

  234 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 234 (function_name)


State 533

  214 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 214 (function_name)


State 534

  215 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 215 (function_name)


State 535

  217 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 217 (function_name)


State 536

  216 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 216 (function_name)


State 537

  218 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 218 (function_name)


State 538

  219 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 219 (function_name)


State 539

  220 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 220 (function_name)


State 540

  221 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 221 (function_name)


State 541

  213 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 213 (function_name)


State 542

  222 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 222 (function_name)


State 543

  223 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 223 (function_name)


State 544

  224 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 224 (function_name)


State 545

  556 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 702
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 546

  326 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 326 (kwd_let_var_or_nothing)


State 547

  327 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 327 (kwd_let_var_or_nothing)


State 548

  554 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  555 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_declaration_no_type  go to state 705
    variable_declaration_type     go to state 706
    variable_name_with_pos_list   go to state 707


State 549

  559 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 396
    '@'   shift, and go to state 221

    $default  reduce using rule 533 (optional_field_annotation)

    metadata_argument_list                 go to state 222
    optional_field_annotation              go to state 398
    function_argument_declaration_no_type  go to state 399
    function_argument_declaration_type     go to state 400
    function_argument_list                 go to state 708


State 550

  561 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 396
    '@'   shift, and go to state 221

    $default  reduce using rule 533 (optional_field_annotation)

    metadata_argument_list                 go to state 222
    optional_field_annotation              go to state 398
    function_argument_declaration_no_type  go to state 399
    function_argument_declaration_type     go to state 400
    function_argument_list                 go to state 709


State 551

  560 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 396
    '@'   shift, and go to state 221

    $default  reduce using rule 533 (optional_field_annotation)

    metadata_argument_list                 go to state 222
    optional_field_annotation              go to state 398
    function_argument_declaration_no_type  go to state 399
    function_argument_declaration_type     go to state 400
    function_argument_list                 go to state 710


State 552

  161 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 161 (optional_function_argument_list)


State 553

  163 optional_function_type: ':' type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 163 (optional_function_type)


State 554

  273 expression_block: $@16 '{' . expressions $@17 '}' expression_block_finally

    $default  reduce using rule 294 (expressions)

    expressions  go to state 711


State 555

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 643 ($@47)

    $@47  go to state 712


State 556

  647 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 713


State 557

  650 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 650 (structure_name)


State 558

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 714
    '{'  shift, and go to state 715

    optional_struct_variable_declaration_list  go to state 716


State 559

  590 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 717


State 560

  589 let_variable_name_with_pos_list: "name" .
  591                                | "name" . "aka" "name"

    "aka"  shift, and go to state 718

    $default  reduce using rule 589 (let_variable_name_with_pos_list)


State 561

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  593                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  599 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  600                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  601                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 719
    ':'  shift, and go to state 720
    '&'  shift, and go to state 423

    $default  reduce using rule 587 (optional_ref)

    optional_ref  go to state 721


State 562

  613 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 613 (global_variable_declaration_list)


State 563

  139 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 139 (metadata_argument_list)


State 564

  595 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 595 (global_let_variable_name_with_pos_list)


State 565

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  603                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 373
    "implicit"             shift, and go to state 374
    "explicit"             shift, and go to state 375
    "=="                   shift, and go to state 376
    "<-"                   shift, and go to state 566
    "??"                   shift, and go to state 377
    ":="                   shift, and go to state 567
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 568
    '?'                    shift, and go to state 378
    '&'                    shift, and go to state 379
    '-'                    shift, and go to state 380
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 381

    SEMICOLON              go to state 722
    copy_or_move_or_clone  go to state 723


State 566

  585 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 585 (copy_or_move_or_clone)


State 567

  586 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 586 (copy_or_move_or_clone)


State 568

  584 copy_or_move_or_clone: '=' .

    $default  reduce using rule 584 (copy_or_move_or_clone)


State 569

  604 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 724
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 570

  739 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration . '>' $@55
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 725


State 571

  762 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration . '>' $@60
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 726


State 572

  765 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair . '>' $@62

    '>'  shift, and go to state 727


State 573

  725 table_type_pair: type_declaration .
  726                | type_declaration . c_or_s type_declaration
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '|'                    shift, and go to state 384
    ';'                    shift, and go to state 16

    $default  reduce using rule 725 (table_type_pair)

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 732


State 574

  840 make_struct_decl: "struct" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 838 ($@93)

    $@93  go to state 733


State 575

  843 make_struct_decl: "class" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 841 ($@95)

    $@95  go to state 734


State 576

  310 new_type_declaration: '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 308 ($@18)

    $@18  go to state 735


State 577

  312 expr_new: "new" new_type_declaration .
  313         | "new" new_type_declaration . '(' use_initializer ')'
  314         | "new" new_type_declaration . '(' expr_list ')'
  315         | "new" new_type_declaration . '(' make_struct_single ')'
  316         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 736

    $default  reduce using rule 312 (expr_new)


State 578

  311 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 311 (new_type_declaration)


State 579

  317 expr_new: "new" make_decl .

    $default  reduce using rule 317 (expr_new)


State 580

  352 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  353               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  354               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 737
    '('  shift, and go to state 738


State 581

  351 expr_type_decl: "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 349 ($@26)

    $@26  go to state 739


State 582

  859 make_dim_decl: "array" "struct" . '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 740


State 583

  862 make_dim_decl: "array" "tuple" . '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 741


State 584

  865 make_dim_decl: "array" "variant" . '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    '<'  shift, and go to state 742


State 585

  869 make_dim_decl: "array" '<' . $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    $default  reduce using rule 867 ($@109)

    $@109  go to state 743


State 586

  866 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 744
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 587

  879 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 745
    type_declaration_no_options_no_dim  go to state 276


State 588

  878 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 746
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_map_tuple          go to state 747
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    expr_map_tuple_list     go to state 748
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 589

  482 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 749
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 590

  342 expr_cast: "cast" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 340 ($@20)

    $@20  go to state 750


State 591

  345 expr_cast: "upcast" '<' . $@22 type_declaration_no_options '>' $@23 expr

    $default  reduce using rule 343 ($@22)

    $@22  go to state 751


State 592

  483 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 752
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 593

  348 expr_cast: "reinterpret" '<' . $@24 type_declaration_no_options '>' $@25 expr

    $default  reduce using rule 346 ($@24)

    $@24  go to state 753


State 594

  513 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 754
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 595

  873 make_dim_decl: "fixed_array" '<' . $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 871 ($@111)

    $@111  go to state 755


State 596

  870 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 756
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 597

  849 make_struct_decl: "default" '<' . $@99 type_declaration_no_options '>' $@100 use_initializer

    $default  reduce using rule 847 ($@99)

    $@99  go to state 757


State 598

  855 make_tuple_call: "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 853 ($@101)

    $@101  go to state 758


State 599

  852 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 759
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 600

  846 make_struct_decl: "variant" '<' . $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 844 ($@97)

    $@97  go to state 760


State 601

  514 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  515               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  516               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 761
    type_declaration_no_options_no_dim  go to state 276


State 602

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  467     | "++" expr .
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 467 (expr)


State 603

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  468     | "--" expr .
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 468 (expr)


State 604

  517 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 762
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 605

  518 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 763
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 606

  519 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 764
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 607

  520 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 765
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 608

  521 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 766
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 609

  523 expr_mtag: "$c" '(' . expr ')' '(' ')'
  524          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 767
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 610

   41 string_builder_body: string_builder_body . character_sequence
   42                    | string_builder_body . "{" expr optional_format_string "}"
   43 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 768
    "{"                   shift, and go to state 769

    character_sequence  go to state 770


State 611

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  444 expr: '-' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 444 (expr)


State 612

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  443 expr: '+' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 443 (expr)


State 613

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  481     | '*' expr .
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 481 (expr)


State 614

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  442 expr: '~' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 442 (expr)


State 615

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  441 expr: '!' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 441 (expr)


State 616

  885 array_comprehension: '[' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 771


State 617

  886 array_comprehension: '[' "iterator" . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 772


State 618

  856 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 773


State 619

  298 optional_expr_list: expr_list . optional_comma
  356 expr_list: expr_list . ',' expr

    ','  shift, and go to state 774

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 775


State 620

  355 expr_list: expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 355 (expr_list)


State 621

  823 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  824                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 776


State 622

  303 name_in_namespace: "name" .
  304                  | "name" . "::" "name"
  819 make_struct_fields: "name" . copy_or_move expr
  820                   | "name" . ":=" expr

    "<-"  shift, and go to state 777
    ":="  shift, and go to state 778
    "::"  shift, and go to state 96
    '='   shift, and go to state 779

    $default  reduce using rule 303 (name_in_namespace)

    copy_or_move  go to state 780


State 623

  356 expr_list: expr_list . ',' expr
  471 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 774

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 781


State 624

  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  829 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 782

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 783


State 625

  472 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 784


State 626

  362 block_or_lambda: '@' '@' .
  407 func_addr_expr: '@' '@' . func_addr_name
  410               | '@' '@' . '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  413               | '@' '@' . '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  532 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 785
    "$c"    shift, and go to state 786
    "name"  shift, and go to state 58
    '<'     shift, and go to state 787

    $default  reduce using rule 362 (block_or_lambda)

    name_in_namespace  go to state 788
    func_addr_name     go to state 789


State 627

  887 array_comprehension: '{' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 790


State 628

  877 make_table_decl: '{' $@113 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 791


State 629

  401 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  402                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  424 expr_call: name_in_namespace '(' . ')'
  425          | name_in_namespace '(' . "uninitialized" ')'
  426          | name_in_namespace '(' . make_struct_single ')'
  427          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  428          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "uninitialized"                   shift, and go to state 792
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "$f"                              shift, and go to state 621
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 622
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 793
    '('                               shift, and go to state 473
    ')'                               shift, and go to state 794
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 795
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_fields      go to state 624
    make_struct_single      go to state 796
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 630

  156 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 797
    name_in_namespace             go to state 70


State 631

  372 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 798

    $default  reduce using rule 370 (optional_capture_list)

    optional_capture_list  go to state 799


State 632

  361 block_or_lambda: '@' .
  362                | '@' . '@'

    '@'  shift, and go to state 800

    $default  reduce using rule 361 (block_or_lambda)


State 633

  374 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 294 (expressions)

    expressions  go to state 801


State 634

  373 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 630

    $default  reduce using rule 155 (optional_annotation_list)

    optional_annotation_list  go to state 802


State 635

  274 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 274 (expr_call_pipe)


State 636

  489 expr: expr "is" . "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr "is" . basic_type_declaration
  491     | expr "is" . "name"
  531 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 803
    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 446
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "$f"        shift, and go to state 804
    "name"      shift, and go to state 805

    basic_type_declaration  go to state 806


State 637

  492 expr: expr "as" . "name"
  495     | expr "as" . "type" '<' $@36 type_declaration '>' $@37
  496     | expr "as" . basic_type_declaration
  529 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 807
    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 446
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "$f"        shift, and go to state 808
    "name"      shift, and go to state 809

    basic_type_declaration  go to state 810


State 638

  445 expr: expr "<<" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 811
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 639

  446 expr: expr ">>" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 812
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 640

  469 expr: expr "++" .

    $default  reduce using rule 469 (expr)


State 641

  470 expr: expr "--" .

    $default  reduce using rule 470 (expr)


State 642

  458 expr: expr "<=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 813
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 643

  459 expr: expr ">=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 814
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 644

  456 expr: expr "==" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 815
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 645

  457 expr: expr "!=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 816
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 646

  403 expr_method_call: expr "->" . "name" '(' ')'
  404                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 817


State 647

  485 expr: expr "??" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 818
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 648

  477 expr: expr "?." . "name"
  526 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 819
    "name"  shift, and go to state 820


State 649

  475 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 821
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 650

  509 expr: expr "<|" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 822
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 651

  510 expr: expr "|>" . expr
  511     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 823
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 824
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 652

  447 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 825
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 653

  448 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 826
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 654

  463 expr: expr "&&" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 827
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 655

  464 expr: expr "||" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 828
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 656

  465 expr: expr "^^" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 829
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 657

  466 expr: expr ".." . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 830
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 658

  486 expr: expr '?' . expr ':' expr
  497     | expr '?' . "as" "name"
  500     | expr '?' . "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr '?' . "as" basic_type_declaration
  530 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "as"                              shift, and go to state 831
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 832
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 659

  461 expr: expr '|' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 833
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 660

  462 expr: expr '^' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 834
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 661

  460 expr: expr '&' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 835
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 662

  454 expr: expr '<' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 836
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 663

  455 expr: expr '>' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 837
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 664

  450 expr: expr '-' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 838
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 665

  449 expr: expr '+' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 839
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 666

  451 expr: expr '*' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 840
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 667

  452 expr: expr '/' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 841
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 668

  453 expr: expr '%' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 842
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 669

  414 expr_field: expr '.' . "name"
  415           | expr '.' . '.' "name"
  416           | expr '.' . "name" '(' ')'
  417           | expr '.' . "name" '(' expr_list ')'
  418           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  419           | expr '.' . basic_type_declaration '(' ')'
  420           | expr '.' . basic_type_declaration '(' expr_list ')'
  423           | expr '.' . $@32 error $@33
  474 expr: expr '.' . '[' expr ']'
  476     | expr '.' . "?[" expr ']'
  478     | expr '.' . "?." "name"
  525 expr_mtag: expr '.' . "$f" '(' expr ')'
  527          | expr '.' . '.' "$f" '(' expr ')'
  528          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 446
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "?."        shift, and go to state 843
    "?["        shift, and go to state 844
    "$f"        shift, and go to state 845
    "name"      shift, and go to state 846
    '.'         shift, and go to state 847
    '['         shift, and go to state 848

    $default  reduce using rule 421 ($@32)

    $@32                    go to state 849
    basic_type_declaration  go to state 850


State 670

  473 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 851
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 671

  740 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 672

  429 expr_call: basic_type_declaration '(' . ')'
  430          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    ')'                               shift, and go to state 852
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 853
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 673

  768 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration . '>' $@64
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 854


State 674

  758 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration . '>' $@58
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 855


State 675

  706 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 706 (auto_type_declaration)


State 676

  722 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@52 . bitfield_bits '>' $@53

    "name"  shift, and go to state 856

    bitfield_bits  go to state 857


State 677

  772 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration . '>' $@66
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 858


State 678

  775 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 402

    $default  reduce using rule 162 (optional_function_type)

    optional_function_type  go to state 859


State 679

  779 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration . '>' $@70
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 860


State 680

  782 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 402

    $default  reduce using rule 162 (optional_function_type)

    optional_function_type  go to state 861


State 681

  786 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration . '>' $@74
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 862


State 682

  789 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list . optional_function_type '>' $@76

    ':'  shift, and go to state 402

    $default  reduce using rule 162 (optional_function_type)

    optional_function_type  go to state 863


State 683

  303 name_in_namespace: "name" .
  304                  | "name" . "::" "name"
  563 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 864

    $default  reduce using rule 303 (name_in_namespace)


State 684

  564 tuple_type_list: tuple_type .

    $default  reduce using rule 564 (tuple_type_list)


State 685

  565 tuple_type_list: tuple_type_list . c_or_s tuple_type
  792 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list . '>' $@78

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 865
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 866


State 686

  562 tuple_type: type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 562 (tuple_type)


State 687

  569 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 867


State 688

  570 variant_type_list: variant_type .

    $default  reduce using rule 570 (variant_type_list)


State 689

  571 variant_type_list: variant_type_list . c_or_s variant_type
  795 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list . '>' $@80

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 868
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 869


State 690

  707 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 707 (auto_type_declaration)


State 691

  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    type_declaration_no_options_list    go to state 870
    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 871


State 692

  741 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 872


State 693

  744 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 694

  727 dim_list: '[' expr ']' .

    $default  reduce using rule 727 (dim_list)


State 695

  730 dim_list: dim_list '[' ']' .

    $default  reduce using rule 730 (dim_list)


State 696

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  729 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 873


State 697

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 . bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 874

    $default  reduce using rule 710 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 875


State 698

  567 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 567 (tuple_alias_type_list)


State 699

  568 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 876
    semis           go to state 877
    optional_semis  go to state 878


State 700

  573 variant_alias_type_list: variant_type .

    $default  reduce using rule 573 (variant_alias_type_list)


State 701

  574 variant_alias_type_list: variant_alias_type_list . semis variant_type
  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list . optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 876
    semis           go to state 879
    optional_semis  go to state 880


State 702

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  556 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 881


State 703

  665 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 882


State 704

  664 variable_name_with_pos_list: "name" .
  666                            | "name" . "aka" "name"

    "aka"  shift, and go to state 883

    $default  reduce using rule 664 (variable_name_with_pos_list)


State 705

  554 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 554 (function_argument_declaration_no_type)


State 706

  555 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 555 (function_argument_declaration_type)


State 707

  577 variable_declaration_no_type: variable_name_with_pos_list .
  578                             | variable_name_with_pos_list . '&'
  579                             | variable_name_with_pos_list . copy_or_move expr
  580 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  581                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 777
    ','   shift, and go to state 884
    '='   shift, and go to state 779
    ':'   shift, and go to state 885
    '&'   shift, and go to state 886

    $default  reduce using rule 577 (variable_declaration_no_type)

    copy_or_move  go to state 887


State 708

  559 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 559 (function_argument_list)


State 709

  561 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 561 (function_argument_list)


State 710

  560 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 560 (function_argument_list)


State 711

  273 expression_block: $@16 '{' expressions . $@17 '}' expression_block_finally
  295 expressions: expressions . expression_any
  296            | expressions . error

    error                             shift, and go to state 888
    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "try"                             shift, and go to state 891
    "table"                           shift, and go to state 437
    "delete"                          shift, and go to state 892
    "deref"                           shift, and go to state 438
    "typedef"                         shift, and go to state 893
    "assume"                          shift, and go to state 894
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "pass"                            shift, and go to state 896
    "reinterpret"                     shift, and go to state 442
    "label"                           shift, and go to state 897
    "goto"                            shift, and go to state 898
    "unsafe"                          shift, and go to state 899
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 476

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 272 ($@17)

    SEMICOLON                         go to state 901
    string_builder                    go to state 477
    expr_reader                       go to state 478
    expression_label                  go to state 902
    expression_goto                   go to state 903
    expression_if_one_liner           go to state 904
    expression_if_then_else           go to state 905
    $@9                               go to state 906
    expression_if_then_else_oneliner  go to state 907
    expression_for_loop               go to state 908
    $@10                              go to state 909
    expression_unsafe                 go to state 910
    expression_while_loop             go to state 911
    $@11                              go to state 912
    expression_with                   go to state 913
    $@12                              go to state 914
    expression_with_alias             go to state 915
    $@17                              go to state 916
    expr_call_pipe                    go to state 479
    expression_any                    go to state 917
    name_in_namespace                 go to state 480
    expression_delete                 go to state 918
    expr_new                          go to state 481
    expression_break                  go to state 919
    expression_continue               go to state 920
    expression_return                 go to state 921
    expression_yield                  go to state 922
    expression_try_catch              go to state 923
    kwd_let                           go to state 924
    expression_let                    go to state 925
    expr_cast                         go to state 482
    expr_type_decl                    go to state 483
    expr_type_info                    go to state 484
    block_or_lambda                   go to state 485
    expr_full_block                   go to state 486
    expr_numeric_const                go to state 487
    expr_assign                       go to state 926
    expr_named_call                   go to state 488
    expr_method_call                  go to state 489
    func_addr_expr                    go to state 490
    expr_field                        go to state 491
    expr_call                         go to state 492
    expr                              go to state 927
    expr_generator                    go to state 494
    expr_mtag                         go to state 495
    basic_type_declaration            go to state 496
    make_decl                         go to state 497
    make_struct_decl                  go to state 498
    make_tuple_call                   go to state 499
    make_dim_decl                     go to state 500
    make_table_decl                   go to state 501
    array_comprehension               go to state 502


State 712

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 . enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 928

    $default  reduce using rule 621 (enum_list)

    enum_expression  go to state 929
    enum_list        go to state 930


State 713

  647 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 647 (optional_structure_parent)


State 714

  658 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 658 (optional_struct_variable_declaration_list)


State 715

  659 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 546 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 931


State 716

  663 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list .

    $default  reduce using rule 663 (structure_declaration)


State 717

  590 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 932
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 718

  591 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 933


State 719

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  593                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 934


State 720

  599 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  600                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 935
    type_declaration_no_options_no_dim  go to state 276


State 721

  601 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 936


State 722

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 602 (global_let_variable_declaration)


State 723

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 937
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 724

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  604 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 636
    "as"                   shift, and go to state 637
    "<<"                   shift, and go to state 638
    ">>"                   shift, and go to state 639
    "++"                   shift, and go to state 640
    "--"                   shift, and go to state 641
    "<="                   shift, and go to state 642
    ">="                   shift, and go to state 643
    "=="                   shift, and go to state 644
    "!="                   shift, and go to state 645
    "->"                   shift, and go to state 646
    "??"                   shift, and go to state 647
    "?."                   shift, and go to state 648
    "?["                   shift, and go to state 649
    "<|"                   shift, and go to state 650
    "|>"                   shift, and go to state 651
    "<<<"                  shift, and go to state 652
    ">>>"                  shift, and go to state 653
    "&&"                   shift, and go to state 654
    "||"                   shift, and go to state 655
    "^^"                   shift, and go to state 656
    ".."                   shift, and go to state 657
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 658
    '|'                    shift, and go to state 659
    '^'                    shift, and go to state 660
    '&'                    shift, and go to state 661
    '<'                    shift, and go to state 662
    '>'                    shift, and go to state 663
    '-'                    shift, and go to state 664
    '+'                    shift, and go to state 665
    '*'                    shift, and go to state 666
    '/'                    shift, and go to state 667
    '%'                    shift, and go to state 668
    '.'                    shift, and go to state 669
    '['                    shift, and go to state 670
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 938


State 725

  739 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 738 ($@55)

    $@55  go to state 939


State 726

  762 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 761 ($@60)

    $@60  go to state 940


State 727

  765 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' . $@62

    $default  reduce using rule 764 ($@62)

    $@62  go to state 941


State 728

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 729

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 730

  723 c_or_s: COMMA .

    $default  reduce using rule 723 (c_or_s)


State 731

  724 c_or_s: SEMICOLON .

    $default  reduce using rule 724 (c_or_s)


State 732

  726 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 942


State 733

  840 make_struct_decl: "struct" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 943
    type_declaration_no_options_no_dim  go to state 276


State 734

  843 make_struct_decl: "class" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 944
    type_declaration_no_options_no_dim  go to state 276


State 735

  310 new_type_declaration: '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 945


State 736

  313 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  314         | "new" new_type_declaration '(' . expr_list ')'
  315         | "new" new_type_declaration '(' . make_struct_single ')'
  316         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "uninitialized"                   shift, and go to state 946
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "$f"                              shift, and go to state 621
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 622
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 836 (use_initializer)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 947
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_fields      go to state 624
    make_struct_single      go to state 948
    use_initializer         go to state 949
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 737

  353 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  354               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 950


State 738

  352 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 951
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 739

  351 expr_type_decl: "type" '<' $@26 . type_declaration '>' $@27

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 952


State 740

  859 make_dim_decl: "array" "struct" '<' . $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 857 ($@103)

    $@103  go to state 953


State 741

  862 make_dim_decl: "array" "tuple" '<' . $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 860 ($@105)

    $@105  go to state 954


State 742

  865 make_dim_decl: "array" "variant" '<' . $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    $default  reduce using rule 863 ($@107)

    $@107  go to state 955


State 743

  869 make_dim_decl: "array" '<' $@109 . type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 956
    type_declaration_no_options_no_dim  go to state 276


State 744

  356 expr_list: expr_list . ',' expr
  866 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 774

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 957


State 745

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  879 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 373
    "implicit"             shift, and go to state 374
    "explicit"             shift, and go to state 375
    "=="                   shift, and go to state 376
    "??"                   shift, and go to state 377
    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '?'                    shift, and go to state 378
    '&'                    shift, and go to state 379
    '>'                    shift, and go to state 958
    '-'                    shift, and go to state 380
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 381

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 959


State 746

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  850 make_map_tuple: expr . "=>" expr
  851               | expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "=>"   shift, and go to state 960
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 851 (make_map_tuple)


State 747

  874 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 874 (expr_map_tuple_list)


State 748

  875 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  878 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 961

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 962


State 749

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  482     | "deref" '(' expr . ')'
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 963


State 750

  342 expr_cast: "cast" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 964
    type_declaration_no_options_no_dim  go to state 276


State 751

  345 expr_cast: "upcast" '<' $@22 . type_declaration_no_options '>' $@23 expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 965
    type_declaration_no_options_no_dim  go to state 276


State 752

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  483     | "addr" '(' expr . ')'
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 966


State 753

  348 expr_cast: "reinterpret" '<' $@24 . type_declaration_no_options '>' $@25 expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 967
    type_declaration_no_options_no_dim  go to state 276


State 754

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  513     | "unsafe" '(' expr . ')'
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 968


State 755

  873 make_dim_decl: "fixed_array" '<' $@111 . type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 969
    type_declaration_no_options_no_dim  go to state 276


State 756

  356 expr_list: expr_list . ',' expr
  870 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 774

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 970


State 757

  849 make_struct_decl: "default" '<' $@99 . type_declaration_no_options '>' $@100 use_initializer

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 971
    type_declaration_no_options_no_dim  go to state 276


State 758

  855 make_tuple_call: "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 683
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    tuple_type                          go to state 684
    tuple_type_list                     go to state 972
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 686


State 759

  356 expr_list: expr_list . ',' expr
  852 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 774

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 973


State 760

  846 make_struct_decl: "variant" '<' $@97 . variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 687

    variant_type       go to state 688
    variant_type_list  go to state 974


State 761

  514 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  515               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  516               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 975
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 762

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  517 expr_mtag: "$$" '(' expr . ')'
  525          | expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 976


State 763

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  518 expr_mtag: "$i" '(' expr . ')'
  525          | expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 977


State 764

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  519 expr_mtag: "$v" '(' expr . ')'
  525          | expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 978


State 765

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  520 expr_mtag: "$b" '(' expr . ')'
  525          | expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 979


State 766

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  521 expr_mtag: "$a" '(' expr . ')'
  525          | expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 980


State 767

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: "$c" '(' expr . ')' '(' ')'
  524          | "$c" '(' expr . ')' '(' expr_list ')'
  525          | expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 981


State 768

   43 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 43 (string_builder)


State 769

   42 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 982
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 770

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   41 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 224
    STRING_CHARACTER_ESC  shift, and go to state 225

    $default  reduce using rule 41 (string_builder_body)


State 771

  885 array_comprehension: '[' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 983
    "name"  shift, and go to state 984
    '('     shift, and go to state 985

    for_variable_name_with_pos_list  go to state 986


State 772

  886 array_comprehension: '[' "iterator" "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 987


State 773

  856 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 856 (make_dim_decl)


State 774

  356 expr_list: expr_list ',' . expr
  884 optional_comma: ',' .

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 884 (optional_comma)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 988
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 775

  298 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 298 (optional_expr_list)


State 776

  823 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  824                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 989
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 777

  576 copy_or_move: "<-" .

    $default  reduce using rule 576 (copy_or_move)


State 778

  820 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 990
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 779

  575 copy_or_move: '=' .

    $default  reduce using rule 575 (copy_or_move)


State 780

  819 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 991
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 781

  471 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 992


State 782

  821 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  822                   | make_struct_fields ',' . "name" ":=" expr
  825                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  884 optional_comma: ',' .

    "$f"    shift, and go to state 993
    "name"  shift, and go to state 994

    $default  reduce using rule 884 (optional_comma)


State 783

  829 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 829 (make_struct_single)


State 784

  472 expr: '(' make_struct_single ')' .

    $default  reduce using rule 472 (expr)


State 785

  406 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 995


State 786

  532 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 996


State 787

  410 func_addr_expr: '@' '@' '<' . $@28 type_declaration_no_options '>' $@29 func_addr_name
  413               | '@' '@' '<' . $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    ':'       reduce using rule 411 ($@30)
    '>'       reduce using rule 411 ($@30)
    '('       reduce using rule 411 ($@30)
    $default  reduce using rule 408 ($@28)

    $@28  go to state 997
    $@30  go to state 998


State 788

  405 func_addr_name: name_in_namespace .

    $default  reduce using rule 405 (func_addr_name)


State 789

  407 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 407 (func_addr_expr)


State 790

  887 array_comprehension: '{' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 983
    "name"  shift, and go to state 984
    '('     shift, and go to state 985

    for_variable_name_with_pos_list  go to state 999


State 791

  877 make_table_decl: '{' $@113 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 299 (optional_expr_map_tuple_list)

    string_builder                go to state 477
    expr_reader                   go to state 478
    expr_call_pipe                go to state 479
    optional_expr_map_tuple_list  go to state 1000
    name_in_namespace             go to state 480
    expr_new                      go to state 481
    expr_cast                     go to state 482
    expr_type_decl                go to state 483
    expr_type_info                go to state 484
    block_or_lambda               go to state 485
    expr_full_block               go to state 486
    expr_numeric_const            go to state 487
    expr_named_call               go to state 488
    expr_method_call              go to state 489
    func_addr_expr                go to state 490
    expr_field                    go to state 491
    expr_call                     go to state 492
    expr                          go to state 746
    expr_generator                go to state 494
    expr_mtag                     go to state 495
    basic_type_declaration        go to state 496
    make_decl                     go to state 497
    make_struct_decl              go to state 498
    make_map_tuple                go to state 747
    make_tuple_call               go to state 499
    make_dim_decl                 go to state 500
    expr_map_tuple_list           go to state 1001
    make_table_decl               go to state 501
    array_comprehension           go to state 502


State 792

  425 expr_call: name_in_namespace '(' "uninitialized" . ')'
  427          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002
    ')'     shift, and go to state 1003

    make_struct_fields  go to state 624
    make_struct_single  go to state 1004


State 793

  401 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  856 make_dim_decl: '[' . optional_expr_list ']'
  885 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "for"                             shift, and go to state 616
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "iterator"                        shift, and go to state 617
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "$f"                              shift, and go to state 621
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 622
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 297 (optional_expr_list)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    optional_expr_list      go to state 618
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 619
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_fields      go to state 1005
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 794

  424 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 424 (expr_call)


State 795

  356 expr_list: expr_list . ',' expr
  402 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  428 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1007


State 796

  426 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1008


State 797

  154 annotation_list: annotation_list . ',' annotation_declaration
  156 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 1009


State 798

  371 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1010


State 799

  372 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 341

    $default  reduce using rule 159 (optional_function_argument_list)

    optional_function_argument_list  go to state 1011


State 800

  362 block_or_lambda: '@' '@' .

    $default  reduce using rule 362 (block_or_lambda)


State 801

  295 expressions: expressions . expression_any
  296            | expressions . error
  374 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 888
    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "try"                             shift, and go to state 891
    "table"                           shift, and go to state 437
    "delete"                          shift, and go to state 892
    "deref"                           shift, and go to state 438
    "typedef"                         shift, and go to state 893
    "assume"                          shift, and go to state 894
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "pass"                            shift, and go to state 896
    "reinterpret"                     shift, and go to state 442
    "label"                           shift, and go to state 897
    "goto"                            shift, and go to state 898
    "unsafe"                          shift, and go to state 899
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 476
    '}'                               shift, and go to state 1012

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)

    SEMICOLON                         go to state 901
    string_builder                    go to state 477
    expr_reader                       go to state 478
    expression_label                  go to state 902
    expression_goto                   go to state 903
    expression_if_one_liner           go to state 904
    expression_if_then_else           go to state 905
    $@9                               go to state 906
    expression_if_then_else_oneliner  go to state 907
    expression_for_loop               go to state 908
    $@10                              go to state 909
    expression_unsafe                 go to state 910
    expression_while_loop             go to state 911
    $@11                              go to state 912
    expression_with                   go to state 913
    $@12                              go to state 914
    expression_with_alias             go to state 915
    expr_call_pipe                    go to state 479
    expression_any                    go to state 917
    name_in_namespace                 go to state 480
    expression_delete                 go to state 918
    expr_new                          go to state 481
    expression_break                  go to state 919
    expression_continue               go to state 920
    expression_return                 go to state 921
    expression_yield                  go to state 922
    expression_try_catch              go to state 923
    kwd_let                           go to state 924
    expression_let                    go to state 925
    expr_cast                         go to state 482
    expr_type_decl                    go to state 483
    expr_type_info                    go to state 484
    block_or_lambda                   go to state 485
    expr_full_block                   go to state 486
    expr_numeric_const                go to state 487
    expr_assign                       go to state 926
    expr_named_call                   go to state 488
    expr_method_call                  go to state 489
    func_addr_expr                    go to state 490
    expr_field                        go to state 491
    expr_call                         go to state 492
    expr                              go to state 927
    expr_generator                    go to state 494
    expr_mtag                         go to state 495
    basic_type_declaration            go to state 496
    make_decl                         go to state 497
    make_struct_decl                  go to state 498
    make_tuple_call                   go to state 499
    make_dim_decl                     go to state 500
    make_table_decl                   go to state 501
    array_comprehension               go to state 502


State 802

  373 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 798

    $default  reduce using rule 370 (optional_capture_list)

    optional_capture_list  go to state 1013


State 803

  489 expr: expr "is" "type" . '<' $@34 type_declaration_no_options '>' $@35

    '<'  shift, and go to state 1014


State 804

  531 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1015


State 805

  491 expr: expr "is" "name" .

    $default  reduce using rule 491 (expr)


State 806

  490 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 490 (expr)


State 807

  495 expr: expr "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 1016


State 808

  529 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1017


State 809

  492 expr: expr "as" "name" .

    $default  reduce using rule 492 (expr)


State 810

  496 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 496 (expr)


State 811

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  445     | expr "<<" expr .
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 445 (expr)


State 812

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  446     | expr ">>" expr .
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 446 (expr)


State 813

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  458     | expr "<=" expr .
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 458 (expr)


State 814

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  459     | expr ">=" expr .
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 459 (expr)


State 815

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  456     | expr "==" expr .
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 456 (expr)


State 816

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  457     | expr "!=" expr .
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 457 (expr)


State 817

  403 expr_method_call: expr "->" "name" . '(' ')'
  404                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1018


State 818

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  485     | expr "??" expr .
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 485 (expr)


State 819

  526 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1019


State 820

  477 expr: expr "?." "name" .

    $default  reduce using rule 477 (expr)


State 821

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  475     | expr "?[" expr . ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1020


State 822

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  509     | expr "<|" expr .
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 509 (expr)


State 823

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  510     | expr "|>" expr .
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 510 (expr)


State 824

  429 expr_call: basic_type_declaration . '(' ')'
  430          | basic_type_declaration . '(' expr_list ')'
  511 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 672

    $default  reduce using rule 511 (expr)


State 825

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  447     | expr "<<<" expr .
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 447 (expr)


State 826

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  448     | expr ">>>" expr .
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 448 (expr)


State 827

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  463     | expr "&&" expr .
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 463 (expr)


State 828

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  464     | expr "||" expr .
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "^^"   shift, and go to state 656
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 464 (expr)


State 829

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  465     | expr "^^" expr .
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 465 (expr)


State 830

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  466     | expr ".." expr .
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    ".."  error (nonassociative)

    $default  reduce using rule 466 (expr)


State 831

  497 expr: expr '?' "as" . "name"
  500     | expr '?' "as" . "type" '<' $@38 type_declaration '>' $@39
  501     | expr '?' "as" . basic_type_declaration
  530 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1021
    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 446
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "$f"        shift, and go to state 1022
    "name"      shift, and go to state 1023

    basic_type_declaration  go to state 1024


State 832

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  486     | expr '?' expr . ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    ':'    shift, and go to state 1025
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670


State 833

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  461     | expr '|' expr .
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 461 (expr)


State 834

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  462     | expr '^' expr .
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 462 (expr)


State 835

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  460     | expr '&' expr .
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 460 (expr)


State 836

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  454     | expr '<' expr .
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 454 (expr)


State 837

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  455     | expr '>' expr .
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 455 (expr)


State 838

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  450     | expr '-' expr .
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 450 (expr)


State 839

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  449     | expr '+' expr .
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 449 (expr)


State 840

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  451     | expr '*' expr .
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 451 (expr)


State 841

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  452     | expr '/' expr .
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 452 (expr)


State 842

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  453     | expr '%' expr .
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 453 (expr)


State 843

  478 expr: expr '.' "?." . "name"
  528 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1026
    "name"  shift, and go to state 1027


State 844

  476 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1028
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 845

  525 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1029


State 846

  414 expr_field: expr '.' "name" .
  416           | expr '.' "name" . '(' ')'
  417           | expr '.' "name" . '(' expr_list ')'
  418           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1030

    $default  reduce using rule 414 (expr_field)


State 847

  415 expr_field: expr '.' '.' . "name"
  527 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1031
    "name"  shift, and go to state 1032


State 848

  474 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1033
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 849

  423 expr_field: expr '.' $@32 . error $@33

    error  shift, and go to state 1034


State 850

  419 expr_field: expr '.' basic_type_declaration . '(' ')'
  420           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1035


State 851

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  473     | expr '[' expr . ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1036


State 852

  429 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 429 (expr_call)


State 853

  356 expr_list: expr_list . ',' expr
  430 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1038


State 854

  768 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 767 ($@64)

    $@64  go to state 1039


State 855

  758 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 757 ($@58)

    $@58  go to state 1040


State 856

  708 bitfield_bits: "name" .

    $default  reduce using rule 708 (bitfield_bits)


State 857

  709 bitfield_bits: bitfield_bits . ';' "name"
  722 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@52 bitfield_bits . '>' $@53

    '>'  shift, and go to state 1041
    ';'  shift, and go to state 1042


State 858

  772 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 771 ($@66)

    $@66  go to state 1043


State 859

  775 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1044


State 860

  779 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 778 ($@70)

    $@70  go to state 1045


State 861

  782 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1046


State 862

  786 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' . $@74

    $default  reduce using rule 785 ($@74)

    $@74  go to state 1047


State 863

  789 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type . '>' $@76

    '>'  shift, and go to state 1048


State 864

  563 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1049


State 865

  792 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' . $@78

    $default  reduce using rule 791 ($@78)

    $@78  go to state 1050


State 866

  565 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 683
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    tuple_type                          go to state 1051
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 686


State 867

  569 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1052


State 868

  795 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' . $@80

    $default  reduce using rule 794 ($@80)

    $@80  go to state 1053


State 869

  571 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 687

    variant_type  go to state 1054


State 870

  302 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 1055
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 1056


State 871

  301 type_declaration_no_options_list: type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 301 (type_declaration_no_options_list)


State 872

  741 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 873

  729 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 729 (dim_list)


State 874

  711 bitfield_alias_bits: "name" .
  712                    | "name" . '=' expr

    '='  shift, and go to state 1057

    $default  reduce using rule 711 (bitfield_alias_bits)


State 875

  713 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  714                    | bitfield_alias_bits . commas "name" '=' expr
  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits . optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 728
    ','                shift, and go to state 729

    $default  reduce using rule 636 (optional_commas)

    COMMA            go to state 1058
    commas           go to state 1059
    optional_commas  go to state 1060


State 876

   84 semis: SEMICOLON .

    $default  reduce using rule 84 (semis)


State 877

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  568 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 229
    "array"                shift, and go to state 230
    "table"                shift, and go to state 231
    "typedecl"             shift, and go to state 232
    "iterator"             shift, and go to state 233
    "smart_ptr"            shift, and go to state 234
    "bool"                 shift, and go to state 235
    "void"                 shift, and go to state 236
    "string"               shift, and go to state 237
    "auto"                 shift, and go to state 238
    "int"                  shift, and go to state 239
    "int2"                 shift, and go to state 240
    "int3"                 shift, and go to state 241
    "int4"                 shift, and go to state 242
    "uint"                 shift, and go to state 243
    "bitfield"             shift, and go to state 244
    "uint2"                shift, and go to state 245
    "uint3"                shift, and go to state 246
    "uint4"                shift, and go to state 247
    "float"                shift, and go to state 248
    "float2"               shift, and go to state 249
    "float3"               shift, and go to state 250
    "float4"               shift, and go to state 251
    "range"                shift, and go to state 252
    "urange"               shift, and go to state 253
    "range64"              shift, and go to state 254
    "urange64"             shift, and go to state 255
    "block"                shift, and go to state 256
    "int64"                shift, and go to state 257
    "uint64"               shift, and go to state 258
    "double"               shift, and go to state 259
    "function"             shift, and go to state 260
    "lambda"               shift, and go to state 261
    "int8"                 shift, and go to state 262
    "uint8"                shift, and go to state 263
    "int16"                shift, and go to state 264
    "uint16"               shift, and go to state 265
    "tuple"                shift, and go to state 266
    "variant"              shift, and go to state 267
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 268
    "name"                 shift, and go to state 683
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 269
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON                           go to state 1061
    name_in_namespace                   go to state 270
    tuple_type                          go to state 1062
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 686


State 878

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 802 ($@84)

    $@84  go to state 1063


State 879

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  574 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 687
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON     go to state 1061
    variant_type  go to state 1064


State 880

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis . $@88 '}'

    $default  reduce using rule 807 ($@88)

    $@88  go to state 1065


State 881

  556 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 556 (function_argument_declaration_type)


State 882

  665 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1066
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 883

  666 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1067


State 884

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  668                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1068


State 885

  580 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  581                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1069


State 886

  578 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 578 (variable_declaration_no_type)


State 887

  579 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1070
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 888

  296 expressions: expressions error .

    $default  reduce using rule 296 (expressions)


State 889

  320 expression_return: "return" .
  321                  | "return" . expr
  322                  | "return" . "<-" expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 1071
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 320 (expression_return)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1072
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 890

  318 expression_break: "break" .

    $default  reduce using rule 318 (expression_break)


State 891

  325 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1073
    $@16              go to state 405


State 892

  306 expression_delete: "delete" . expr
  307                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "explicit"                        shift, and go to state 1074
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1075
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 893

  116 expression_with_alias: "typedef" . "name" '=' type_declaration

    "name"  shift, and go to state 1076


State 894

  115 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1077


State 895

  319 expression_continue: "continue" .

    $default  reduce using rule 319 (expression_continue)


State 896

  293 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1078


State 897

   63 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1079


State 898

   64 expression_goto: "goto" . "label" "integer constant"
   65                | "goto" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "label"                           shift, and go to state 1080
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1081
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 899

  110 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  513 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 594

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1082


State 900

  323 expression_yield: "yield" . expr
  324                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 1083
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1084
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 901

  275 expression_any: SEMICOLON .

    $default  reduce using rule 275 (expression_any)


State 902

  291 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1085


State 903

  292 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1086


State 904

  100 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1087


State 905

  288 expression_any: expression_if_then_else .

    $default  reduce using rule 288 (expression_any)


State 906

   99 expression_if_then_else: $@9 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1088
    "static_if"  shift, and go to state 1089

    if_or_static_if  go to state 1090


State 907

  289 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 289 (expression_any)


State 908

  283 expression_any: expression_for_loop .

    $default  reduce using rule 283 (expression_any)


State 909

  109 expression_for_loop: $@10 . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1091


State 910

  280 expression_any: expression_unsafe .

    $default  reduce using rule 280 (expression_any)


State 911

  279 expression_any: expression_while_loop .

    $default  reduce using rule 279 (expression_any)


State 912

  112 expression_while_loop: $@11 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1092


State 913

  281 expression_any: expression_with .

    $default  reduce using rule 281 (expression_any)


State 914

  114 expression_with: $@12 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1093


State 915

  282 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1094


State 916

  273 expression_block: $@16 '{' expressions $@17 . '}' expression_block_finally

    '}'  shift, and go to state 1095


State 917

  295 expressions: expressions expression_any .

    $default  reduce using rule 295 (expressions)


State 918

  277 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1096


State 919

   82 expression_if_one_liner: expression_break .
  284 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 82 (expression_if_one_liner)

    SEMICOLON  go to state 1097


State 920

   83 expression_if_one_liner: expression_continue .
  285 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 83 (expression_if_one_liner)

    SEMICOLON  go to state 1098


State 921

   80 expression_if_one_liner: expression_return .
  286 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1099


State 922

   81 expression_if_one_liner: expression_yield .
  287 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1100


State 923

  290 expression_any: expression_try_catch .

    $default  reduce using rule 290 (expression_any)


State 924

  337 expression_let: kwd_let . optional_in_scope let_variable_declaration
  338               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  339               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1101

    $default  reduce using rule 332 (optional_in_scope)

    optional_in_scope  go to state 1102


State 925

  278 expression_any: expression_let .

    $default  reduce using rule 278 (expression_any)


State 926

  276 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1103


State 927

   79 expression_if_one_liner: expr .
  382 expr_assign: expr .
  383            | expr . '=' expr
  384            | expr . "<-" expr
  385            | expr . ":=" expr
  386            | expr . "&=" expr
  387            | expr . "|=" expr
  388            | expr . "^=" expr
  389            | expr . "&&=" expr
  390            | expr . "||=" expr
  391            | expr . "^^=" expr
  392            | expr . "+=" expr
  393            | expr . "-=" expr
  394            | expr . "*=" expr
  395            | expr . "/=" expr
  396            | expr . "%=" expr
  397            | expr . "<<=" expr
  398            | expr . ">>=" expr
  399            | expr . "<<<=" expr
  400            | expr . ">>>=" expr
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 636
    "as"    shift, and go to state 637
    "+="    shift, and go to state 1104
    "-="    shift, and go to state 1105
    "/="    shift, and go to state 1106
    "*="    shift, and go to state 1107
    "%="    shift, and go to state 1108
    "&="    shift, and go to state 1109
    "|="    shift, and go to state 1110
    "^="    shift, and go to state 1111
    "<<"    shift, and go to state 638
    ">>"    shift, and go to state 639
    "++"    shift, and go to state 640
    "--"    shift, and go to state 641
    "<="    shift, and go to state 642
    "<<="   shift, and go to state 1112
    ">>="   shift, and go to state 1113
    ">="    shift, and go to state 643
    "=="    shift, and go to state 644
    "!="    shift, and go to state 645
    "->"    shift, and go to state 646
    "<-"    shift, and go to state 1114
    "??"    shift, and go to state 647
    "?."    shift, and go to state 648
    "?["    shift, and go to state 649
    "<|"    shift, and go to state 650
    "|>"    shift, and go to state 651
    ":="    shift, and go to state 1115
    "<<<"   shift, and go to state 652
    ">>>"   shift, and go to state 653
    "<<<="  shift, and go to state 1116
    ">>>="  shift, and go to state 1117
    "&&"    shift, and go to state 654
    "||"    shift, and go to state 655
    "^^"    shift, and go to state 656
    "&&="   shift, and go to state 1118
    "||="   shift, and go to state 1119
    "^^="   shift, and go to state 1120
    ".."    shift, and go to state 657
    '='     shift, and go to state 1121
    '?'     shift, and go to state 658
    '|'     shift, and go to state 659
    '^'     shift, and go to state 660
    '&'     shift, and go to state 661
    '<'     shift, and go to state 662
    '>'     shift, and go to state 663
    '-'     shift, and go to state 664
    '+'     shift, and go to state 665
    '*'     shift, and go to state 666
    '/'     shift, and go to state 667
    '%'     shift, and go to state 668
    '.'     shift, and go to state 669
    '['     shift, and go to state 670

    "if"      reduce using rule 79 (expression_if_one_liner)
    $default  reduce using rule 382 (expr_assign)


State 928

  617 enum_expression: "name" .
  618                | "name" . '=' expr

    '='  shift, and go to state 1122

    $default  reduce using rule 617 (enum_expression)


State 929

  622 enum_list: enum_expression .

    $default  reduce using rule 622 (enum_list)


State 930

  623 enum_list: enum_list . commas enum_expression
  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list . optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 728
    ','                shift, and go to state 729

    $default  reduce using rule 636 (optional_commas)

    COMMA            go to state 1058
    commas           go to state 1123
    optional_commas  go to state 1124


State 931

  547 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  549                                 | struct_variable_declaration_list . $@40 structure_variable_declaration SEMICOLON
  551                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  553                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block
  659 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1125
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1126

    "def"     reduce using rule 157 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 548 ($@40)

    optional_annotation_list_with_emit_semis  go to state 1127
    $@40                                      go to state 1128


State 932

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  590 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1129


State 933

  591 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 591 (let_variable_name_with_pos_list)


State 934

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  593                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1130

    $default  reduce using rule 592 (let_variable_name_with_pos_list)


State 935

  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  600                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 373
    "implicit"             shift, and go to state 374
    "explicit"             shift, and go to state 375
    "=="                   shift, and go to state 376
    "<-"                   shift, and go to state 566
    "??"                   shift, and go to state 377
    ":="                   shift, and go to state 567
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 568
    '?'                    shift, and go to state 378
    '&'                    shift, and go to state 379
    '-'                    shift, and go to state 380
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 381

    SEMICOLON              go to state 1131
    copy_or_move_or_clone  go to state 1132


State 936

  601 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1133
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 937

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  603 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 636
    "as"                   shift, and go to state 637
    "<<"                   shift, and go to state 638
    ">>"                   shift, and go to state 639
    "++"                   shift, and go to state 640
    "--"                   shift, and go to state 641
    "<="                   shift, and go to state 642
    ">="                   shift, and go to state 643
    "=="                   shift, and go to state 644
    "!="                   shift, and go to state 645
    "->"                   shift, and go to state 646
    "??"                   shift, and go to state 647
    "?."                   shift, and go to state 648
    "?["                   shift, and go to state 649
    "<|"                   shift, and go to state 650
    "|>"                   shift, and go to state 651
    "<<<"                  shift, and go to state 652
    ">>>"                  shift, and go to state 653
    "&&"                   shift, and go to state 654
    "||"                   shift, and go to state 655
    "^^"                   shift, and go to state 656
    ".."                   shift, and go to state 657
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 658
    '|'                    shift, and go to state 659
    '^'                    shift, and go to state 660
    '&'                    shift, and go to state 661
    '<'                    shift, and go to state 662
    '>'                    shift, and go to state 663
    '-'                    shift, and go to state 664
    '+'                    shift, and go to state 665
    '*'                    shift, and go to state 666
    '/'                    shift, and go to state 667
    '%'                    shift, and go to state 668
    '.'                    shift, and go to state 669
    '['                    shift, and go to state 670
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1134


State 938

  604 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 604 (global_let_variable_declaration)


State 939

  739 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 739 (type_declaration_no_options_no_dim)


State 940

  762 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 762 (type_declaration_no_options_no_dim)


State 941

  765 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62 .

    $default  reduce using rule 765 (type_declaration_no_options_no_dim)


State 942

  726 table_type_pair: type_declaration c_or_s type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 726 (table_type_pair)


State 943

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1135
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 944

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1136
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 945

  310 new_type_declaration: '<' $@18 type_declaration . '>' $@19
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 1137


State 946

  316 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  837 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002

    $default  reduce using rule 837 (use_initializer)

    make_struct_fields  go to state 624
    make_struct_single  go to state 1138


State 947

  314 expr_new: "new" new_type_declaration '(' expr_list . ')'
  356 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1139


State 948

  315 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1140


State 949

  313 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1141


State 950

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  354               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 1142
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 1143


State 951

  352 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1144


State 952

  351 expr_type_decl: "type" '<' $@26 type_declaration . '>' $@27
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 1145


State 953

  859 make_dim_decl: "array" "struct" '<' $@103 . type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1146
    type_declaration_no_options_no_dim  go to state 276


State 954

  862 make_dim_decl: "array" "tuple" '<' $@105 . tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 683
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    tuple_type                          go to state 684
    tuple_type_list                     go to state 1147
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 686


State 955

  865 make_dim_decl: "array" "variant" '<' $@107 . variant_type_list '>' $@108 '(' make_variant_dim ')'

    "name"  shift, and go to state 687

    variant_type       go to state 688
    variant_type_list  go to state 1148


State 956

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  869 make_dim_decl: "array" '<' $@109 type_declaration_no_options . '>' $@110 '(' optional_expr_list ')'

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1149
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 957

  866 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1150


State 958

  879 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1151


State 959

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1152
    type_declaration_no_options_no_dim  go to state 276


State 960

  850 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1153
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 961

  875 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  884 optional_comma: ',' .

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 884 (optional_comma)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 746
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_map_tuple          go to state 1154
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 962

  878 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1155


State 963

  482 expr: "deref" '(' expr ')' .

    $default  reduce using rule 482 (expr)


State 964

  342 expr_cast: "cast" '<' $@20 type_declaration_no_options . '>' $@21 expr
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1156
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 965

  345 expr_cast: "upcast" '<' $@22 type_declaration_no_options . '>' $@23 expr
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1157
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 966

  483 expr: "addr" '(' expr ')' .

    $default  reduce using rule 483 (expr)


State 967

  348 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options . '>' $@25 expr
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1158
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 968

  513 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 513 (expr)


State 969

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options . '>' $@112 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1159
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 970

  870 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1160


State 971

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  849 make_struct_decl: "default" '<' $@99 type_declaration_no_options . '>' $@100 use_initializer

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1161
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 972

  565 tuple_type_list: tuple_type_list . c_or_s tuple_type
  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 1162
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 866


State 973

  852 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1163


State 974

  571 variant_type_list: variant_type_list . c_or_s variant_type
  846 make_struct_decl: "variant" '<' $@97 variant_type_list . '>' $@98 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 1164
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 869


State 975

  514 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  515               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  516               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 798

    $default  reduce using rule 370 (optional_capture_list)

    optional_capture_list  go to state 1165


State 976

  517 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 977

  518 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 978

  519 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 979

  520 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 980

  521 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 521 (expr_mtag)


State 981

  523 expr_mtag: "$c" '(' expr ')' . '(' ')'
  524          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1166


State 982

   42 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    ':'    shift, and go to state 1167
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 37 (optional_format_string)

    optional_format_string  go to state 1168


State 983

  102 for_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1169


State 984

  101 for_variable_name_with_pos_list: "name" .
  103                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1170

    $default  reduce using rule 101 (for_variable_name_with_pos_list)


State 985

  104 for_variable_name_with_pos_list: '(' . tuple_expansion ')'

    "name"  shift, and go to state 1171

    tuple_expansion  go to state 1172


State 986

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1173
    ','   shift, and go to state 1174


State 987

  886 array_comprehension: '[' "iterator" "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 983
    "name"  shift, and go to state 984
    '('     shift, and go to state 985

    for_variable_name_with_pos_list  go to state 1175


State 988

  356 expr_list: expr_list ',' expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 356 (expr_list)


State 989

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  823 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  824                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1176


State 990

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  820 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 820 (make_struct_fields)


State 991

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  819 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 819 (make_struct_fields)


State 992

  471 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 471 (expr)


State 993

  825 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  826                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1177


State 994

  821 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  822                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 777
    ":="  shift, and go to state 1178
    '='   shift, and go to state 779

    copy_or_move  go to state 1179


State 995

  406 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1180
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 996

  532 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1181
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 997

  410 func_addr_expr: '@' '@' '<' $@28 . type_declaration_no_options '>' $@29 func_addr_name

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1182
    type_declaration_no_options_no_dim  go to state 276


State 998

  413 func_addr_expr: '@' '@' '<' $@30 . optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    '('  shift, and go to state 341

    $default  reduce using rule 159 (optional_function_argument_list)

    optional_function_argument_list  go to state 1183


State 999

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1184
    ','   shift, and go to state 1174


State 1000

  877 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1185


State 1001

  300 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  875 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 961

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1186


State 1002

  819 make_struct_fields: "name" . copy_or_move expr
  820                   | "name" . ":=" expr

    "<-"  shift, and go to state 777
    ":="  shift, and go to state 778
    '='   shift, and go to state 779

    copy_or_move  go to state 780


State 1003

  425 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 425 (expr_call)


State 1004

  427 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1187


State 1005

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1188
    ']'  shift, and go to state 1189


State 1006

  356 expr_list: expr_list ',' . expr
  402 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 1190
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 988
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1007

  428 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 428 (expr_call)


State 1008

  426 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 426 (expr_call)


State 1009

  156 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 156 (optional_annotation_list)


State 1010

  371 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1191
    ":="    shift, and go to state 1192
    "name"  shift, and go to state 1193
    '='     shift, and go to state 1194
    '&'     shift, and go to state 1195

    capture_entry  go to state 1196
    capture_list   go to state 1197


State 1011

  372 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 402

    $default  reduce using rule 162 (optional_function_type)

    optional_function_type  go to state 1198


State 1012

  374 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 374 (expr_full_block_assumed_piped)


State 1013

  373 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 341

    $default  reduce using rule 159 (optional_function_argument_list)

    optional_function_argument_list  go to state 1199


State 1014

  489 expr: expr "is" "type" '<' . $@34 type_declaration_no_options '>' $@35

    $default  reduce using rule 487 ($@34)

    $@34  go to state 1200


State 1015

  531 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1201
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1016

  495 expr: expr "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 493 ($@36)

    $@36  go to state 1202


State 1017

  529 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1203
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1018

  403 expr_method_call: expr "->" "name" '(' . ')'
  404                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    ')'                               shift, and go to state 1204
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1205
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1019

  526 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1206
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1020

  475 expr: expr "?[" expr ']' .

    $default  reduce using rule 475 (expr)


State 1021

  500 expr: expr '?' "as" "type" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 1207


State 1022

  530 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1208


State 1023

  497 expr: expr '?' "as" "name" .

    $default  reduce using rule 497 (expr)


State 1024

  501 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 501 (expr)


State 1025

  486 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1209
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1026

  528 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1210


State 1027

  478 expr: expr '.' "?." "name" .

    $default  reduce using rule 478 (expr)


State 1028

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  476     | expr '.' "?[" expr . ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1211


State 1029

  525 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1212
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1030

  416 expr_field: expr '.' "name" '(' . ')'
  417           | expr '.' "name" '(' . expr_list ')'
  418           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 1213
    '('                               shift, and go to state 473
    ')'                               shift, and go to state 1214
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1215
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1031

  527 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1216


State 1032

  415 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 415 (expr_field)


State 1033

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  474     | expr '.' '[' expr . ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1217


State 1034

  423 expr_field: expr '.' $@32 error . $@33

    $default  reduce using rule 422 ($@33)

    $@33  go to state 1218


State 1035

  419 expr_field: expr '.' basic_type_declaration '(' . ')'
  420           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    ')'                               shift, and go to state 1219
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1220
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1036

  473 expr: expr '[' expr ']' .

    $default  reduce using rule 473 (expr)


State 1037

  356 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 988
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1038

  430 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 430 (expr_call)


State 1039

  768 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 768 (type_declaration_no_options_no_dim)


State 1040

  758 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 758 (type_declaration_no_options_no_dim)


State 1041

  722 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@52 bitfield_bits '>' . $@53

    $default  reduce using rule 721 ($@53)

    $@53  go to state 1221


State 1042

  709 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1222


State 1043

  772 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 772 (type_declaration_no_options_no_dim)


State 1044

  775 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 774 ($@68)

    $@68  go to state 1223


State 1045

  779 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 779 (type_declaration_no_options_no_dim)


State 1046

  782 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 781 ($@72)

    $@72  go to state 1224


State 1047

  786 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74 .

    $default  reduce using rule 786 (type_declaration_no_options_no_dim)


State 1048

  789 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' . $@76

    $default  reduce using rule 788 ($@76)

    $@76  go to state 1225


State 1049

  563 tuple_type: "name" ':' type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 563 (tuple_type)


State 1050

  792 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78 .

    $default  reduce using rule 792 (type_declaration_no_options_no_dim)


State 1051

  565 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 565 (tuple_type_list)


State 1052

  569 variant_type: "name" ':' type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 569 (variant_type)


State 1053

  795 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80 .

    $default  reduce using rule 795 (type_declaration_no_options_no_dim)


State 1054

  571 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 571 (variant_type_list)


State 1055

  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1226


State 1056

  302 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1227


State 1057

  712 bitfield_alias_bits: "name" '=' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1228
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1058

  619 commas: COMMA .

    $default  reduce using rule 619 (commas)


State 1059

  620 commas: commas . COMMA
  637 optional_commas: commas .
  713 bitfield_alias_bits: bitfield_alias_bits commas . "name"
  714                    | bitfield_alias_bits commas . "name" '=' expr

    "name"             shift, and go to state 1229
    "new line, comma"  shift, and go to state 728
    ','                shift, and go to state 729

    $default  reduce using rule 637 (optional_commas)

    COMMA  go to state 1230


State 1060

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas . $@92 '}'

    $default  reduce using rule 812 ($@92)

    $@92  go to state 1231


State 1061

   85 semis: semis SEMICOLON .

    $default  reduce using rule 85 (semis)


State 1062

  568 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 568 (tuple_alias_type_list)


State 1063

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1232


State 1064

  574 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 574 (variant_alias_type_list)


State 1065

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 . '}'

    '}'  shift, and go to state 1233


State 1066

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  665 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1234


State 1067

  666 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 666 (variable_name_with_pos_list)


State 1068

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  668                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1235

    $default  reduce using rule 667 (variable_name_with_pos_list)


State 1069

  580 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  581                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 777
    '='   shift, and go to state 779
    '|'   shift, and go to state 384

    $default  reduce using rule 580 (variable_declaration_type)

    copy_or_move  go to state 1236


State 1070

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  579 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 579 (variable_declaration_no_type)


State 1071

  322 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1237
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1072

  321 expression_return: "return" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 321 (expression_return)


State 1073

  325 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1238


State 1074

  307 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1239
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1075

  306 expression_delete: "delete" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 306 (expression_delete)


State 1076

  116 expression_with_alias: "typedef" "name" . '=' type_declaration

    '='  shift, and go to state 1240


State 1077

  115 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1241


State 1078

  293 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 293 (expression_any)


State 1079

   63 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1242


State 1080

   64 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1243


State 1081

   65 expression_goto: "goto" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 65 (expression_goto)


State 1082

  110 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1244
    $@16              go to state 405


State 1083

  324 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1245
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1084

  323 expression_yield: "yield" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 323 (expression_yield)


State 1085

  291 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 291 (expression_any)


State 1086

  292 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 292 (expression_any)


State 1087

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1246


State 1088

   75 if_or_static_if: "if" .

    $default  reduce using rule 75 (if_or_static_if)


State 1089

   76 if_or_static_if: "static_if" .

    $default  reduce using rule 76 (if_or_static_if)


State 1090

   99 expression_if_then_else: $@9 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1247


State 1091

  109 expression_for_loop: $@10 "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1248


State 1092

  112 expression_while_loop: $@11 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1249


State 1093

  114 expression_with: $@12 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1250


State 1094

  282 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 282 (expression_any)


State 1095

  273 expression_block: $@16 '{' expressions $@17 '}' . expression_block_finally

    "finally"  shift, and go to state 1251

    $default  reduce using rule 267 (expression_block_finally)

    expression_block_finally  go to state 1252


State 1096

  277 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 277 (expression_any)


State 1097

  284 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 284 (expression_any)


State 1098

  285 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 285 (expression_any)


State 1099

  286 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 286 (expression_any)


State 1100

  287 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 287 (expression_any)


State 1101

  331 optional_in_scope: "inscope" .

    $default  reduce using rule 331 (optional_in_scope)


State 1102

  337 expression_let: kwd_let optional_in_scope . let_variable_declaration
  338               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  339               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 559
    "name"  shift, and go to state 560
    '('     shift, and go to state 1253
    '{'     shift, and go to state 1254

    tuple_expansion_variable_declaration  go to state 1255
    let_variable_name_with_pos_list       go to state 561
    let_variable_declaration              go to state 1256


State 1103

  276 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 276 (expression_any)


State 1104

  392 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1257
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1105

  393 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1258
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1106

  395 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1259
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1107

  394 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1260
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1108

  396 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1261
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1109

  386 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1262
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1110

  387 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1263
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1111

  388 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1264
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1112

  397 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1265
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1113

  398 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1266
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1114

  384 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1267
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1115

  385 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1268
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1116

  399 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1269
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1117

  400 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1270
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1118

  389 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1271
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1119

  390 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1272
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1120

  391 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1273
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1121

  383 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1274
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1122

  618 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1275
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1123

  620 commas: commas . COMMA
  623 enum_list: enum_list commas . enum_expression
  637 optional_commas: commas .

    "name"             shift, and go to state 928
    "new line, comma"  shift, and go to state 728
    ','                shift, and go to state 729

    $default  reduce using rule 637 (optional_commas)

    COMMA            go to state 1230
    enum_expression  go to state 1276


State 1124

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas . $@48 '}'

    $default  reduce using rule 644 ($@48)

    $@48  go to state 1277


State 1125

  547 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 547 (struct_variable_declaration_list)


State 1126

  659 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 659 (optional_struct_variable_declaration_list)


State 1127

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  553                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1278


State 1128

  549 struct_variable_declaration_list: struct_variable_declaration_list $@40 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 221

    $default  reduce using rule 533 (optional_field_annotation)

    metadata_argument_list          go to state 222
    optional_field_annotation       go to state 1279
    structure_variable_declaration  go to state 1280


State 1129

  590 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 590 (let_variable_name_with_pos_list)


State 1130

  593 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1281


State 1131

  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 599 (let_variable_declaration)


State 1132

  600 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1282
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1133

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  601 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 636
    "as"                   shift, and go to state 637
    "<<"                   shift, and go to state 638
    ">>"                   shift, and go to state 639
    "++"                   shift, and go to state 640
    "--"                   shift, and go to state 641
    "<="                   shift, and go to state 642
    ">="                   shift, and go to state 643
    "=="                   shift, and go to state 644
    "!="                   shift, and go to state 645
    "->"                   shift, and go to state 646
    "??"                   shift, and go to state 647
    "?."                   shift, and go to state 648
    "?["                   shift, and go to state 649
    "<|"                   shift, and go to state 650
    "|>"                   shift, and go to state 651
    "<<<"                  shift, and go to state 652
    ">>>"                  shift, and go to state 653
    "&&"                   shift, and go to state 654
    "||"                   shift, and go to state 655
    "^^"                   shift, and go to state 656
    ".."                   shift, and go to state 657
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 658
    '|'                    shift, and go to state 659
    '^'                    shift, and go to state 660
    '&'                    shift, and go to state 661
    '<'                    shift, and go to state 662
    '>'                    shift, and go to state 663
    '-'                    shift, and go to state 664
    '+'                    shift, and go to state 665
    '*'                    shift, and go to state 666
    '/'                    shift, and go to state 667
    '%'                    shift, and go to state 668
    '.'                    shift, and go to state 669
    '['                    shift, and go to state 670
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1283


State 1134

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 603 (global_let_variable_declaration)


State 1135

  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 839 ($@94)

    $@94  go to state 1284


State 1136

  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 842 ($@96)

    $@96  go to state 1285


State 1137

  310 new_type_declaration: '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 309 ($@19)

    $@19  go to state 1286


State 1138

  316 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1287


State 1139

  314 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 314 (expr_new)


State 1140

  315 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 315 (expr_new)


State 1141

  313 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 313 (expr_new)


State 1142

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1288


State 1143

  354 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1289


State 1144

  352 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 352 (expr_type_info)


State 1145

  351 expr_type_decl: "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 350 ($@27)

    $@27  go to state 1290


State 1146

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1291
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 1147

  565 tuple_type_list: tuple_type_list . c_or_s tuple_type
  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list . '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 1292
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 866


State 1148

  571 variant_type_list: variant_type_list . c_or_s variant_type
  865 make_dim_decl: "array" "variant" '<' $@107 variant_type_list . '>' $@108 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 728
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 729
    '>'                    shift, and go to state 1293
    ';'                    shift, and go to state 16

    COMMA      go to state 730
    SEMICOLON  go to state 731
    c_or_s     go to state 869


State 1149

  869 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' . $@110 '(' optional_expr_list ')'

    $default  reduce using rule 868 ($@110)

    $@110  go to state 1294


State 1150

  866 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 866 (make_dim_decl)


State 1151

  879 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 299 (optional_expr_map_tuple_list)

    string_builder                go to state 477
    expr_reader                   go to state 478
    expr_call_pipe                go to state 479
    optional_expr_map_tuple_list  go to state 1295
    name_in_namespace             go to state 480
    expr_new                      go to state 481
    expr_cast                     go to state 482
    expr_type_decl                go to state 483
    expr_type_info                go to state 484
    block_or_lambda               go to state 485
    expr_full_block               go to state 486
    expr_numeric_const            go to state 487
    expr_named_call               go to state 488
    expr_method_call              go to state 489
    func_addr_expr                go to state 490
    expr_field                    go to state 491
    expr_call                     go to state 492
    expr                          go to state 746
    expr_generator                go to state 494
    expr_mtag                     go to state 495
    basic_type_declaration        go to state 496
    make_decl                     go to state 497
    make_struct_decl              go to state 498
    make_map_tuple                go to state 747
    make_tuple_call               go to state 499
    make_dim_decl                 go to state 500
    expr_map_tuple_list           go to state 1001
    make_table_decl               go to state 501
    array_comprehension           go to state 502


State 1152

  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"
  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1296
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 1153

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  850 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 850 (make_map_tuple)


State 1154

  875 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 875 (expr_map_tuple_list)


State 1155

  878 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 878 (make_table_decl)


State 1156

  342 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 341 ($@21)

    $@21  go to state 1297


State 1157

  345 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' . $@23 expr

    $default  reduce using rule 344 ($@23)

    $@23  go to state 1298


State 1158

  348 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' . $@25 expr

    $default  reduce using rule 347 ($@25)

    $@25  go to state 1299


State 1159

  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' . $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 872 ($@112)

    $@112  go to state 1300


State 1160

  870 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 870 (make_dim_decl)


State 1161

  849 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' . $@100 use_initializer

    $default  reduce using rule 848 ($@100)

    $@100  go to state 1301


State 1162

  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 854 ($@102)

    $@102  go to state 1302


State 1163

  852 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 852 (make_tuple_call)


State 1164

  846 make_struct_decl: "variant" '<' $@97 variant_type_list '>' . $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 845 ($@98)

    $@98  go to state 1303


State 1165

  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  515               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  516               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1304

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1305


State 1166

  523 expr_mtag: "$c" '(' expr ')' '(' . ')'
  524          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    ')'                               shift, and go to state 1306
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1307
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1167

   39 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 38 ($@1)

    $@1  go to state 1308


State 1168

   42 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1309


State 1169

  102 for_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1310
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1170

  103 for_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1311


State 1171

  333 tuple_expansion: "name" .

    $default  reduce using rule 333 (tuple_expansion)


State 1172

  104 for_variable_name_with_pos_list: '(' tuple_expansion . ')'
  334 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1312
    ')'  shift, and go to state 1313


State 1173

  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1314
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1174

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' . "name"
  106                                | for_variable_name_with_pos_list ',' . "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' . '(' tuple_expansion ')'

    "name"  shift, and go to state 1315
    '('     shift, and go to state 1316


State 1175

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1317
    ','   shift, and go to state 1174


State 1176

  823 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  824                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 777
    ":="  shift, and go to state 1318
    '='   shift, and go to state 779

    copy_or_move  go to state 1319


State 1177

  825 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  826                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1320
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1178

  822 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1321
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1179

  821 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1322
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1180

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  406 func_addr_name: "$i" '(' expr . ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1323


State 1181

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  532          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1324


State 1182

  410 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options . '>' $@29 func_addr_name
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1325
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 1183

  413 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list . optional_function_type '>' $@31 func_addr_name

    ':'  shift, and go to state 402

    $default  reduce using rule 162 (optional_function_type)

    optional_function_type  go to state 1326


State 1184

  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1327
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1185

  877 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 877 (make_table_decl)


State 1186

  300 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 300 (optional_expr_map_tuple_list)


State 1187

  427 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 427 (expr_call)


State 1188

  821 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  822                   | make_struct_fields ',' . "name" ":=" expr
  825                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 993
    "name"  shift, and go to state 994


State 1189

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1328


State 1190

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  856 make_dim_decl: '[' . optional_expr_list ']'
  885 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "for"                             shift, and go to state 616
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "iterator"                        shift, and go to state 617
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "$f"                              shift, and go to state 621
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 622
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 297 (optional_expr_list)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    optional_expr_list      go to state 618
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 619
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_fields      go to state 1329
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1191

  365 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1330


State 1192

  366 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1331


State 1193

  367 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1332


State 1194

  364 capture_entry: '=' . "name"

    "name"  shift, and go to state 1333


State 1195

  363 capture_entry: '&' . "name"

    "name"  shift, and go to state 1334


State 1196

  368 capture_list: capture_entry .

    $default  reduce using rule 368 (capture_list)


State 1197

  369 capture_list: capture_list . ',' capture_entry
  371 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1335
    ')'  shift, and go to state 1336


State 1198

  372 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1337


State 1199

  373 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 402

    $default  reduce using rule 162 (optional_function_type)

    optional_function_type  go to state 1338


State 1200

  489 expr: expr "is" "type" '<' $@34 . type_declaration_no_options '>' $@35

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1339
    type_declaration_no_options_no_dim  go to state 276


State 1201

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  531          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1340


State 1202

  495 expr: expr "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1341


State 1203

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  529          | expr "as" "$f" '(' expr . ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1342


State 1204

  403 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 403 (expr_method_call)


State 1205

  356 expr_list: expr_list . ',' expr
  404 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1343


State 1206

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  526          | expr "?." "$f" '(' expr . ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1344


State 1207

  500 expr: expr '?' "as" "type" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 498 ($@38)

    $@38  go to state 1345


State 1208

  530 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1346
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1209

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  486     | expr '?' expr ':' expr .
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 486 (expr)


State 1210

  528 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1347
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1211

  476 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 476 (expr)


State 1212

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr '.' "$f" '(' expr . ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1348


State 1213

  418 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  856 make_dim_decl: '[' . optional_expr_list ']'
  885 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "for"                             shift, and go to state 616
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "iterator"                        shift, and go to state 617
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "$f"                              shift, and go to state 621
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 622
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 297 (optional_expr_list)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    optional_expr_list      go to state 618
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 619
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_fields      go to state 1349
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1214

  416 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 416 (expr_field)


State 1215

  356 expr_list: expr_list . ',' expr
  417 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1350


State 1216

  527 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1351
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1217

  474 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 474 (expr)


State 1218

  423 expr_field: expr '.' $@32 error $@33 .

    $default  reduce using rule 423 (expr_field)


State 1219

  419 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 419 (expr_field)


State 1220

  356 expr_list: expr_list . ',' expr
  420 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1352


State 1221

  722 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@52 bitfield_bits '>' $@53 .

    $default  reduce using rule 722 (bitfield_type_declaration)


State 1222

  709 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 709 (bitfield_bits)


State 1223

  775 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 775 (type_declaration_no_options_no_dim)


State 1224

  782 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 782 (type_declaration_no_options_no_dim)


State 1225

  789 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76 .

    $default  reduce using rule 789 (type_declaration_no_options_no_dim)


State 1226

  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 297 (optional_expr_list)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    optional_expr_list      go to state 1353
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 619
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1227

  302 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 302 (type_declaration_no_options_list)


State 1228

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  712 bitfield_alias_bits: "name" '=' expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 712 (bitfield_alias_bits)


State 1229

  713 bitfield_alias_bits: bitfield_alias_bits commas "name" .
  714                    | bitfield_alias_bits commas "name" . '=' expr

    '='  shift, and go to state 1354

    $default  reduce using rule 713 (bitfield_alias_bits)


State 1230

  620 commas: commas COMMA .

    $default  reduce using rule 620 (commas)


State 1231

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 . '}'

    '}'  shift, and go to state 1355


State 1232

  803 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 803 (tuple_alias_declaration)


State 1233

  808 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}' .

    $default  reduce using rule 808 (variant_alias_declaration)


State 1234

  665 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 665 (variable_name_with_pos_list)


State 1235

  668 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1356


State 1236

  581 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1357
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1237

  322 expression_return: "return" "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 322 (expression_return)


State 1238

  325 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1358
    $@16              go to state 405


State 1239

  307 expression_delete: "delete" "explicit" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 307 (expression_delete)


State 1240

  116 expression_with_alias: "typedef" "name" '=' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1359


State 1241

  115 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1360
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1242

   63 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 63 (expression_label)


State 1243

   64 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 64 (expression_goto)


State 1244

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 110 (expression_unsafe)


State 1245

  324 expression_yield: "yield" "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 324 (expression_yield)


State 1246

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1361
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1247

   99 expression_if_then_else: $@9 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1362
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1248

  109 expression_for_loop: $@10 "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 983
    "name"  shift, and go to state 984
    '('     shift, and go to state 985

    for_variable_name_with_pos_list  go to state 1363


State 1249

  112 expression_while_loop: $@11 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1364
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1250

  114 expression_with: $@12 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1365
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1251

  270 expression_block_finally: "finally" . $@14 '{' expressions $@15 '}'

    $default  reduce using rule 268 ($@14)

    $@14  go to state 1366


State 1252

  273 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally .

    $default  reduce using rule 273 (expression_block)


State 1253

  335 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  336                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1171

    tuple_expansion  go to state 1367


State 1254

  339 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 596 (variable_declaration_list)

    variable_declaration_list  go to state 1368


State 1255

  338 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 338 (expression_let)


State 1256

  337 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 337 (expression_let)


State 1257

  392 expr_assign: expr "+=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 392 (expr_assign)


State 1258

  393 expr_assign: expr "-=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 393 (expr_assign)


State 1259

  395 expr_assign: expr "/=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 395 (expr_assign)


State 1260

  394 expr_assign: expr "*=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 394 (expr_assign)


State 1261

  396 expr_assign: expr "%=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 396 (expr_assign)


State 1262

  386 expr_assign: expr "&=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 386 (expr_assign)


State 1263

  387 expr_assign: expr "|=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 387 (expr_assign)


State 1264

  388 expr_assign: expr "^=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 388 (expr_assign)


State 1265

  397 expr_assign: expr "<<=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 397 (expr_assign)


State 1266

  398 expr_assign: expr ">>=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 398 (expr_assign)


State 1267

  384 expr_assign: expr "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 384 (expr_assign)


State 1268

  385 expr_assign: expr ":=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 385 (expr_assign)


State 1269

  399 expr_assign: expr "<<<=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 399 (expr_assign)


State 1270

  400 expr_assign: expr ">>>=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 400 (expr_assign)


State 1271

  389 expr_assign: expr "&&=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 389 (expr_assign)


State 1272

  390 expr_assign: expr "||=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 390 (expr_assign)


State 1273

  391 expr_assign: expr "^^=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 391 (expr_assign)


State 1274

  383 expr_assign: expr '=' expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 383 (expr_assign)


State 1275

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  618 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 618 (enum_expression)


State 1276

  623 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 623 (enum_list)


State 1277

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 . '}'

    '}'  shift, and go to state 1369


State 1278

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  553                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1370
    "private"  shift, and go to state 1371

    $default  reduce using rule 540 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1372


State 1279

  545 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1373

    $default  reduce using rule 543 (optional_static_member_variable)

    optional_static_member_variable  go to state 1374


State 1280

  549 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1375


State 1281

  593 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 593 (let_variable_name_with_pos_list)


State 1282

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  600 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 636
    "as"                   shift, and go to state 637
    "<<"                   shift, and go to state 638
    ">>"                   shift, and go to state 639
    "++"                   shift, and go to state 640
    "--"                   shift, and go to state 641
    "<="                   shift, and go to state 642
    ">="                   shift, and go to state 643
    "=="                   shift, and go to state 644
    "!="                   shift, and go to state 645
    "->"                   shift, and go to state 646
    "??"                   shift, and go to state 647
    "?."                   shift, and go to state 648
    "?["                   shift, and go to state 649
    "<|"                   shift, and go to state 650
    "|>"                   shift, and go to state 651
    "<<<"                  shift, and go to state 652
    ">>>"                  shift, and go to state 653
    "&&"                   shift, and go to state 654
    "||"                   shift, and go to state 655
    "^^"                   shift, and go to state 656
    ".."                   shift, and go to state 657
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 658
    '|'                    shift, and go to state 659
    '^'                    shift, and go to state 660
    '&'                    shift, and go to state 661
    '<'                    shift, and go to state 662
    '>'                    shift, and go to state 663
    '-'                    shift, and go to state 664
    '+'                    shift, and go to state 665
    '*'                    shift, and go to state 666
    '/'                    shift, and go to state 667
    '%'                    shift, and go to state 668
    '.'                    shift, and go to state 669
    '['                    shift, and go to state 670
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1376


State 1283

  601 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 601 (let_variable_declaration)


State 1284

  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1377


State 1285

  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1378


State 1286

  310 new_type_declaration: '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 310 (new_type_declaration)


State 1287

  316 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 316 (expr_new)


State 1288

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1379
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1289

  354 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1380


State 1290

  351 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 351 (expr_type_decl)


State 1291

  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 858 ($@104)

    $@104  go to state 1381


State 1292

  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' . $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 861 ($@106)

    $@106  go to state 1382


State 1293

  865 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' . $@108 '(' make_variant_dim ')'

    $default  reduce using rule 864 ($@108)

    $@108  go to state 1383


State 1294

  869 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 . '(' optional_expr_list ')'

    '('  shift, and go to state 1384


State 1295

  879 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1385


State 1296

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1386


State 1297

  342 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1387
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1298

  345 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1388
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1299

  348 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1389
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1300

  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1390


State 1301

  849 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 . use_initializer

    "uninitialized"  shift, and go to state 1391

    $default  reduce using rule 836 (use_initializer)

    use_initializer  go to state 1392


State 1302

  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1393


State 1303

  846 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1394


State 1304

  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  515               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    ')'                               shift, and go to state 1395
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1396
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1305

  516 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1397
    $@16              go to state 405


State 1306

  523 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1307

  356 expr_list: expr_list . ',' expr
  524 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1398


State 1308

   39 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 35 (format_string)

    format_string  go to state 1399


State 1309

   42 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 42 (string_builder_body)


State 1310

  102 for_variable_name_with_pos_list: "$i" '(' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1400


State 1311

  103 for_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 103 (for_variable_name_with_pos_list)


State 1312

  334 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1401


State 1313

  104 for_variable_name_with_pos_list: '(' tuple_expansion ')' .

    $default  reduce using rule 104 (for_variable_name_with_pos_list)


State 1314

  356 expr_list: expr_list . ',' expr
  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1402


State 1315

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" .
  106                                | for_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1403

    $default  reduce using rule 105 (for_variable_name_with_pos_list)


State 1316

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' . tuple_expansion ')'

    "name"  shift, and go to state 1171

    tuple_expansion  go to state 1404


State 1317

  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1405
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1318

  824 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1406
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1319

  823 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1407
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1320

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  825 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  826                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1408


State 1321

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  822 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 822 (make_struct_fields)


State 1322

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  821 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 821 (make_struct_fields)


State 1323

  406 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 406 (func_addr_name)


State 1324

  532 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 532 (expr_mtag)


State 1325

  410 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' . $@29 func_addr_name

    $default  reduce using rule 409 ($@29)

    $@29  go to state 1409


State 1326

  413 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type . '>' $@31 func_addr_name

    '>'  shift, and go to state 1410


State 1327

  356 expr_list: expr_list . ',' expr
  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1411


State 1328

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 401 (expr_named_call)


State 1329

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1188
    ']'  shift, and go to state 1412


State 1330

  365 capture_entry: "<-" "name" .

    $default  reduce using rule 365 (capture_entry)


State 1331

  366 capture_entry: ":=" "name" .

    $default  reduce using rule 366 (capture_entry)


State 1332

  367 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1413


State 1333

  364 capture_entry: '=' "name" .

    $default  reduce using rule 364 (capture_entry)


State 1334

  363 capture_entry: '&' "name" .

    $default  reduce using rule 363 (capture_entry)


State 1335

  369 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1191
    ":="    shift, and go to state 1192
    "name"  shift, and go to state 1193
    '='     shift, and go to state 1194
    '&'     shift, and go to state 1195

    capture_entry  go to state 1414


State 1336

  371 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 371 (optional_capture_list)


State 1337

  372 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1415

    $default  reduce using rule 271 ($@16)

    expression_block       go to state 1416
    $@16                   go to state 405
    block_or_simple_block  go to state 1417


State 1338

  373 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1418


State 1339

  489 expr: expr "is" "type" '<' $@34 type_declaration_no_options . '>' $@35
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "??"        shift, and go to state 377
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '>'         shift, and go to state 1419
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381


State 1340

  531 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 531 (expr_mtag)


State 1341

  495 expr: expr "as" "type" '<' $@36 type_declaration . '>' $@37
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 1420


State 1342

  529 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1343

  404 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 404 (expr_method_call)


State 1344

  526 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1345

  500 expr: expr '?' "as" "type" '<' $@38 . type_declaration '>' $@39

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1421


State 1346

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr '?' "as" "$f" '(' expr . ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1422


State 1347

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr '.' "?." "$f" '(' expr . ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1423


State 1348

  525 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 525 (expr_mtag)


State 1349

  418 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1188
    ']'  shift, and go to state 1424


State 1350

  417 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 417 (expr_field)


State 1351

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr '.' '.' "$f" '(' expr . ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1425


State 1352

  420 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 420 (expr_field)


State 1353

  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1426


State 1354

  714 bitfield_alias_bits: bitfield_alias_bits commas "name" '=' . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1427
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1355

  813 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" bitfield_basic_type_declaration optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}' .

    $default  reduce using rule 813 (bitfield_alias_declaration)


State 1356

  668 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 668 (variable_name_with_pos_list)


State 1357

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  581 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 581 (variable_declaration_type)


State 1358

  325 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 325 (expression_try_catch)


State 1359

  116 expression_with_alias: "typedef" "name" '=' type_declaration .
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384

    $default  reduce using rule 116 (expression_with_alias)


State 1360

  115 expression_with_alias: "assume" "name" '=' expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 115 (expression_with_alias)


State 1361

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1428


State 1362

   99 expression_if_then_else: $@9 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1429


State 1363

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block

    "in"  shift, and go to state 1430
    ','   shift, and go to state 1174


State 1364

  112 expression_while_loop: $@11 "while" '(' expr . ')' optional_emit_semis expression_block
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1431


State 1365

  114 expression_with: $@12 "with" '(' expr . ')' optional_emit_semis expression_block
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1432


State 1366

  270 expression_block_finally: "finally" $@14 . '{' expressions $@15 '}'

    '{'  shift, and go to state 1433


State 1367

  334 tuple_expansion: tuple_expansion . ',' "name"
  335 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  336                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1312
    ')'  shift, and go to state 1434


State 1368

  339 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  597 variable_declaration_list: variable_declaration_list . SEMICOLON
  598                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 559
    "name"                 shift, and go to state 560
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1435

    SEMICOLON                        go to state 1436
    let_variable_name_with_pos_list  go to state 561
    let_variable_declaration         go to state 1437


State 1369

  645 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}' .

    $default  reduce using rule 645 (enum_declaration)


State 1370

  541 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 541 (optional_public_or_private_member_variable)


State 1371

  542 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 542 (optional_public_or_private_member_variable)


State 1372

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  553                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1438
    "static"    shift, and go to state 1373

    $default  reduce using rule 543 (optional_static_member_variable)

    optional_static_member_variable  go to state 1439


State 1373

  544 optional_static_member_variable: "static" .

    $default  reduce using rule 544 (optional_static_member_variable)


State 1374

  545 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1440
    "sealed"    shift, and go to state 1441

    $default  reduce using rule 535 (optional_override)

    optional_override  go to state 1442


State 1375

  549 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 549 (struct_variable_declaration_list)


State 1376

  600 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 600 (let_variable_declaration)


State 1377

  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1391

    $default  reduce using rule 836 (use_initializer)

    use_initializer  go to state 1443


State 1378

  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1391

    $default  reduce using rule 836 (use_initializer)

    use_initializer  go to state 1444


State 1379

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1445


State 1380

  354 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1446


State 1381

  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1447


State 1382

  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1448


State 1383

  865 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 . '(' make_variant_dim ')'

    '('  shift, and go to state 1449


State 1384

  869 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 297 (optional_expr_list)

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    optional_expr_list      go to state 1450
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 619
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1385

  879 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 879 (make_table_decl)


State 1386

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    $default  reduce using rule 299 (optional_expr_map_tuple_list)

    string_builder                go to state 477
    expr_reader                   go to state 478
    expr_call_pipe                go to state 479
    optional_expr_map_tuple_list  go to state 1451
    name_in_namespace             go to state 480
    expr_new                      go to state 481
    expr_cast                     go to state 482
    expr_type_decl                go to state 483
    expr_type_info                go to state 484
    block_or_lambda               go to state 485
    expr_full_block               go to state 486
    expr_numeric_const            go to state 487
    expr_named_call               go to state 488
    expr_method_call              go to state 489
    func_addr_expr                go to state 490
    expr_field                    go to state 491
    expr_call                     go to state 492
    expr                          go to state 746
    expr_generator                go to state 494
    expr_mtag                     go to state 495
    basic_type_declaration        go to state 496
    make_decl                     go to state 497
    make_struct_decl              go to state 498
    make_map_tuple                go to state 747
    make_tuple_call               go to state 499
    make_dim_decl                 go to state 500
    expr_map_tuple_list           go to state 1001
    make_table_decl               go to state 501
    array_comprehension           go to state 502


State 1387

  342 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 342 (expr_cast)


State 1388

  345 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 345 (expr_cast)


State 1389

  348 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 348 (expr_cast)


State 1390

  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1452
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1391

  837 use_initializer: "uninitialized" .

    $default  reduce using rule 837 (use_initializer)


State 1392

  849 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer .

    $default  reduce using rule 849 (make_struct_decl)


State 1393

  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1391

    $default  reduce using rule 836 (use_initializer)

    use_initializer  go to state 1453


State 1394

  846 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1391

    $default  reduce using rule 836 (use_initializer)

    use_initializer  go to state 1454


State 1395

  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 514 (expr_generator)


State 1396

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  515 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1455


State 1397

  516 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 516 (expr_generator)


State 1398

  524 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1399

   36 format_string: format_string . STRING_CHARACTER
   39 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1456

    $default  reduce using rule 39 (optional_format_string)


State 1400

  102 for_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 102 (for_variable_name_with_pos_list)


State 1401

  334 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 334 (tuple_expansion)


State 1402

  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1457


State 1403

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1458


State 1404

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion . ')'
  334 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1312
    ')'  shift, and go to state 1459


State 1405

  356 expr_list: expr_list . ',' expr
  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1460


State 1406

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  824 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 824 (make_struct_fields)


State 1407

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  823 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 823 (make_struct_fields)


State 1408

  825 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  826                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 777
    ":="  shift, and go to state 1461
    '='   shift, and go to state 779

    copy_or_move  go to state 1462


State 1409

  410 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 785
    "name"  shift, and go to state 58

    name_in_namespace  go to state 788
    func_addr_name     go to state 1463


State 1410

  413 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' . $@31 func_addr_name

    $default  reduce using rule 412 ($@31)

    $@31  go to state 1464


State 1411

  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1465


State 1412

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1466


State 1413

  367 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1467


State 1414

  369 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 369 (capture_list)


State 1415

  358 block_or_simple_block: "=>" . expr
  359                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "<-"                              shift, and go to state 1468
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1469
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1416

  357 block_or_simple_block: expression_block .

    $default  reduce using rule 357 (block_or_simple_block)


State 1417

  372 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 372 (expr_full_block)


State 1418

  373 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1470
    $@16              go to state 405


State 1419

  489 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' . $@35

    $default  reduce using rule 488 ($@35)

    $@35  go to state 1471


State 1420

  495 expr: expr "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 494 ($@37)

    $@37  go to state 1472


State 1421

  500 expr: expr '?' "as" "type" '<' $@38 type_declaration . '>' $@39
  797 type_declaration: type_declaration . '|' type_declaration_no_options
  798                 | type_declaration . '|' '#'

    '|'  shift, and go to state 384
    '>'  shift, and go to state 1473


State 1422

  530 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 530 (expr_mtag)


State 1423

  528 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1424

  418 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1474


State 1425

  527 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1426

  743 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 1427

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  714 bitfield_alias_bits: bitfield_alias_bits commas "name" '=' expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 714 (bitfield_alias_bits)


State 1428

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1475

    $default  reduce using rule 77 (expression_else_one_liner)

    expression_else_one_liner  go to state 1476


State 1429

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1477


State 1430

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    expr_list               go to state 1478
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 620
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1431

  112 expression_while_loop: $@11 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1479


State 1432

  114 expression_with: $@12 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1480


State 1433

  270 expression_block_finally: "finally" $@14 '{' . expressions $@15 '}'

    $default  reduce using rule 294 (expressions)

    expressions  go to state 1481


State 1434

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  336                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1482
    '&'  shift, and go to state 423

    $default  reduce using rule 587 (optional_ref)

    optional_ref  go to state 1483


State 1435

  339 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 339 (expression_let)


State 1436

  597 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 597 (variable_declaration_list)


State 1437

  598 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 598 (variable_declaration_list)


State 1438

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@41 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1484

    $default  reduce using rule 538 (optional_constant)

    optional_constant  go to state 1485


State 1439

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1440
    "sealed"    shift, and go to state 1441

    $default  reduce using rule 535 (optional_override)

    optional_override  go to state 1486


State 1440

  536 optional_override: "override" .

    $default  reduce using rule 536 (optional_override)


State 1441

  537 optional_override: "sealed" .

    $default  reduce using rule 537 (optional_override)


State 1442

  545 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1370
    "private"  shift, and go to state 1371

    $default  reduce using rule 540 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1487


State 1443

  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1488

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1489
    make_struct_dim_list           go to state 1490
    make_struct_dim_decl           go to state 1491
    optional_make_struct_dim_decl  go to state 1492


State 1444

  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1488

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1489
    make_struct_dim_list           go to state 1490
    make_struct_dim_decl           go to state 1491
    optional_make_struct_dim_decl  go to state 1493


State 1445

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 353 (expr_type_info)


State 1446

  354 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1494
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1447

  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1391

    $default  reduce using rule 836 (use_initializer)

    use_initializer  go to state 1495


State 1448

  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1391

    $default  reduce using rule 836 (use_initializer)

    use_initializer  go to state 1496


State 1449

  865 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002

    $default  reduce using rule 827 (make_variant_dim)

    make_struct_fields  go to state 1497
    make_variant_dim    go to state 1498


State 1450

  869 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1499


State 1451

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1500


State 1452

  356 expr_list: expr_list . ',' expr
  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 774

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1501


State 1453

  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1488

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1489
    make_struct_dim_list           go to state 1490
    make_struct_dim_decl           go to state 1491
    optional_make_struct_dim_decl  go to state 1502


State 1454

  846 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002

    $default  reduce using rule 827 (make_variant_dim)

    make_struct_fields  go to state 1497
    make_variant_dim    go to state 1503


State 1455

  515 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 515 (expr_generator)


State 1456

   36 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 36 (format_string)


State 1457

  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1504
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1458

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 106 (for_variable_name_with_pos_list)


State 1459

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion ')' .

    $default  reduce using rule 107 (for_variable_name_with_pos_list)


State 1460

  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1505


State 1461

  826 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1506
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1462

  825 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1507
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1463

  410 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name .

    $default  reduce using rule 410 (func_addr_expr)


State 1464

  413 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 785
    "name"  shift, and go to state 58

    name_in_namespace  go to state 788
    func_addr_name     go to state 1508


State 1465

  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 746
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_map_tuple          go to state 1509
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1466

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 402 (expr_named_call)


State 1467

  367 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 367 (capture_entry)


State 1468

  359 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1510
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1469

  358 block_or_simple_block: "=>" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    ".."  error (nonassociative)

    $default  reduce using rule 358 (block_or_simple_block)


State 1470

  373 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 373 (expr_full_block_assumed_piped)


State 1471

  489 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35 .

    $default  reduce using rule 489 (expr)


State 1472

  495 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 495 (expr)


State 1473

  500 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 499 ($@39)

    $@39  go to state 1511


State 1474

  418 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 418 (expr_field)


State 1475

   78 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder           go to state 477
    expr_reader              go to state 478
    expression_if_one_liner  go to state 1512
    expr_call_pipe           go to state 479
    name_in_namespace        go to state 480
    expr_new                 go to state 481
    expression_break         go to state 1513
    expression_continue      go to state 1514
    expression_return        go to state 1515
    expression_yield         go to state 1516
    expr_cast                go to state 482
    expr_type_decl           go to state 483
    expr_type_info           go to state 484
    block_or_lambda          go to state 485
    expr_full_block          go to state 486
    expr_numeric_const       go to state 487
    expr_named_call          go to state 488
    expr_method_call         go to state 489
    func_addr_expr           go to state 490
    expr_field               go to state 491
    expr_call                go to state 492
    expr                     go to state 1517
    expr_generator           go to state 494
    expr_mtag                go to state 495
    basic_type_declaration   go to state 496
    make_decl                go to state 497
    make_struct_decl         go to state 498
    make_tuple_call          go to state 499
    make_dim_decl            go to state 500
    make_table_decl          go to state 501
    array_comprehension      go to state 502


State 1476

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1518


State 1477

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 88 ($@3)
    '{'       [reduce using rule 91 ($@5)]
    $default  reduce using rule 91 ($@5)

    expression_if_block  go to state 1519
    $@3                  go to state 1520
    $@5                  go to state 1521


State 1478

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  356 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1037
    ')'  shift, and go to state 1522


State 1479

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1523
    $@16              go to state 405


State 1480

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1524
    $@16              go to state 405


State 1481

  270 expression_block_finally: "finally" $@14 '{' expressions . $@15 '}'
  295 expressions: expressions . expression_any
  296            | expressions . error

    error                             shift, and go to state 888
    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "try"                             shift, and go to state 891
    "table"                           shift, and go to state 437
    "delete"                          shift, and go to state 892
    "deref"                           shift, and go to state 438
    "typedef"                         shift, and go to state 893
    "assume"                          shift, and go to state 894
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "pass"                            shift, and go to state 896
    "reinterpret"                     shift, and go to state 442
    "label"                           shift, and go to state 897
    "goto"                            shift, and go to state 898
    "unsafe"                          shift, and go to state 899
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 476

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 269 ($@15)

    SEMICOLON                         go to state 901
    string_builder                    go to state 477
    expr_reader                       go to state 478
    expression_label                  go to state 902
    expression_goto                   go to state 903
    expression_if_one_liner           go to state 904
    expression_if_then_else           go to state 905
    $@9                               go to state 906
    expression_if_then_else_oneliner  go to state 907
    expression_for_loop               go to state 908
    $@10                              go to state 909
    expression_unsafe                 go to state 910
    expression_while_loop             go to state 911
    $@11                              go to state 912
    expression_with                   go to state 913
    $@12                              go to state 914
    expression_with_alias             go to state 915
    $@15                              go to state 1525
    expr_call_pipe                    go to state 479
    expression_any                    go to state 917
    name_in_namespace                 go to state 480
    expression_delete                 go to state 918
    expr_new                          go to state 481
    expression_break                  go to state 919
    expression_continue               go to state 920
    expression_return                 go to state 921
    expression_yield                  go to state 922
    expression_try_catch              go to state 923
    kwd_let                           go to state 924
    expression_let                    go to state 925
    expr_cast                         go to state 482
    expr_type_decl                    go to state 483
    expr_type_info                    go to state 484
    block_or_lambda                   go to state 485
    expr_full_block                   go to state 486
    expr_numeric_const                go to state 487
    expr_assign                       go to state 926
    expr_named_call                   go to state 488
    expr_method_call                  go to state 489
    func_addr_expr                    go to state 490
    expr_field                        go to state 491
    expr_call                         go to state 492
    expr                              go to state 927
    expr_generator                    go to state 494
    expr_mtag                         go to state 495
    basic_type_declaration            go to state 496
    make_decl                         go to state 497
    make_struct_decl                  go to state 498
    make_tuple_call                   go to state 499
    make_dim_decl                     go to state 500
    make_table_decl                   go to state 501
    array_comprehension               go to state 502


State 1482

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 58
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1526
    type_declaration_no_options_no_dim  go to state 276


State 1483

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1527


State 1484

  539 optional_constant: "const" .

    $default  reduce using rule 539 (optional_constant)


State 1485

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@41 function_declaration_header SEMICOLON

    $default  reduce using rule 550 ($@41)

    $@41  go to state 1528


State 1486

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1484

    $default  reduce using rule 538 (optional_constant)

    optional_constant  go to state 1529


State 1487

  545 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_declaration_no_type  go to state 1530
    variable_declaration_type     go to state 1531
    variable_declaration          go to state 1532
    variable_name_with_pos_list   go to state 707


State 1488

  830 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002

    make_struct_fields  go to state 1533


State 1489

  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  832 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1188

    $default  reduce using rule 832 (make_struct_dim_decl)


State 1490

  831 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  833 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1534

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1535


State 1491

  834 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 834 (optional_make_struct_dim_decl)


State 1492

  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1536


State 1493

  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1537


State 1494

  354 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1538


State 1495

  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1488

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1489
    make_struct_dim_list           go to state 1490
    make_struct_dim_decl           go to state 1491
    optional_make_struct_dim_decl  go to state 1539


State 1496

  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1488

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1489
    make_struct_dim_list           go to state 1490
    make_struct_dim_decl           go to state 1491
    optional_make_struct_dim_decl  go to state 1540


State 1497

  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  828 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1188

    $default  reduce using rule 828 (make_variant_dim)


State 1498

  865 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1541


State 1499

  869 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')' .

    $default  reduce using rule 869 (make_dim_decl)


State 1500

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 880 (make_table_decl)


State 1501

  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1542


State 1502

  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1543


State 1503

  846 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1544


State 1504

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ';'    shift, and go to state 1545

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1546


State 1505

  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1547
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1506

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  826 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 826 (make_struct_fields)


State 1507

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  825 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 825 (make_struct_fields)


State 1508

  413 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name .

    $default  reduce using rule 413 (func_addr_expr)


State 1509

  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1545

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1548


State 1510

  359 block_or_simple_block: "=>" "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 359 (block_or_simple_block)


State 1511

  500 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 500 (expr)


State 1512

   78 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 78 (expression_else_one_liner)


State 1513

   82 expression_if_one_liner: expression_break .

    $default  reduce using rule 82 (expression_if_one_liner)


State 1514

   83 expression_if_one_liner: expression_continue .

    $default  reduce using rule 83 (expression_if_one_liner)


State 1515

   80 expression_if_one_liner: expression_return .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1516

   81 expression_if_one_liner: expression_yield .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1517

   79 expression_if_one_liner: expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 79 (expression_if_one_liner)


State 1518

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 100 (expression_if_then_else_oneliner)


State 1519

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1549
    "elif"         shift, and go to state 1550
    "static_elif"  shift, and go to state 1551

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1552
    expression_else      go to state 1553


State 1520

   90 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1554


State 1521

   92 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder           go to state 477
    expr_reader              go to state 478
    expression_if_one_liner  go to state 1555
    expr_call_pipe           go to state 479
    name_in_namespace        go to state 480
    expr_new                 go to state 481
    expression_break         go to state 1513
    expression_continue      go to state 1514
    expression_return        go to state 1515
    expression_yield         go to state 1516
    expr_cast                go to state 482
    expr_type_decl           go to state 483
    expr_type_info           go to state 484
    block_or_lambda          go to state 485
    expr_full_block          go to state 486
    expr_numeric_const       go to state 487
    expr_named_call          go to state 488
    expr_method_call         go to state 489
    func_addr_expr           go to state 490
    expr_field               go to state 491
    expr_call                go to state 492
    expr                     go to state 1517
    expr_generator           go to state 494
    expr_mtag                go to state 495
    basic_type_declaration   go to state 496
    make_decl                go to state 497
    make_struct_decl         go to state 498
    make_tuple_call          go to state 499
    make_dim_decl            go to state 500
    make_table_decl          go to state 501
    array_comprehension      go to state 502


State 1522

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1556


State 1523

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 112 (expression_while_loop)


State 1524

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 114 (expression_with)


State 1525

  270 expression_block_finally: "finally" $@14 '{' expressions $@15 . '}'

    '}'  shift, and go to state 1557


State 1526

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  744 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  745                                   | type_declaration_no_options . "explicit"
  746                                   | type_declaration_no_options . "const"
  747                                   | type_declaration_no_options . '-' "const"
  748                                   | type_declaration_no_options . '&'
  749                                   | type_declaration_no_options . '-' '&'
  750                                   | type_declaration_no_options . '#'
  751                                   | type_declaration_no_options . "implicit"
  752                                   | type_declaration_no_options . '-' '#'
  753                                   | type_declaration_no_options . "==" "const"
  754                                   | type_declaration_no_options . "==" '&'
  755                                   | type_declaration_no_options . '?'
  759                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 373
    "implicit"  shift, and go to state 374
    "explicit"  shift, and go to state 375
    "=="        shift, and go to state 376
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 377
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 378
    '&'         shift, and go to state 379
    '-'         shift, and go to state 380
    '#'         shift, and go to state 381

    copy_or_move_or_clone  go to state 1558


State 1527

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1559
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1528

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1560


State 1529

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@42 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 552 ($@42)

    $@42  go to state 1561


State 1530

  583 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 583 (variable_declaration)


State 1531

  582 variable_declaration: variable_declaration_type .

    $default  reduce using rule 582 (variable_declaration)


State 1532

  545 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 545 (structure_variable_declaration)


State 1533

  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  830 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1188
    ')'  shift, and go to state 1562


State 1534

  831 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  884 optional_comma: ',' .

    '('  shift, and go to state 1563

    $default  reduce using rule 884 (optional_comma)


State 1535

  833 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 833 (make_struct_dim_decl)


State 1536

  840 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 840 (make_struct_decl)


State 1537

  843 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 843 (make_struct_decl)


State 1538

  354 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 354 (expr_type_info)


State 1539

  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1564


State 1540

  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1565


State 1541

  865 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')' .

    $default  reduce using rule 865 (make_dim_decl)


State 1542

  873 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')' .

    $default  reduce using rule 873 (make_dim_decl)


State 1543

  855 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 855 (make_tuple_call)


State 1544

  846 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 846 (make_struct_decl)


State 1545

  882 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1566


State 1546

  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1567


State 1547

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ';'    shift, and go to state 1545

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1568


State 1548

  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1569


State 1549

   73 expression_else: "else" . optional_emit_semis expression_else_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1570


State 1550

   66 elif_or_static_elif: "elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1551

   67 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 67 (elif_or_static_elif)


State 1552

   74 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_else_block expression_else

    '('  shift, and go to state 1571


State 1553

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 99 (expression_if_then_else)


State 1554

   90 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 294 (expressions)

    expressions  go to state 1572


State 1555

   92 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1573


State 1556

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1574
    $@16              go to state 405


State 1557

  270 expression_block_finally: "finally" $@14 '{' expressions $@15 '}' .

    $default  reduce using rule 270 (expression_block_finally)


State 1558

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1575
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1559

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 636
    "as"                   shift, and go to state 637
    "<<"                   shift, and go to state 638
    ">>"                   shift, and go to state 639
    "++"                   shift, and go to state 640
    "--"                   shift, and go to state 641
    "<="                   shift, and go to state 642
    ">="                   shift, and go to state 643
    "=="                   shift, and go to state 644
    "!="                   shift, and go to state 645
    "->"                   shift, and go to state 646
    "??"                   shift, and go to state 647
    "?."                   shift, and go to state 648
    "?["                   shift, and go to state 649
    "<|"                   shift, and go to state 650
    "|>"                   shift, and go to state 651
    "<<<"                  shift, and go to state 652
    ">>>"                  shift, and go to state 653
    "&&"                   shift, and go to state 654
    "||"                   shift, and go to state 655
    "^^"                   shift, and go to state 656
    ".."                   shift, and go to state 657
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 658
    '|'                    shift, and go to state 659
    '^'                    shift, and go to state 660
    '&'                    shift, and go to state 661
    '<'                    shift, and go to state 662
    '>'                    shift, and go to state 663
    '-'                    shift, and go to state 664
    '+'                    shift, and go to state 665
    '*'                    shift, and go to state 666
    '/'                    shift, and go to state 667
    '%'                    shift, and go to state 668
    '.'                    shift, and go to state 669
    '['                    shift, and go to state 670
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1576


State 1560

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1577


State 1561

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1578


State 1562

  830 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 830 (make_struct_dim_list)


State 1563

  831 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 621
    "name"  shift, and go to state 1002

    make_struct_fields  go to state 1579


State 1564

  859 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 859 (make_dim_decl)


State 1565

  862 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 862 (make_dim_decl)


State 1566

  882 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1580
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1567

  885 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 885 (array_comprehension)


State 1568

  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1581


State 1569

  887 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 887 (array_comprehension)


State 1570

   73 expression_else: "else" optional_emit_semis . expression_else_block

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1582
    $@6                    go to state 1583
    $@8                    go to state 1584


State 1571

   74 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_else_block expression_else

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder          go to state 477
    expr_reader             go to state 478
    expr_call_pipe          go to state 479
    name_in_namespace       go to state 480
    expr_new                go to state 481
    expr_cast               go to state 482
    expr_type_decl          go to state 483
    expr_type_info          go to state 484
    block_or_lambda         go to state 485
    expr_full_block         go to state 486
    expr_numeric_const      go to state 487
    expr_named_call         go to state 488
    expr_method_call        go to state 489
    func_addr_expr          go to state 490
    expr_field              go to state 491
    expr_call               go to state 492
    expr                    go to state 1585
    expr_generator          go to state 494
    expr_mtag               go to state 495
    basic_type_declaration  go to state 496
    make_decl               go to state 497
    make_struct_decl        go to state 498
    make_tuple_call         go to state 499
    make_dim_decl           go to state 500
    make_table_decl         go to state 501
    array_comprehension     go to state 502


State 1572

   90 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  295 expressions: expressions . expression_any
  296            | expressions . error

    error                             shift, and go to state 888
    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "try"                             shift, and go to state 891
    "table"                           shift, and go to state 437
    "delete"                          shift, and go to state 892
    "deref"                           shift, and go to state 438
    "typedef"                         shift, and go to state 893
    "assume"                          shift, and go to state 894
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "pass"                            shift, and go to state 896
    "reinterpret"                     shift, and go to state 442
    "label"                           shift, and go to state 897
    "goto"                            shift, and go to state 898
    "unsafe"                          shift, and go to state 899
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 476

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 89 ($@4)

    SEMICOLON                         go to state 901
    string_builder                    go to state 477
    expr_reader                       go to state 478
    expression_label                  go to state 902
    expression_goto                   go to state 903
    expression_if_one_liner           go to state 904
    $@4                               go to state 1586
    expression_if_then_else           go to state 905
    $@9                               go to state 906
    expression_if_then_else_oneliner  go to state 907
    expression_for_loop               go to state 908
    $@10                              go to state 909
    expression_unsafe                 go to state 910
    expression_while_loop             go to state 911
    $@11                              go to state 912
    expression_with                   go to state 913
    $@12                              go to state 914
    expression_with_alias             go to state 915
    expr_call_pipe                    go to state 479
    expression_any                    go to state 917
    name_in_namespace                 go to state 480
    expression_delete                 go to state 918
    expr_new                          go to state 481
    expression_break                  go to state 919
    expression_continue               go to state 920
    expression_return                 go to state 921
    expression_yield                  go to state 922
    expression_try_catch              go to state 923
    kwd_let                           go to state 924
    expression_let                    go to state 925
    expr_cast                         go to state 482
    expr_type_decl                    go to state 483
    expr_type_info                    go to state 484
    block_or_lambda                   go to state 485
    expr_full_block                   go to state 486
    expr_numeric_const                go to state 487
    expr_assign                       go to state 926
    expr_named_call                   go to state 488
    expr_method_call                  go to state 489
    func_addr_expr                    go to state 490
    expr_field                        go to state 491
    expr_call                         go to state 492
    expr                              go to state 927
    expr_generator                    go to state 494
    expr_mtag                         go to state 495
    basic_type_declaration            go to state 496
    make_decl                         go to state 497
    make_struct_decl                  go to state 498
    make_tuple_call                   go to state 499
    make_dim_decl                     go to state 500
    make_table_decl                   go to state 501
    array_comprehension               go to state 502


State 1573

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 92 (expression_if_block)


State 1574

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 109 (expression_for_loop)


State 1575

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 636
    "as"                   shift, and go to state 637
    "<<"                   shift, and go to state 638
    ">>"                   shift, and go to state 639
    "++"                   shift, and go to state 640
    "--"                   shift, and go to state 641
    "<="                   shift, and go to state 642
    ">="                   shift, and go to state 643
    "=="                   shift, and go to state 644
    "!="                   shift, and go to state 645
    "->"                   shift, and go to state 646
    "??"                   shift, and go to state 647
    "?."                   shift, and go to state 648
    "?["                   shift, and go to state 649
    "<|"                   shift, and go to state 650
    "|>"                   shift, and go to state 651
    "<<<"                  shift, and go to state 652
    ">>>"                  shift, and go to state 653
    "&&"                   shift, and go to state 654
    "||"                   shift, and go to state 655
    "^^"                   shift, and go to state 656
    ".."                   shift, and go to state 657
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 658
    '|'                    shift, and go to state 659
    '^'                    shift, and go to state 660
    '&'                    shift, and go to state 661
    '<'                    shift, and go to state 662
    '>'                    shift, and go to state 663
    '-'                    shift, and go to state 664
    '+'                    shift, and go to state 665
    '*'                    shift, and go to state 666
    '/'                    shift, and go to state 667
    '%'                    shift, and go to state 668
    '.'                    shift, and go to state 669
    '['                    shift, and go to state 670
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1587


State 1576

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 336 (tuple_expansion_variable_declaration)


State 1577

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON .

    $default  reduce using rule 551 (struct_variable_declaration_list)


State 1578

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1588


State 1579

  821 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  822                   | make_struct_fields . ',' "name" ":=" expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  826                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  831 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1188
    ')'  shift, and go to state 1589


State 1580

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'
  882 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 882 (array_comprehension_where)


State 1581

  886 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 886 (array_comprehension)


State 1582

   73 expression_else: "else" optional_emit_semis expression_else_block .

    $default  reduce using rule 73 (expression_else)


State 1583

   95 expression_else_block: $@6 . '{' expressions $@7 '}' expression_block_finally

    '{'  shift, and go to state 1590


State 1584

   97 expression_else_block: $@8 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "table"                           shift, and go to state 437
    "deref"                           shift, and go to state 438
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "reinterpret"                     shift, and go to state 442
    "unsafe"                          shift, and go to state 443
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    '{'                               shift, and go to state 476

    string_builder           go to state 477
    expr_reader              go to state 478
    expression_if_one_liner  go to state 1591
    expr_call_pipe           go to state 479
    name_in_namespace        go to state 480
    expr_new                 go to state 481
    expression_break         go to state 1513
    expression_continue      go to state 1514
    expression_return        go to state 1515
    expression_yield         go to state 1516
    expr_cast                go to state 482
    expr_type_decl           go to state 483
    expr_type_info           go to state 484
    block_or_lambda          go to state 485
    expr_full_block          go to state 486
    expr_numeric_const       go to state 487
    expr_named_call          go to state 488
    expr_method_call         go to state 489
    func_addr_expr           go to state 490
    expr_field               go to state 491
    expr_call                go to state 492
    expr                     go to state 1517
    expr_generator           go to state 494
    expr_mtag                go to state 495
    basic_type_declaration   go to state 496
    make_decl                go to state 497
    make_struct_decl         go to state 498
    make_tuple_call          go to state 499
    make_dim_decl            go to state 500
    make_table_decl          go to state 501
    array_comprehension      go to state 502


State 1585

   74 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_else_block expression_else
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@32 error $@33
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  473     | expr . '[' expr ']'
  474     | expr . '.' '[' expr ']'
  475     | expr . "?[" expr ']'
  476     | expr . '.' "?[" expr ']'
  477     | expr . "?." "name"
  478     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  525 expr_mtag: expr . '.' "$f" '(' expr ')'
  526          | expr . "?." "$f" '(' expr ')'
  527          | expr . '.' '.' "$f" '(' expr ')'
  528          | expr . '.' "?." "$f" '(' expr ')'
  529          | expr . "as" "$f" '(' expr ')'
  530          | expr . '?' "as" "$f" '(' expr ')'
  531          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1592


State 1586

   90 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1593


State 1587

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 335 (tuple_expansion_variable_declaration)


State 1588

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 271 ($@16)

    expression_block  go to state 1594
    $@16              go to state 405


State 1589

  831 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 831 (make_struct_dim_list)


State 1590

   95 expression_else_block: $@6 '{' . expressions $@7 '}' expression_block_finally

    $default  reduce using rule 294 (expressions)

    expressions  go to state 1595


State 1591

   97 expression_else_block: $@8 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1596


State 1592

   74 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_else_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1597


State 1593

   90 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1251

    $default  reduce using rule 267 (expression_block_finally)

    expression_block_finally  go to state 1598


State 1594

  553 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 553 (struct_variable_declaration_list)


State 1595

   95 expression_else_block: $@6 '{' expressions . $@7 '}' expression_block_finally
  295 expressions: expressions . expression_any
  296            | expressions . error

    error                             shift, and go to state 888
    "struct"                          shift, and go to state 428
    "class"                           shift, and go to state 429
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 889
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 890
    "try"                             shift, and go to state 891
    "table"                           shift, and go to state 437
    "delete"                          shift, and go to state 892
    "deref"                           shift, and go to state 438
    "typedef"                         shift, and go to state 893
    "assume"                          shift, and go to state 894
    "cast"                            shift, and go to state 439
    "upcast"                          shift, and go to state 440
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 441
    "continue"                        shift, and go to state 895
    "pass"                            shift, and go to state 896
    "reinterpret"                     shift, and go to state 442
    "label"                           shift, and go to state 897
    "goto"                            shift, and go to state 898
    "unsafe"                          shift, and go to state 899
    "fixed_array"                     shift, and go to state 444
    "default"                         shift, and go to state 445
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 446
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 447
    "variant"                         shift, and go to state 448
    "generator"                       shift, and go to state 449
    "yield"                           shift, and go to state 900
    "++"                              shift, and go to state 450
    "--"                              shift, and go to state 451
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 452
    "$i"                              shift, and go to state 453
    "$v"                              shift, and go to state 454
    "$b"                              shift, and go to state 455
    "$a"                              shift, and go to state 456
    "$c"                              shift, and go to state 457
    "..."                             shift, and go to state 458
    "integer constant"                shift, and go to state 459
    "long integer constant"           shift, and go to state 460
    "unsigned integer constant"       shift, and go to state 461
    "unsigned long integer constant"  shift, and go to state 462
    "unsigned int8 constant"          shift, and go to state 463
    "floating point constant"         shift, and go to state 464
    "double constant"                 shift, and go to state 465
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 466
    '-'                               shift, and go to state 467
    '+'                               shift, and go to state 468
    '*'                               shift, and go to state 469
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 470
    '!'                               shift, and go to state 471
    '['                               shift, and go to state 472
    '('                               shift, and go to state 473
    '$'                               shift, and go to state 474
    '@'                               shift, and go to state 475
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 476

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 94 ($@7)

    SEMICOLON                         go to state 901
    string_builder                    go to state 477
    expr_reader                       go to state 478
    expression_label                  go to state 902
    expression_goto                   go to state 903
    expression_if_one_liner           go to state 904
    $@7                               go to state 1599
    expression_if_then_else           go to state 905
    $@9                               go to state 906
    expression_if_then_else_oneliner  go to state 907
    expression_for_loop               go to state 908
    $@10                              go to state 909
    expression_unsafe                 go to state 910
    expression_while_loop             go to state 911
    $@11                              go to state 912
    expression_with                   go to state 913
    $@12                              go to state 914
    expression_with_alias             go to state 915
    expr_call_pipe                    go to state 479
    expression_any                    go to state 917
    name_in_namespace                 go to state 480
    expression_delete                 go to state 918
    expr_new                          go to state 481
    expression_break                  go to state 919
    expression_continue               go to state 920
    expression_return                 go to state 921
    expression_yield                  go to state 922
    expression_try_catch              go to state 923
    kwd_let                           go to state 924
    expression_let                    go to state 925
    expr_cast                         go to state 482
    expr_type_decl                    go to state 483
    expr_type_info                    go to state 484
    block_or_lambda                   go to state 485
    expr_full_block                   go to state 486
    expr_numeric_const                go to state 487
    expr_assign                       go to state 926
    expr_named_call                   go to state 488
    expr_method_call                  go to state 489
    func_addr_expr                    go to state 490
    expr_field                        go to state 491
    expr_call                         go to state 492
    expr                              go to state 927
    expr_generator                    go to state 494
    expr_mtag                         go to state 495
    basic_type_declaration            go to state 496
    make_decl                         go to state 497
    make_struct_decl                  go to state 498
    make_tuple_call                   go to state 499
    make_dim_decl                     go to state 500
    make_table_decl                   go to state 501
    array_comprehension               go to state 502


State 1596

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 97 (expression_else_block)


State 1597

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_else_block expression_else

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1600
    $@6                    go to state 1583
    $@8                    go to state 1584


State 1598

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 90 (expression_if_block)


State 1599

   95 expression_else_block: $@6 '{' expressions $@7 . '}' expression_block_finally

    '}'  shift, and go to state 1601


State 1600

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block . expression_else

    "else"         shift, and go to state 1549
    "elif"         shift, and go to state 1550
    "static_elif"  shift, and go to state 1551

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1552
    expression_else      go to state 1602


State 1601

   95 expression_else_block: $@6 '{' expressions $@7 '}' . expression_block_finally

    "finally"  shift, and go to state 1251

    $default  reduce using rule 267 (expression_block_finally)

    expression_block_finally  go to state 1603


State 1602

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else .

    $default  reduce using rule 74 (expression_else)


State 1603

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally .

    $default  reduce using rule 95 (expression_else_block)
