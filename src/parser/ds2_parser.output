Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1428 conflicts: 1 reduce/reduce
State 1522 conflicts: 1 reduce/reduce
State 1549 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 format_string: %empty
   34              | format_string STRING_CHARACTER

   35 optional_format_string: %empty

   36 $@1: %empty

   37 optional_format_string: ':' $@1 format_string

   38 string_builder_body: %empty
   39                    | string_builder_body character_sequence
   40                    | string_builder_body "{" expr optional_format_string "}"

   41 string_builder: "start of the string" string_builder_body "end of the string"

   42 reader_character_sequence: STRING_CHARACTER
   43                          | reader_character_sequence STRING_CHARACTER

   44 $@2: %empty

   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   46 options_declaration: "options" annotation_argument_list

   47 require_declaration: "require" require_module

   48 require_module_name: "name"
   49                    | '%' require_module_name
   50                    | require_module_name '.' "name"
   51                    | require_module_name '/' "name"

   52 require_module: require_module_name is_public_module
   53               | require_module_name "as" "name" is_public_module

   54 is_public_module: %empty
   55                 | "public"

   56 expect_declaration: "expect" expect_list

   57 expect_list: expect_error
   58            | expect_list ',' expect_error

   59 expect_error: "integer constant"
   60             | "integer constant" ':' "integer constant"

   61 expression_label: "label" "integer constant" ':'

   62 expression_goto: "goto" "label" "integer constant"
   63                | "goto" expr

   64 elif_or_static_elif: "elif"
   65                    | "static_elif"

   66 emit_semis: "new line, semicolon"
   67           | emit_semis "new line, semicolon"

   68 optional_emit_semis: %empty
   69                    | emit_semis

   70 expression_else: %empty
   71                | "else" optional_emit_semis expression_else_block
   72                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else

   73 if_or_static_if: "if"
   74                | "static_if"

   75 expression_else_one_liner: %empty
   76                          | "else" expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return
   79                        | expression_yield
   80                        | expression_break
   81                        | expression_continue

   82 semis: SEMICOLON
   83      | semis SEMICOLON

   84 optional_semis: %empty
   85               | semis

   86 $@3: %empty

   87 $@4: %empty

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   89 $@5: %empty

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   91 $@6: %empty

   92 $@7: %empty

   93 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally

   94 $@8: %empty

   95 expression_else_block: $@8 expression_if_one_liner SEMICOLON

   96 $@9: %empty

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   99 $@10: %empty

  100 expression_for_loop: $@10 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  101 expression_unsafe: "unsafe" optional_emit_semis expression_block

  102 $@11: %empty

  103 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block

  104 $@12: %empty

  105 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block

  106 expression_with_alias: "assume" "name" '=' expr

  107 annotation_argument_value: string_constant
  108                          | "name"
  109                          | "integer constant"
  110                          | "floating point constant"
  111                          | "true"
  112                          | "false"

  113 annotation_argument_value_list: annotation_argument_value
  114                               | annotation_argument_value_list ',' annotation_argument_value

  115 annotation_argument_name: "name"
  116                         | "type"
  117                         | "in"

  118 annotation_argument: annotation_argument_name '=' string_constant
  119                    | annotation_argument_name '=' "name"
  120                    | annotation_argument_name '=' "integer constant"
  121                    | annotation_argument_name '=' "floating point constant"
  122                    | annotation_argument_name '=' "true"
  123                    | annotation_argument_name '=' "false"
  124                    | annotation_argument_name
  125                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  126 annotation_argument_list: annotation_argument
  127                         | annotation_argument_list ',' annotation_argument

  128 metadata_argument_list: '@' annotation_argument optional_emit_semis
  129                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  130 annotation_declaration_name: name_in_namespace
  131                            | "require"
  132                            | "private"
  133                            | "template"

  134 annotation_declaration_basic: annotation_declaration_name
  135                             | annotation_declaration_name '(' annotation_argument_list ')'

  136 annotation_declaration: annotation_declaration_basic
  137                       | '!' annotation_declaration
  138                       | annotation_declaration "&&" annotation_declaration
  139                       | annotation_declaration "||" annotation_declaration
  140                       | annotation_declaration "^^" annotation_declaration
  141                       | '(' annotation_declaration ')'
  142                       | "|>" annotation_declaration

  143 annotation_list: annotation_declaration
  144                | annotation_list ',' annotation_declaration

  145 optional_annotation_list: %empty
  146                         | '[' annotation_list ']'

  147 optional_annotation_list_with_emit_semis: %empty
  148                                         | '[' annotation_list ']' optional_emit_semis

  149 optional_function_argument_list: %empty
  150                                | '(' ')'
  151                                | '(' function_argument_list ')'

  152 optional_function_type: %empty
  153                       | ':' type_declaration

  154 function_name: "name"
  155              | "operator" '!'
  156              | "operator" '~'
  157              | "operator" "+="
  158              | "operator" "-="
  159              | "operator" "*="
  160              | "operator" "/="
  161              | "operator" "%="
  162              | "operator" "&="
  163              | "operator" "|="
  164              | "operator" "^="
  165              | "operator" "&&="
  166              | "operator" "||="
  167              | "operator" "^^="
  168              | "operator" "&&"
  169              | "operator" "||"
  170              | "operator" "^^"
  171              | "operator" '+'
  172              | "operator" '-'
  173              | "operator" '*'
  174              | "operator" '/'
  175              | "operator" '%'
  176              | "operator" '<'
  177              | "operator" '>'
  178              | "operator" ".."
  179              | "operator" "=="
  180              | "operator" "!="
  181              | "operator" "<="
  182              | "operator" ">="
  183              | "operator" '&'
  184              | "operator" '|'
  185              | "operator" '^'
  186              | "++" "operator"
  187              | "--" "operator"
  188              | "operator" "++"
  189              | "operator" "--"
  190              | "operator" "<<"
  191              | "operator" ">>"
  192              | "operator" "<<="
  193              | "operator" ">>="
  194              | "operator" "<<<"
  195              | "operator" ">>>"
  196              | "operator" "<<<="
  197              | "operator" ">>>="
  198              | "operator" '[' ']'
  199              | "operator" "?[" ']'
  200              | "operator" '.'
  201              | "operator" "?."
  202              | "operator" '.' "name"
  203              | "operator" '.' "name" ":="
  204              | "operator" "?." "name"
  205              | "operator" ":="
  206              | "operator" "delete"
  207              | "operator" "??"
  208              | "operator" "is"
  209              | "operator" "as"
  210              | "operator" "is" "name"
  211              | "operator" "as" "name"
  212              | "operator" '?' "as"
  213              | "operator" '?' "as" "name"
  214              | "bool"
  215              | "string"
  216              | "int"
  217              | "int2"
  218              | "int3"
  219              | "int4"
  220              | "uint"
  221              | "uint2"
  222              | "uint3"
  223              | "uint4"
  224              | "float"
  225              | "float2"
  226              | "float3"
  227              | "float4"
  228              | "range"
  229              | "urange"
  230              | "range64"
  231              | "urange64"
  232              | "int64"
  233              | "uint64"
  234              | "double"
  235              | "int8"
  236              | "uint8"
  237              | "int16"
  238              | "uint16"

  239 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  240 optional_public_or_private_function: %empty
  241                                    | "private"
  242                                    | "public"

  243 function_declaration_header: function_name optional_function_argument_list optional_function_type

  244 $@13: %empty

  245 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block

  246 expression_block_finally: %empty

  247 $@14: %empty

  248 $@15: %empty

  249 expression_block_finally: "finally" $@14 '{' expressions $@15 '}'

  250 $@16: %empty

  251 $@17: %empty

  252 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally

  253 expr_call_pipe: expr_call expr_full_block_assumed_piped

  254 expression_any: SEMICOLON
  255               | expr_assign SEMICOLON
  256               | expression_delete SEMICOLON
  257               | expression_let
  258               | expression_while_loop
  259               | expression_unsafe
  260               | expression_with
  261               | expression_with_alias SEMICOLON
  262               | expression_for_loop
  263               | expression_break SEMICOLON
  264               | expression_continue SEMICOLON
  265               | expression_return SEMICOLON
  266               | expression_yield SEMICOLON
  267               | expression_if_then_else
  268               | expression_if_then_else_oneliner
  269               | expression_try_catch
  270               | expression_label SEMICOLON
  271               | expression_goto SEMICOLON
  272               | "pass" SEMICOLON

  273 expressions: %empty
  274            | expressions expression_any
  275            | expressions error

  276 optional_expr_list: %empty
  277                   | expr_list optional_comma

  278 optional_expr_map_tuple_list: %empty
  279                             | expr_map_tuple_list optional_comma

  280 type_declaration_no_options_list: type_declaration
  281                                 | type_declaration_no_options_list c_or_s type_declaration

  282 name_in_namespace: "name"
  283                  | "name" "::" "name"
  284                  | "::" "name"

  285 expression_delete: "delete" expr
  286                  | "delete" "explicit" expr

  287 $@18: %empty

  288 $@19: %empty

  289 new_type_declaration: '<' $@18 type_declaration '>' $@19
  290                     | structure_type_declaration

  291 expr_new: "new" new_type_declaration
  292         | "new" new_type_declaration '(' use_initializer ')'
  293         | "new" new_type_declaration '(' expr_list ')'
  294         | "new" new_type_declaration '(' make_struct_single ')'
  295         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  296         | "new" make_decl

  297 expression_break: "break"

  298 expression_continue: "continue"

  299 expression_return: "return"
  300                  | "return" expr
  301                  | "return" "<-" expr

  302 expression_yield: "yield" expr
  303                 | "yield" "<-" expr

  304 expression_try_catch: "try" expression_block "recover" expression_block

  305 kwd_let_var_or_nothing: "let"
  306                       | "var"
  307                       | %empty

  308 kwd_let: "let"
  309        | "var"

  310 optional_in_scope: "inscope"
  311                  | %empty

  312 tuple_expansion: "name"
  313                | tuple_expansion ',' "name"

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  315                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  316 expression_let: kwd_let optional_in_scope let_variable_declaration
  317               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  318               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  319 $@20: %empty

  320 $@21: %empty

  321 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr

  322 $@22: %empty

  323 $@23: %empty

  324 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr

  325 $@24: %empty

  326 $@25: %empty

  327 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr

  328 $@26: %empty

  329 $@27: %empty

  330 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27

  331 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  332               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  333               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  334 expr_list: expr
  335          | expr_list ',' expr

  336 block_or_simple_block: expression_block
  337                      | "=>" expr
  338                      | "=>" "<-" expr

  339 block_or_lambda: '$'
  340                | '@'
  341                | '@' '@'

  342 capture_entry: '&' "name"
  343              | '=' "name"
  344              | "<-" "name"
  345              | ":=" "name"
  346              | "name" '(' "name" ')'

  347 capture_list: capture_entry
  348             | capture_list ',' capture_entry

  349 optional_capture_list: %empty
  350                      | "capture" '(' capture_list ')'

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  352 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  353                              | '{' expressions '}'

  354 expr_numeric_const: "integer constant"
  355                   | "unsigned integer constant"
  356                   | "long integer constant"
  357                   | "unsigned long integer constant"
  358                   | "unsigned int8 constant"
  359                   | "floating point constant"
  360                   | "double constant"

  361 expr_assign: expr
  362            | expr '=' expr
  363            | expr "<-" expr
  364            | expr ":=" expr
  365            | expr "&=" expr
  366            | expr "|=" expr
  367            | expr "^=" expr
  368            | expr "&&=" expr
  369            | expr "||=" expr
  370            | expr "^^=" expr
  371            | expr "+=" expr
  372            | expr "-=" expr
  373            | expr "*=" expr
  374            | expr "/=" expr
  375            | expr "%=" expr
  376            | expr "<<=" expr
  377            | expr ">>=" expr
  378            | expr "<<<=" expr
  379            | expr ">>>=" expr

  380 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  381                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  382 expr_method_call: expr "->" "name" '(' ')'
  383                 | expr "->" "name" '(' expr_list ')'

  384 func_addr_name: name_in_namespace
  385               | "$i" '(' expr ')'

  386 func_addr_expr: '@' '@' func_addr_name

  387 $@28: %empty

  388 $@29: %empty

  389 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name

  390 $@30: %empty

  391 $@31: %empty

  392 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

  393 expr_field: expr '.' "name"
  394           | expr '.' '.' "name"
  395           | expr '.' "name" '(' ')'
  396           | expr '.' "name" '(' expr_list ')'
  397           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr '.' basic_type_declaration '(' ')'
  399           | expr '.' basic_type_declaration '(' expr_list ')'

  400 $@32: %empty

  401 $@33: %empty

  402 expr_field: expr '.' $@32 error $@33

  403 expr_call: name_in_namespace '(' ')'
  404          | name_in_namespace '(' "uninitialized" ')'
  405          | name_in_namespace '(' make_struct_single ')'
  406          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  407          | name_in_namespace '(' expr_list ')'
  408          | basic_type_declaration '(' ')'
  409          | basic_type_declaration '(' expr_list ')'

  410 expr: "null"
  411     | name_in_namespace
  412     | expr_numeric_const
  413     | expr_reader
  414     | string_builder
  415     | make_decl
  416     | "true"
  417     | "false"
  418     | expr_field
  419     | expr_mtag
  420     | '!' expr
  421     | '~' expr
  422     | '+' expr
  423     | '-' expr
  424     | expr "<<" expr
  425     | expr ">>" expr
  426     | expr "<<<" expr
  427     | expr ">>>" expr
  428     | expr '+' expr
  429     | expr '-' expr
  430     | expr '*' expr
  431     | expr '/' expr
  432     | expr '%' expr
  433     | expr '<' expr
  434     | expr '>' expr
  435     | expr "==" expr
  436     | expr "!=" expr
  437     | expr "<=" expr
  438     | expr ">=" expr
  439     | expr '&' expr
  440     | expr '|' expr
  441     | expr '^' expr
  442     | expr "&&" expr
  443     | expr "||" expr
  444     | expr "^^" expr
  445     | expr ".." expr
  446     | "++" expr
  447     | "--" expr
  448     | expr "++"
  449     | expr "--"
  450     | '(' expr_list optional_comma ')'
  451     | '(' make_struct_single ')'
  452     | expr '[' expr ']'
  453     | expr '.' '[' expr ']'
  454     | expr "?[" expr ']'
  455     | expr '.' "?[" expr ']'
  456     | expr "?." "name"
  457     | expr '.' "?." "name"
  458     | func_addr_expr
  459     | expr_call
  460     | '*' expr
  461     | "deref" '(' expr ')'
  462     | "addr" '(' expr ')'
  463     | expr_generator
  464     | expr "??" expr
  465     | expr '?' expr ':' expr

  466 $@34: %empty

  467 $@35: %empty

  468 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr "is" basic_type_declaration
  470     | expr "is" "name"
  471     | expr "as" "name"

  472 $@36: %empty

  473 $@37: %empty

  474 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr "as" basic_type_declaration
  476     | expr '?' "as" "name"

  477 $@38: %empty

  478 $@39: %empty

  479 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr '?' "as" basic_type_declaration
  481     | expr_type_info
  482     | expr_type_decl
  483     | expr_cast
  484     | expr_new
  485     | expr_method_call
  486     | expr_named_call
  487     | expr_full_block
  488     | expr "<|" expr
  489     | expr "|>" expr
  490     | expr "|>" basic_type_declaration
  491     | expr_call_pipe
  492     | "unsafe" '(' expr ')'

  493 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  494               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  495               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  496 expr_mtag: "$$" '(' expr ')'
  497          | "$i" '(' expr ')'
  498          | "$v" '(' expr ')'
  499          | "$b" '(' expr ')'
  500          | "$a" '(' expr ')'
  501          | "..."
  502          | "$c" '(' expr ')' '(' ')'
  503          | "$c" '(' expr ')' '(' expr_list ')'
  504          | expr '.' "$f" '(' expr ')'
  505          | expr "?." "$f" '(' expr ')'
  506          | expr '.' '.' "$f" '(' expr ')'
  507          | expr '.' "?." "$f" '(' expr ')'
  508          | expr "as" "$f" '(' expr ')'
  509          | expr '?' "as" "$f" '(' expr ')'
  510          | expr "is" "$f" '(' expr ')'
  511          | '@' '@' "$c" '(' expr ')'

  512 optional_field_annotation: %empty
  513                          | metadata_argument_list

  514 optional_override: %empty
  515                  | "override"
  516                  | "sealed"

  517 optional_constant: %empty
  518                  | "const"

  519 optional_public_or_private_member_variable: %empty
  520                                           | "public"
  521                                           | "private"

  522 optional_static_member_variable: %empty
  523                                | "static"

  524 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  525 struct_variable_declaration_list: %empty
  526                                 | struct_variable_declaration_list "new line, semicolon"

  527 $@40: %empty

  528 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON

  529 $@41: %empty

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON

  531 $@42: %empty

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

  533 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  534 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  535                                   | "$a" '(' expr ')'

  536 function_argument_list: function_argument_declaration_no_type
  537                       | function_argument_declaration_type
  538                       | function_argument_declaration_no_type ';' function_argument_list
  539                       | function_argument_declaration_type ';' function_argument_list
  540                       | function_argument_declaration_type ',' function_argument_list

  541 tuple_type: type_declaration
  542           | "name" ':' type_declaration

  543 tuple_type_list: tuple_type
  544                | tuple_type_list c_or_s tuple_type

  545 tuple_alias_type_list: %empty
  546                      | tuple_type
  547                      | tuple_alias_type_list semis tuple_type

  548 variant_type: "name" ':' type_declaration

  549 variant_type_list: variant_type
  550                  | variant_type_list c_or_s variant_type

  551 variant_alias_type_list: %empty
  552                        | variant_type
  553                        | variant_alias_type_list semis variant_type

  554 copy_or_move: '='
  555             | "<-"

  556 variable_declaration_no_type: variable_name_with_pos_list
  557                             | variable_name_with_pos_list '&'
  558                             | variable_name_with_pos_list copy_or_move expr

  559 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  560                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  561 variable_declaration: variable_declaration_type
  562                     | variable_declaration_no_type

  563 copy_or_move_or_clone: '='
  564                      | "<-"
  565                      | ":="

  566 optional_ref: %empty
  567             | '&'

  568 let_variable_name_with_pos_list: "name"
  569                                | "$i" '(' expr ')'
  570                                | "name" "aka" "name"
  571                                | let_variable_name_with_pos_list ',' "name"
  572                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  573 global_let_variable_name_with_pos_list: "name"
  574                                       | global_let_variable_name_with_pos_list ',' "name"

  575 variable_declaration_list: %empty
  576                          | variable_declaration_list SEMICOLON
  577                          | variable_declaration_list let_variable_declaration

  578 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  579                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  580                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  581 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  582                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  583                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  584 optional_shared: %empty
  585                | "shared"

  586 optional_public_or_private_variable: %empty
  587                                    | "private"
  588                                    | "public"

  589 global_variable_declaration_list: %empty
  590                                 | global_variable_declaration_list SEMICOLON

  591 $@43: %empty

  592 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration

  593 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  594 $@44: %empty

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

  596 enum_expression: "name"
  597                | "name" '=' expr

  598 commas: COMMA
  599       | commas COMMA

  600 enum_list: %empty
  601          | enum_expression
  602          | enum_list commas enum_expression

  603 optional_public_or_private_alias: %empty
  604                                 | "private"
  605                                 | "public"

  606 $@45: %empty

  607 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration

  608 alias_declaration: "typedef" single_alias SEMICOLON

  609 optional_public_or_private_enum: %empty
  610                                | "private"
  611                                | "public"

  612 enum_name: "name"

  613 optional_enum_basic_type_declaration: %empty
  614                                     | ':' enum_basic_type_declaration

  615 optional_commas: %empty
  616                | commas

  617 emit_commas: "new line, comma"
  618            | emit_commas "new line, comma"

  619 optional_emit_commas: %empty
  620                     | emit_commas

  621 $@46: %empty

  622 $@47: %empty

  623 $@48: %empty

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

  625 optional_structure_parent: %empty
  626                          | ':' name_in_namespace

  627 optional_sealed: %empty
  628                | "sealed"

  629 structure_name: optional_sealed "name" optional_structure_parent

  630 class_or_struct: "class"
  631                | "struct"
  632                | "template" "class"
  633                | "template" "struct"

  634 optional_public_or_private_structure: %empty
  635                                     | "private"
  636                                     | "public"

  637 optional_struct_variable_declaration_list: ';'
  638                                          | '{' struct_variable_declaration_list '}'

  639 $@49: %empty

  640 $@50: %empty

  641 $@51: %empty

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

  643 variable_name_with_pos_list: "name"
  644                            | "$i" '(' expr ')'
  645                            | "name" "aka" "name"
  646                            | variable_name_with_pos_list ',' "name"
  647                            | variable_name_with_pos_list ',' "name" "aka" "name"

  648 basic_type_declaration: "bool"
  649                       | "string"
  650                       | "int"
  651                       | "int8"
  652                       | "int16"
  653                       | "int64"
  654                       | "int2"
  655                       | "int3"
  656                       | "int4"
  657                       | "uint"
  658                       | "uint8"
  659                       | "uint16"
  660                       | "uint64"
  661                       | "uint2"
  662                       | "uint3"
  663                       | "uint4"
  664                       | "float"
  665                       | "float2"
  666                       | "float3"
  667                       | "float4"
  668                       | "void"
  669                       | "range"
  670                       | "urange"
  671                       | "range64"
  672                       | "urange64"
  673                       | "double"
  674                       | "bitfield"

  675 enum_basic_type_declaration: "int"
  676                            | "int8"
  677                            | "int16"
  678                            | "uint"
  679                            | "uint8"
  680                            | "uint16"
  681                            | "int64"
  682                            | "uint64"

  683 structure_type_declaration: name_in_namespace

  684 auto_type_declaration: "auto"
  685                      | "auto" '(' "name" ')'
  686                      | "$t" '(' expr ')'

  687 bitfield_bits: "name"
  688              | bitfield_bits ';' "name"

  689 bitfield_alias_bits: %empty
  690                    | "name"
  691                    | bitfield_alias_bits commas "name"

  692 $@52: %empty

  693 $@53: %empty

  694 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53

  695 c_or_s: COMMA
  696       | SEMICOLON

  697 table_type_pair: type_declaration
  698                | type_declaration c_or_s type_declaration

  699 dim_list: '[' expr ']'
  700         | '[' ']'
  701         | dim_list '[' expr ']'
  702         | dim_list '[' ']'

  703 type_declaration_no_options: type_declaration_no_options_no_dim
  704                            | type_declaration_no_options_no_dim dim_list

  705 type_declaration_no_options_no_dim: basic_type_declaration
  706                                   | auto_type_declaration
  707                                   | bitfield_type_declaration
  708                                   | structure_type_declaration

  709 $@54: %empty

  710 $@55: %empty

  711 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55
  712                                   | "typedecl" '(' expr ')'
  713                                   | '$' name_in_namespace '(' optional_expr_list ')'

  714 $@56: %empty

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  716                                   | type_declaration_no_options '-' '[' ']'
  717                                   | type_declaration_no_options "explicit"
  718                                   | type_declaration_no_options "const"
  719                                   | type_declaration_no_options '-' "const"
  720                                   | type_declaration_no_options '&'
  721                                   | type_declaration_no_options '-' '&'
  722                                   | type_declaration_no_options '#'
  723                                   | type_declaration_no_options "implicit"
  724                                   | type_declaration_no_options '-' '#'
  725                                   | type_declaration_no_options "==" "const"
  726                                   | type_declaration_no_options "==" '&'
  727                                   | type_declaration_no_options '?'

  728 $@57: %empty

  729 $@58: %empty

  730 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58
  731                                   | type_declaration_no_options "??"

  732 $@59: %empty

  733 $@60: %empty

  734 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60

  735 $@61: %empty

  736 $@62: %empty

  737 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62

  738 $@63: %empty

  739 $@64: %empty

  740 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64
  741                                   | "block"

  742 $@65: %empty

  743 $@66: %empty

  744 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66

  745 $@67: %empty

  746 $@68: %empty

  747 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  748                                   | "function"

  749 $@69: %empty

  750 $@70: %empty

  751 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70

  752 $@71: %empty

  753 $@72: %empty

  754 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72
  755                                   | "lambda"

  756 $@73: %empty

  757 $@74: %empty

  758 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74

  759 $@75: %empty

  760 $@76: %empty

  761 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76

  762 $@77: %empty

  763 $@78: %empty

  764 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78

  765 $@79: %empty

  766 $@80: %empty

  767 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80

  768 type_declaration: type_declaration_no_options
  769                 | type_declaration '|' type_declaration_no_options
  770                 | type_declaration '|' '#'

  771 $@81: %empty

  772 $@82: %empty

  773 $@83: %empty

  774 $@84: %empty

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

  776 $@85: %empty

  777 $@86: %empty

  778 $@87: %empty

  779 $@88: %empty

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

  781 $@89: %empty

  782 $@90: %empty

  783 $@91: %empty

  784 $@92: %empty

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

  786 make_decl: make_struct_decl
  787          | make_dim_decl
  788          | make_table_decl
  789          | array_comprehension
  790          | make_tuple_call

  791 make_struct_fields: "name" copy_or_move expr
  792                   | "name" ":=" expr
  793                   | make_struct_fields ',' "name" copy_or_move expr
  794                   | make_struct_fields ',' "name" ":=" expr
  795                   | "$f" '(' expr ')' copy_or_move expr
  796                   | "$f" '(' expr ')' ":=" expr
  797                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  799 make_variant_dim: %empty
  800                 | make_struct_fields

  801 make_struct_single: make_struct_fields

  802 make_struct_dim_list: '(' make_struct_fields ')'
  803                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  804 make_struct_dim_decl: make_struct_fields
  805                     | make_struct_dim_list optional_comma

  806 optional_make_struct_dim_decl: make_struct_dim_decl
  807                              | %empty

  808 use_initializer: %empty
  809                | "uninitialized"

  810 $@93: %empty

  811 $@94: %empty

  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  813 $@95: %empty

  814 $@96: %empty

  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  816 $@97: %empty

  817 $@98: %empty

  818 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

  819 $@99: %empty

  820 $@100: %empty

  821 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer

  822 make_map_tuple: expr "=>" expr
  823               | expr

  824 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  825 $@101: %empty

  826 $@102: %empty

  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  828 make_dim_decl: '[' optional_expr_list ']'

  829 $@103: %empty

  830 $@104: %empty

  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  832 $@105: %empty

  833 $@106: %empty

  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

  835 $@107: %empty

  836 $@108: %empty

  837 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  838              | "array" '(' expr_list optional_comma ')'

  839 $@109: %empty

  840 $@110: %empty

  841 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'
  842              | "fixed_array" '(' expr_list optional_comma ')'

  843 $@111: %empty

  844 $@112: %empty

  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

  846 expr_map_tuple_list: make_map_tuple
  847                    | expr_map_tuple_list ',' make_map_tuple

  848 $@113: %empty

  849 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  850                | "table" '(' expr_map_tuple_list optional_comma ')'
  851                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  852                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  853 array_comprehension_where: %empty
  854                          | ';' "where" expr

  855 optional_comma: %empty
  856               | ','

  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  858                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  859                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 137 155 420
    '#' (35) 722 724 770
    '$' (36) 24 339 713 715
    '%' (37) 45 49 175 432
    '&' (38) 183 342 439 557 567 720 721 726
    '(' (40) 72 97 98 100 103 105 125 135 141 150 151 292 293 294 295 314 315 331 332 333 346 350 380 381 382 383 385 395 396 397 398 399 403 404 405 406 407 408 409 450 451 461 462 492 493 494 496 497 498 499 500 502 503 504 505 506 507 508 509 510 511 535 569 644 685 686 712 713 715 795 796 797 798 802 803 812 815 818 824 827 831 834 837 838 841 842 845 850 851 852 857 858 859
    ')' (41) 72 97 98 100 103 105 125 135 141 150 151 292 293 294 295 314 315 331 332 333 346 350 380 381 382 383 385 395 396 397 398 399 403 404 405 406 407 408 409 450 451 461 462 492 493 494 496 497 498 499 500 502 503 504 505 506 507 508 509 510 511 535 569 644 685 686 712 713 715 795 796 797 798 802 803 812 815 818 824 827 831 834 837 838 841 842 845 850 851 852 857 858 859
    '*' (42) 173 430 460
    '+' (43) 171 422 428
    ',' (44) 16 58 114 127 144 313 335 348 381 540 571 572 574 646 647 793 794 797 798 803 847 856
    '-' (45) 172 423 429 716 719 721 724
    '.' (46) 50 200 202 203 393 394 395 396 397 398 399 402 453 455 457 504 506 507
    '/' (47) 51 174 431
    ':' (58) 37 60 61 153 314 465 542 548 559 560 578 579 581 582 614 626
    ';' (59) 18 538 539 637 688 854 857 858 859
    '<' (60) 176 289 321 324 327 330 332 333 389 392 433 468 474 479 493 494 495 694 711 715 730 734 737 740 744 747 751 754 758 761 764 767 812 815 818 821 827 831 834 837 841 845 851 852
    '=' (61) 106 118 119 120 121 122 123 125 343 362 554 563 597 607
    '>' (62) 177 289 321 324 327 330 332 333 389 392 434 468 474 479 493 494 495 694 711 715 730 734 737 740 744 747 751 754 758 761 764 767 812 815 818 821 827 831 834 837 841 845 851 852
    '?' (63) 212 213 465 476 479 480 509 727
    '@' (64) 128 129 340 341 386 389 392 511
    '[' (91) 146 148 198 380 381 397 452 453 699 700 701 702 716 828 857 858
    ']' (93) 146 148 198 199 380 381 397 452 453 454 455 699 700 701 702 716 828 857 858
    '^' (94) 185 441
    '{' (123) 88 93 249 252 318 353 593 624 638 775 780 785 849 859
    '|' (124) 184 440 769 770
    '}' (125) 88 93 249 252 318 353 593 624 638 775 780 785 849 859
    '~' (126) 156 421
    error (256) 275 402
    "lexer error" (258)
    "capture" (259) 350
    "struct" (260) 631 633 812 831
    "class" (261) 630 632 815
    "let" (262) 305 308
    "def" (263) 239 530 532
    "while" (264) 103
    "if" (265) 73 98
    "static_if" (266) 74
    "else" (267) 71 76
    "for" (268) 100 857 858 859
    "recover" (269) 304
    "true" (270) 111 122 416
    "false" (271) 112 123 417
    "new" (272) 291 292 293 294 295 296
    "typeinfo" (273) 331 332 333
    "type" (274) 116 330 468 474 479 711
    "in" (275) 100 117 857 858 859
    "is" (276) 208 210 468 469 470 510
    "as" (277) 53 209 211 212 213 471 474 475 476 479 480 508 509
    "elif" (278) 64
    "static_elif" (279) 65
    "array" (280) 734 831 834 837 838 841
    "return" (281) 299 300 301
    "null" (282) 410
    "break" (283) 297
    "try" (284) 304
    "options" (285) 46
    "table" (286) 737 850 851 852
    "expect" (287) 56
    "const" (288) 518 718 719 725
    "require" (289) 47 131
    "operator" (290) 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213
    "enum" (291) 624
    "finally" (292) 249
    "delete" (293) 206 285 286
    "deref" (294) 461
    "typedef" (295) 608
    "typedecl" (296) 712
    "with" (297) 105
    "aka" (298) 570 572 645 647
    "assume" (299) 106
    "cast" (300) 321
    "override" (301) 515
    "abstract" (302) 530
    "upcast" (303) 324
    "iterator" (304) 740 858
    "var" (305) 306 309
    "addr" (306) 462
    "continue" (307) 298
    "where" (308) 854
    "pass" (309) 272
    "reinterpret" (310) 327
    "module" (311) 26
    "public" (312) 22 55 242 520 588 605 611 636
    "label" (313) 61 62
    "goto" (314) 62 63
    "implicit" (315) 723
    "explicit" (316) 286 717
    "shared" (317) 585
    "private" (318) 23 132 241 521 587 604 610 635
    "smart_ptr" (319) 730
    "unsafe" (320) 101 492
    "inscope" (321) 310
    "static" (322) 523
    "fixed_array" (323) 842 845
    "default" (324) 821
    "uninitialized" (325) 295 404 406 809
    "bool" (326) 214 648
    "void" (327) 668
    "string" (328) 215 649
    "auto" (329) 684 685
    "int" (330) 216 650 675
    "int2" (331) 217 654
    "int3" (332) 218 655
    "int4" (333) 219 656
    "uint" (334) 220 657 678
    "bitfield" (335) 674 694 785
    "uint2" (336) 221 661
    "uint3" (337) 222 662
    "uint4" (338) 223 663
    "float" (339) 224 664
    "float2" (340) 225 665
    "float3" (341) 226 666
    "float4" (342) 227 667
    "range" (343) 228 669
    "urange" (344) 229 670
    "range64" (345) 230 671
    "urange64" (346) 231 672
    "block" (347) 741 744 747
    "int64" (348) 232 653 681
    "uint64" (349) 233 660 682
    "double" (350) 234 673
    "function" (351) 748 751 754
    "lambda" (352) 755 758 761
    "int8" (353) 235 651 676
    "uint8" (354) 236 658 679
    "int16" (355) 237 652 677
    "uint16" (356) 238 659 680
    "tuple" (357) 764 775 824 827 834
    "variant" (358) 767 780 818 837
    "generator" (359) 493 494 495
    "yield" (360) 302 303
    "sealed" (361) 516 628
    "template" (362) 133 632 633
    "+=" (363) 157 371
    "-=" (364) 158 372
    "/=" (365) 160 374
    "*=" (366) 159 373
    "%=" (367) 161 375
    "&=" (368) 162 365
    "|=" (369) 163 366
    "^=" (370) 164 367
    "<<" (371) 190 424
    ">>" (372) 191 425
    "++" (373) 186 188 446 448
    "--" (374) 187 189 447 449
    "<=" (375) 181 437
    "<<=" (376) 192 376
    ">>=" (377) 193 377
    ">=" (378) 182 438
    "==" (379) 179 435 725 726
    "!=" (380) 180 436
    "->" (381) 382 383
    "<-" (382) 301 303 338 344 363 555 564
    "??" (383) 207 464 731
    "?." (384) 201 204 456 457 505 507
    "?[" (385) 199 454 455
    "<|" (386) 488
    "|>" (387) 142 489 490
    ":=" (388) 203 205 345 364 565 792 794 796 798
    "<<<" (389) 194 426
    ">>>" (390) 195 427
    "<<<=" (391) 196 378
    ">>>=" (392) 197 379
    "=>" (393) 337 338 822
    "::" (394) 283 284
    "&&" (395) 138 168 442
    "||" (396) 139 169 443
    "^^" (397) 140 170 444
    "&&=" (398) 165 368
    "||=" (399) 166 369
    "^^=" (400) 167 370
    ".." (401) 178 445
    "$$" (402) 496
    "$i" (403) 385 497 569 644
    "$v" (404) 498
    "$b" (405) 499
    "$a" (406) 500 535
    "$t" (407) 686
    "$c" (408) 502 503 511
    "$f" (409) 504 505 506 507 508 509 510 795 796 797 798
    "..." (410) 501
    "integer constant" <i> (411) 59 60 61 62 109 120 354
    "long integer constant" <i64> (412) 356
    "unsigned integer constant" <ui> (413) 355
    "unsigned long integer constant" <ui64> (414) 357
    "unsigned int8 constant" <ui> (415) 358
    "floating point constant" <fd> (416) 110 121 359
    "double constant" <d> (417) 360
    "name" <s> (418) 25 48 50 51 53 106 108 115 119 154 202 203 204 210 211 213 282 283 284 312 313 332 333 342 343 344 345 346 382 383 393 394 395 396 397 456 457 470 471 476 542 548 568 570 571 572 573 574 596 597 607 612 629 643 645 646 647 685 687 688 690 691 775 780 785 791 792 793 794
    "new line, comma" (419) 17 617 618
    "new line, semicolon" (420) 19 66 67 526
    "start of the string" (421) 31 32 41
    STRING_CHARACTER <ch> (422) 27 29 34 42 43
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 41
    "{" (425) 40
    "}" (426) 40
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 598 599 695
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 82 83 90 95 98 254 255 256 261 263 264 265 266 270 271 272 314 315 528 530 576 578 579 580 581 582 583 590 608 696
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 39
    string_constant <s> (217)
        on left: 31 32
        on right: 107 118
    format_string <s> (218)
        on left: 33 34
        on right: 34 37
    optional_format_string <s> (219)
        on left: 35 37
        on right: 40
    $@1 (220)
        on left: 36
        on right: 37
    string_builder_body <pExpression> (221)
        on left: 38 39 40
        on right: 39 40 41
    string_builder <pExpression> (222)
        on left: 41
        on right: 414
    reader_character_sequence (223)
        on left: 42 43
        on right: 43 45
    expr_reader <pExpression> (224)
        on left: 45
        on right: 20 413
    $@2 (225)
        on left: 44
        on right: 45
    options_declaration (226)
        on left: 46
        on right: 9
    require_declaration (227)
        on left: 47
        on right: 8
    require_module_name <s> (228)
        on left: 48 49 50 51
        on right: 49 50 51 52 53
    require_module (229)
        on left: 52 53
        on right: 47
    is_public_module <b> (230)
        on left: 54 55
        on right: 52 53
    expect_declaration (231)
        on left: 56
        on right: 7
    expect_list (232)
        on left: 57 58
        on right: 56 58
    expect_error (233)
        on left: 59 60
        on right: 57 58
    expression_label <pExpression> (234)
        on left: 61
        on right: 270
    expression_goto <pExpression> (235)
        on left: 62 63
        on right: 271
    elif_or_static_elif <b> (236)
        on left: 64 65
        on right: 72
    emit_semis (237)
        on left: 66 67
        on right: 67 69
    optional_emit_semis (238)
        on left: 68 69
        on right: 71 72 97 100 101 103 105 128 129 148 245 351 352 495 532 642 775 780 849
    expression_else <pExpression> (239)
        on left: 70 71 72
        on right: 72 97
    if_or_static_if <b> (240)
        on left: 73 74
        on right: 97
    expression_else_one_liner <pExpression> (241)
        on left: 75 76
        on right: 98
    expression_if_one_liner <pExpression> (242)
        on left: 77 78 79 80 81
        on right: 76 90 95 98
    semis (243)
        on left: 82 83
        on right: 83 85 547 553
    optional_semis (244)
        on left: 84 85
        on right: 775 780
    expression_if_block <pExpression> (245)
        on left: 88 90
        on right: 97
    $@3 (246)
        on left: 86
        on right: 88
    $@4 (247)
        on left: 87
        on right: 88
    $@5 (248)
        on left: 89
        on right: 90
    expression_else_block <pExpression> (249)
        on left: 93 95
        on right: 71 72
    $@6 (250)
        on left: 91
        on right: 93
    $@7 (251)
        on left: 92
        on right: 93
    $@8 (252)
        on left: 94
        on right: 95
    expression_if_then_else <pExpression> (253)
        on left: 97
        on right: 267
    $@9 (254)
        on left: 96
        on right: 97
    expression_if_then_else_oneliner <pExpression> (255)
        on left: 98
        on right: 268
    expression_for_loop <pExpression> (256)
        on left: 100
        on right: 262
    $@10 (257)
        on left: 99
        on right: 100
    expression_unsafe <pExpression> (258)
        on left: 101
        on right: 259
    expression_while_loop <pExpression> (259)
        on left: 103
        on right: 258
    $@11 (260)
        on left: 102
        on right: 103
    expression_with <pExpression> (261)
        on left: 105
        on right: 260
    $@12 (262)
        on left: 104
        on right: 105
    expression_with_alias <pExpression> (263)
        on left: 106
        on right: 261
    annotation_argument_value <aa> (264)
        on left: 107 108 109 110 111 112
        on right: 113 114
    annotation_argument_value_list <aaList> (265)
        on left: 113 114
        on right: 114 125
    annotation_argument_name <s> (266)
        on left: 115 116 117
        on right: 118 119 120 121 122 123 124 125
    annotation_argument <aa> (267)
        on left: 118 119 120 121 122 123 124 125
        on right: 126 127 128 129
    annotation_argument_list <aaList> (268)
        on left: 126 127
        on right: 46 127 135
    metadata_argument_list <aaList> (269)
        on left: 128 129
        on right: 129 513
    annotation_declaration_name <s> (270)
        on left: 130 131 132 133
        on right: 134 135
    annotation_declaration_basic <fa> (271)
        on left: 134 135
        on right: 136
    annotation_declaration <fa> (272)
        on left: 136 137 138 139 140 141 142
        on right: 137 138 139 140 141 142 143 144
    annotation_list <faList> (273)
        on left: 143 144
        on right: 144 146 148
    optional_annotation_list <faList> (274)
        on left: 145 146
        on right: 351 352
    optional_annotation_list_with_emit_semis <faList> (275)
        on left: 147 148
        on right: 239 530 532 624 642
    optional_function_argument_list <pVarDeclList> (276)
        on left: 149 150 151
        on right: 243 351 352 392 747 754 761
    optional_function_type <pTypeDecl> (277)
        on left: 152 153
        on right: 243 351 352 392 747 754 761
    function_name <s> (278)
        on left: 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 243
    global_function_declaration (279)
        on left: 239
        on right: 6
    optional_public_or_private_function <b> (280)
        on left: 240 241 242
        on right: 245
    function_declaration_header <pFuncDecl> (281)
        on left: 243
        on right: 245 530 532
    function_declaration <pFuncDecl> (282)
        on left: 245
        on right: 239
    $@13 (283)
        on left: 244
        on right: 245
    expression_block_finally <pExpression> (284)
        on left: 246 249
        on right: 88 93 252
    $@14 (285)
        on left: 247
        on right: 249
    $@15 (286)
        on left: 248
        on right: 249
    expression_block <pExpression> (287)
        on left: 252
        on right: 100 101 103 105 245 304 336 352 495 532
    $@16 (288)
        on left: 250
        on right: 252
    $@17 (289)
        on left: 251
        on right: 252
    expr_call_pipe <pExpression> (290)
        on left: 253
        on right: 491
    expression_any <pExpression> (291)
        on left: 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272
        on right: 274
    expressions <pExpression> (292)
        on left: 273 274 275
        on right: 88 93 249 252 274 275 353
    optional_expr_list <pExpression> (293)
        on left: 276 277
        on right: 713 715 828 841
    optional_expr_map_tuple_list <pExpression> (294)
        on left: 278 279
        on right: 849 851 852
    type_declaration_no_options_list <pTypeDeclList> (295)
        on left: 280 281
        on right: 281 715
    name_in_namespace <s> (296)
        on left: 282 283 284
        on right: 45 130 331 332 333 380 381 384 403 404 405 406 407 411 626 683 713 715
    expression_delete <pExpression> (297)
        on left: 285 286
        on right: 256
    new_type_declaration <pTypeDecl> (298)
        on left: 289 290
        on right: 291 292 293 294 295
    $@18 (299)
        on left: 287
        on right: 289
    $@19 (300)
        on left: 288
        on right: 289
    expr_new <pExpression> (301)
        on left: 291 292 293 294 295 296
        on right: 484
    expression_break <pExpression> (302)
        on left: 297
        on right: 80 263
    expression_continue <pExpression> (303)
        on left: 298
        on right: 81 264
    expression_return <pExpression> (304)
        on left: 299 300 301
        on right: 78 265
    expression_yield <pExpression> (305)
        on left: 302 303
        on right: 79 266
    expression_try_catch <pExpression> (306)
        on left: 304
        on right: 269
    kwd_let_var_or_nothing <b> (307)
        on left: 305 306 307
        on right: 533 534
    kwd_let <b> (308)
        on left: 308 309
        on right: 316 317 318 593 595
    optional_in_scope <b> (309)
        on left: 310 311
        on right: 316 317 318
    tuple_expansion <pNameList> (310)
        on left: 312 313
        on right: 313 314 315
    tuple_expansion_variable_declaration <pVarDecl> (311)
        on left: 314 315
        on right: 317
    expression_let <pExpression> (312)
        on left: 316 317 318
        on right: 257
    expr_cast <pExpression> (313)
        on left: 321 324 327
        on right: 483
    $@20 (314)
        on left: 319
        on right: 321
    $@21 (315)
        on left: 320
        on right: 321
    $@22 (316)
        on left: 322
        on right: 324
    $@23 (317)
        on left: 323
        on right: 324
    $@24 (318)
        on left: 325
        on right: 327
    $@25 (319)
        on left: 326
        on right: 327
    expr_type_decl <pExpression> (320)
        on left: 330
        on right: 482
    $@26 (321)
        on left: 328
        on right: 330
    $@27 (322)
        on left: 329
        on right: 330
    expr_type_info <pExpression> (323)
        on left: 331 332 333
        on right: 481
    expr_list <pExpression> (324)
        on left: 334 335
        on right: 100 277 293 335 381 383 396 399 407 409 450 503 824 838 842 845 857 858 859
    block_or_simple_block <pExpression> (325)
        on left: 336 337 338
        on right: 351
    block_or_lambda <i> (326)
        on left: 339 340 341
        on right: 351 352
    capture_entry <pCapt> (327)
        on left: 342 343 344 345 346
        on right: 347 348
    capture_list <pCaptList> (328)
        on left: 347 348
        on right: 348 350
    optional_capture_list <pCaptList> (329)
        on left: 349 350
        on right: 351 352 493 494 495
    expr_full_block <pExpression> (330)
        on left: 351
        on right: 487
    expr_full_block_assumed_piped <pExpression> (331)
        on left: 352 353
        on right: 253
    expr_numeric_const <pExpression> (332)
        on left: 354 355 356 357 358 359 360
        on right: 412
    expr_assign <pExpression> (333)
        on left: 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379
        on right: 255
    expr_named_call <pExpression> (334)
        on left: 380 381
        on right: 486
    expr_method_call <pExpression> (335)
        on left: 382 383
        on right: 485
    func_addr_name <pExpression> (336)
        on left: 384 385
        on right: 386 389 392
    func_addr_expr <pExpression> (337)
        on left: 386 389 392
        on right: 458
    $@28 (338)
        on left: 387
        on right: 389
    $@29 (339)
        on left: 388
        on right: 389
    $@30 (340)
        on left: 390
        on right: 392
    $@31 (341)
        on left: 391
        on right: 392
    expr_field <pExpression> (342)
        on left: 393 394 395 396 397 398 399 402
        on right: 418
    $@32 (343)
        on left: 400
        on right: 402
    $@33 (344)
        on left: 401
        on right: 402
    expr_call <pExpression> (345)
        on left: 403 404 405 406 407 408 409
        on right: 253 459
    expr <pExpression> (346)
        on left: 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 468 469 470 471 474 475 476 479 480 481 482 483 484 485 486 487 488 489 490 491 492
        on right
    $@34 (347)
        on left: 466
        on right: 468
    $@35 (348)
        on left: 467
        on right: 468
    $@36 (349)
        on left: 472
        on right: 474
    $@37 (350)
        on left: 473
        on right: 474
    $@38 (351)
        on left: 477
        on right: 479
    $@39 (352)
        on left: 478
        on right: 479
    expr_generator <pExpression> (353)
        on left: 493 494 495
        on right: 463
    expr_mtag <pExpression> (354)
        on left: 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511
        on right: 419
    optional_field_annotation <aaList> (355)
        on left: 512 513
        on right: 524 533 534 592 595
    optional_override <i> (356)
        on left: 514 515 516
        on right: 524 532
    optional_constant <b> (357)
        on left: 517 518
        on right: 530 532
    optional_public_or_private_member_variable <b> (358)
        on left: 519 520 521
        on right: 524 530 532
    optional_static_member_variable <b> (359)
        on left: 522 523
        on right: 524 532
    structure_variable_declaration <pVarDecl> (360)
        on left: 524
        on right: 528
    struct_variable_declaration_list <pVarDeclList> (361)
        on left: 525 526 528 530 532
        on right: 526 528 530 532 638
    $@40 (362)
        on left: 527
        on right: 528
    $@41 (363)
        on left: 529
        on right: 530
    $@42 (364)
        on left: 531
        on right: 532
    function_argument_declaration_no_type <pVarDecl> (365)
        on left: 533
        on right: 536 538
    function_argument_declaration_type <pVarDecl> (366)
        on left: 534 535
        on right: 537 539 540
    function_argument_list <pVarDeclList> (367)
        on left: 536 537 538 539 540
        on right: 151 538 539 540
    tuple_type <pVarDecl> (368)
        on left: 541 542
        on right: 543 544 546 547
    tuple_type_list <pVarDeclList> (369)
        on left: 543 544
        on right: 544 764 827 834
    tuple_alias_type_list <pVarDeclList> (370)
        on left: 545 546 547
        on right: 547 775
    variant_type <pVarDecl> (371)
        on left: 548
        on right: 549 550 552 553
    variant_type_list <pVarDeclList> (372)
        on left: 549 550
        on right: 550 767 818 837
    variant_alias_type_list <pVarDeclList> (373)
        on left: 551 552 553
        on right: 553 780
    copy_or_move <b> (374)
        on left: 554 555
        on right: 558 560 791 793 795 797
    variable_declaration_no_type <pVarDecl> (375)
        on left: 556 557 558
        on right: 533 562
    variable_declaration_type <pVarDecl> (376)
        on left: 559 560
        on right: 534 561
    variable_declaration <pVarDecl> (377)
        on left: 561 562
        on right: 524
    copy_or_move_or_clone <i> (378)
        on left: 563 564 565
        on right: 314 315 579 580 582 583
    optional_ref <b> (379)
        on left: 566 567
        on right: 315 580 583
    let_variable_name_with_pos_list <pNameWithPosList> (380)
        on left: 568 569 570 571 572
        on right: 571 572 578 579 580
    global_let_variable_name_with_pos_list <pNameWithPosList> (381)
        on left: 573 574
        on right: 574 581 582 583
    variable_declaration_list <pVarDeclList> (382)
        on left: 575 576 577
        on right: 318 576 577
    let_variable_declaration <pVarDecl> (383)
        on left: 578 579 580
        on right: 316 577 592
    global_let_variable_declaration <pVarDecl> (384)
        on left: 581 582 583
        on right: 595
    optional_shared <b> (385)
        on left: 584 585
        on right: 26 593 595
    optional_public_or_private_variable <b> (386)
        on left: 586 587 588
        on right: 593 595
    global_variable_declaration_list <pVarDeclList> (387)
        on left: 589 590 592
        on right: 590 592 593
    $@43 (388)
        on left: 591
        on right: 592
    global_let (389)
        on left: 593 595
        on right: 5
    $@44 (390)
        on left: 594
        on right: 595
    enum_expression <pEnumPair> (391)
        on left: 596 597
        on right: 601 602
    commas (392)
        on left: 598 599
        on right: 599 602 616 691
    enum_list <pEnum> (393)
        on left: 600 601 602
        on right: 602 624
    optional_public_or_private_alias <b> (394)
        on left: 603 604 605
        on right: 607 775 780 785
    single_alias (395)
        on left: 607
        on right: 608
    $@45 (396)
        on left: 606
        on right: 607
    alias_declaration (397)
        on left: 608
        on right: 10
    optional_public_or_private_enum <b> (398)
        on left: 609 610 611
        on right: 624
    enum_name <pEnum> (399)
        on left: 612
        on right: 624
    optional_enum_basic_type_declaration <type> (400)
        on left: 613 614
        on right: 624
    optional_commas (401)
        on left: 615 616
        on right: 624 785
    emit_commas (402)
        on left: 617 618
        on right: 618 620
    optional_emit_commas (403)
        on left: 619 620
        on right: 624 785
    enum_declaration (404)
        on left: 624
        on right: 4
    $@46 (405)
        on left: 621
        on right: 624
    $@47 (406)
        on left: 622
        on right: 624
    $@48 (407)
        on left: 623
        on right: 624
    optional_structure_parent <s> (408)
        on left: 625 626
        on right: 629
    optional_sealed <b> (409)
        on left: 627 628
        on right: 629
    structure_name <pStructure> (410)
        on left: 629
        on right: 642
    class_or_struct <i> (411)
        on left: 630 631 632 633
        on right: 642
    optional_public_or_private_structure <b> (412)
        on left: 634 635 636
        on right: 642
    optional_struct_variable_declaration_list <pVarDeclList> (413)
        on left: 637 638
        on right: 642
    structure_declaration (414)
        on left: 642
        on right: 3
    $@49 (415)
        on left: 639
        on right: 642
    $@50 (416)
        on left: 640
        on right: 642
    $@51 (417)
        on left: 641
        on right: 642
    variable_name_with_pos_list <pNameWithPosList> (418)
        on left: 643 644 645 646 647
        on right: 100 556 557 558 559 560 646 647 857 858 859
    basic_type_declaration <type> (419)
        on left: 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674
        on right: 398 399 408 409 469 475 480 490 705
    enum_basic_type_declaration <type> (420)
        on left: 675 676 677 678 679 680 681 682
        on right: 614
    structure_type_declaration <pTypeDecl> (421)
        on left: 683
        on right: 290 708
    auto_type_declaration <pTypeDecl> (422)
        on left: 684 685 686
        on right: 706
    bitfield_bits <pNameList> (423)
        on left: 687 688
        on right: 688 694
    bitfield_alias_bits <pNameList> (424)
        on left: 689 690 691
        on right: 691 785
    bitfield_type_declaration <pTypeDecl> (425)
        on left: 694
        on right: 707
    $@52 (426)
        on left: 692
        on right: 694
    $@53 (427)
        on left: 693
        on right: 694
    c_or_s (428)
        on left: 695 696
        on right: 281 333 544 550 698 852
    table_type_pair <aTypePair> (429)
        on left: 697 698
        on right: 737
    dim_list <pTypeDecl> (430)
        on left: 699 700 701 702
        on right: 701 702 704
    type_declaration_no_options <pTypeDecl> (431)
        on left: 703 704
        on right: 314 321 324 327 389 468 493 494 495 578 579 581 582 716 717 718 719 720 721 722 723 724 725 726 727 731 768 769 812 815 821 831 841 845 851 852
    type_declaration_no_options_no_dim <pTypeDecl> (432)
        on left: 705 706 707 708 711 712 713 715 716 717 718 719 720 721 722 723 724 725 726 727 730 731 734 737 740 741 744 747 748 751 754 755 758 761 764 767
        on right: 703 704
    $@54 (433)
        on left: 709
        on right: 711
    $@55 (434)
        on left: 710
        on right: 711
    $@56 (435)
        on left: 714
        on right: 715
    $@57 (436)
        on left: 728
        on right: 730
    $@58 (437)
        on left: 729
        on right: 730
    $@59 (438)
        on left: 732
        on right: 734
    $@60 (439)
        on left: 733
        on right: 734
    $@61 (440)
        on left: 735
        on right: 737
    $@62 (441)
        on left: 736
        on right: 737
    $@63 (442)
        on left: 738
        on right: 740
    $@64 (443)
        on left: 739
        on right: 740
    $@65 (444)
        on left: 742
        on right: 744
    $@66 (445)
        on left: 743
        on right: 744
    $@67 (446)
        on left: 745
        on right: 747
    $@68 (447)
        on left: 746
        on right: 747
    $@69 (448)
        on left: 749
        on right: 751
    $@70 (449)
        on left: 750
        on right: 751
    $@71 (450)
        on left: 752
        on right: 754
    $@72 (451)
        on left: 753
        on right: 754
    $@73 (452)
        on left: 756
        on right: 758
    $@74 (453)
        on left: 757
        on right: 758
    $@75 (454)
        on left: 759
        on right: 761
    $@76 (455)
        on left: 760
        on right: 761
    $@77 (456)
        on left: 762
        on right: 764
    $@78 (457)
        on left: 763
        on right: 764
    $@79 (458)
        on left: 765
        on right: 767
    $@80 (459)
        on left: 766
        on right: 767
    type_declaration <pTypeDecl> (460)
        on left: 768 769 770
        on right: 153 280 281 289 330 474 479 541 542 548 559 560 607 697 698 711 730 734 740 744 751 758 769 770
    tuple_alias_declaration (461)
        on left: 775
        on right: 12
    $@81 (462)
        on left: 771
        on right: 775
    $@82 (463)
        on left: 772
        on right: 775
    $@83 (464)
        on left: 773
        on right: 775
    $@84 (465)
        on left: 774
        on right: 775
    variant_alias_declaration (466)
        on left: 780
        on right: 11
    $@85 (467)
        on left: 776
        on right: 780
    $@86 (468)
        on left: 777
        on right: 780
    $@87 (469)
        on left: 778
        on right: 780
    $@88 (470)
        on left: 779
        on right: 780
    bitfield_alias_declaration (471)
        on left: 785
        on right: 13
    $@89 (472)
        on left: 781
        on right: 785
    $@90 (473)
        on left: 782
        on right: 785
    $@91 (474)
        on left: 783
        on right: 785
    $@92 (475)
        on left: 784
        on right: 785
    make_decl <pExpression> (476)
        on left: 786 787 788 789 790
        on right: 296 415
    make_struct_fields <pMakeStruct> (477)
        on left: 791 792 793 794 795 796 797 798
        on right: 380 381 397 793 794 797 798 800 801 802 803 804
    make_variant_dim <pExpression> (478)
        on left: 799 800
        on right: 818 837
    make_struct_single <pExpression> (479)
        on left: 801
        on right: 294 295 405 406 451
    make_struct_dim_list <pExpression> (480)
        on left: 802 803
        on right: 803 805
    make_struct_dim_decl <pExpression> (481)
        on left: 804 805
        on right: 806
    optional_make_struct_dim_decl <pExpression> (482)
        on left: 806 807
        on right: 812 815 827 831 834
    use_initializer <b> (483)
        on left: 808 809
        on right: 292 812 815 818 821 827 831 834
    make_struct_decl <pExpression> (484)
        on left: 812 815 818 821
        on right: 786
    $@93 (485)
        on left: 810
        on right: 812
    $@94 (486)
        on left: 811
        on right: 812
    $@95 (487)
        on left: 813
        on right: 815
    $@96 (488)
        on left: 814
        on right: 815
    $@97 (489)
        on left: 816
        on right: 818
    $@98 (490)
        on left: 817
        on right: 818
    $@99 (491)
        on left: 819
        on right: 821
    $@100 (492)
        on left: 820
        on right: 821
    make_map_tuple <pExpression> (493)
        on left: 822 823
        on right: 846 847 859
    make_tuple_call <pExpression> (494)
        on left: 824 827
        on right: 790
    $@101 (495)
        on left: 825
        on right: 827
    $@102 (496)
        on left: 826
        on right: 827
    make_dim_decl <pExpression> (497)
        on left: 828 831 834 837 838 841 842 845
        on right: 787
    $@103 (498)
        on left: 829
        on right: 831
    $@104 (499)
        on left: 830
        on right: 831
    $@105 (500)
        on left: 832
        on right: 834
    $@106 (501)
        on left: 833
        on right: 834
    $@107 (502)
        on left: 835
        on right: 837
    $@108 (503)
        on left: 836
        on right: 837
    $@109 (504)
        on left: 839
        on right: 841
    $@110 (505)
        on left: 840
        on right: 841
    $@111 (506)
        on left: 843
        on right: 845
    $@112 (507)
        on left: 844
        on right: 845
    expr_map_tuple_list <pExpression> (508)
        on left: 846 847
        on right: 279 847 850
    make_table_decl <pExpression> (509)
        on left: 849 850 851 852
        on right: 788
    $@113 (510)
        on left: 848
        on right: 849
    array_comprehension_where <pExpression> (511)
        on left: 853 854
        on right: 857 858 859
    optional_comma <b> (512)
        on left: 855 856
        on right: 277 279 450 805 824 838 842 845 850
    array_comprehension <pExpression> (513)
        on left: 857 858 859
        on right: 789


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 147 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  308 kwd_let: "let" .

    $default  reduce using rule 308 (kwd_let)


State 4

   46 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   56 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   47 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  608 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 603 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  309 kwd_let: "var" .

    $default  reduce using rule 309 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  785 bitfield_alias_declaration: "bitfield" . $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 781 ($@89)

    $@89  go to state 54


State 11

  775 tuple_alias_declaration: "tuple" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 771 ($@81)

    $@81  go to state 55


State 12

  780 variant_alias_declaration: "variant" . $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 776 ($@85)

    $@85  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   45 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  148 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  239 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  624 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'
  642 structure_declaration: optional_annotation_list_with_emit_semis . $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 639 ($@49)

    $@49  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  593 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  595           | kwd_let . optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 584 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  116 annotation_argument_name: "type" .

    $default  reduce using rule 116 (annotation_argument_name)


State 35

  117 annotation_argument_name: "in" .

    $default  reduce using rule 117 (annotation_argument_name)


State 36

  115 annotation_argument_name: "name" .

    $default  reduce using rule 115 (annotation_argument_name)


State 37

  118 annotation_argument: annotation_argument_name . '=' string_constant
  119                    | annotation_argument_name . '=' "name"
  120                    | annotation_argument_name . '=' "integer constant"
  121                    | annotation_argument_name . '=' "floating point constant"
  122                    | annotation_argument_name . '=' "true"
  123                    | annotation_argument_name . '=' "false"
  124                    | annotation_argument_name .
  125                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 124 (annotation_argument)


State 38

  126 annotation_argument_list: annotation_argument .

    $default  reduce using rule 126 (annotation_argument_list)


State 39

   46 options_declaration: "options" annotation_argument_list .
  127 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 46 (options_declaration)


State 40

   59 expect_error: "integer constant" .
   60             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 59 (expect_error)


State 41

   56 expect_declaration: "expect" expect_list .
   58 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 56 (expect_declaration)


State 42

   57 expect_list: expect_error .

    $default  reduce using rule 57 (expect_list)


State 43

   48 require_module_name: "name" .

    $default  reduce using rule 48 (require_module_name)


State 44

   49 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   50 require_module_name: require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"
   52 require_module: require_module_name . is_public_module
   53               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 88


State 46

   47 require_declaration: "require" require_module .

    $default  reduce using rule 47 (require_declaration)


State 47

  605 optional_public_or_private_alias: "public" .

    $default  reduce using rule 605 (optional_public_or_private_alias)


State 48

  604 optional_public_or_private_alias: "private" .

    $default  reduce using rule 604 (optional_public_or_private_alias)


State 49

  607 single_alias: optional_public_or_private_alias . "name" $@45 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  608 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 584 (optional_shared)

    optional_shared  go to state 91


State 54

  785 bitfield_alias_declaration: "bitfield" $@89 . optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 603 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  775 tuple_alias_declaration: "tuple" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 603 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  780 variant_alias_declaration: "variant" $@85 . optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 603 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  284 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  282 name_in_namespace: "name" .
  283                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 282 (name_in_namespace)


State 59

   45 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 44 ($@2)

    $@2  go to state 97


State 60

  131 annotation_declaration_name: "require" .

    $default  reduce using rule 131 (annotation_declaration_name)


State 61

  132 annotation_declaration_name: "private" .

    $default  reduce using rule 132 (annotation_declaration_name)


State 62

  133 annotation_declaration_name: "template" .

    $default  reduce using rule 133 (annotation_declaration_name)


State 63

  142 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  137 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  141 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  134 annotation_declaration_basic: annotation_declaration_name .
  135                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 134 (annotation_declaration_basic)


State 67

  136 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 136 (annotation_declaration)


State 68

  138 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  139                       | annotation_declaration . "||" annotation_declaration
  140                       | annotation_declaration . "^^" annotation_declaration
  143 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 143 (annotation_list)


State 69

  144 annotation_list: annotation_list . ',' annotation_declaration
  148 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  130 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 130 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  239 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 240 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 621 ($@46)

    $@46  go to state 111


State 76

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 . class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  585 optional_shared: "shared" .

    $default  reduce using rule 585 (optional_shared)


State 78

  593 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  595           | kwd_let optional_shared . optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 586 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  118 annotation_argument: annotation_argument_name '=' . string_constant
  119                    | annotation_argument_name '=' . "name"
  120                    | annotation_argument_name '=' . "integer constant"
  121                    | annotation_argument_name '=' . "floating point constant"
  122                    | annotation_argument_name '=' . "true"
  123                    | annotation_argument_name '=' . "false"
  125                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  127 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   60 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   58 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   49 require_module_name: '%' require_module_name .
   50                    | require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 49 (require_module_name)


State 84

   53 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   55 is_public_module: "public" .

    $default  reduce using rule 55 (is_public_module)


State 86

   51 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   50 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   52 require_module: require_module_name is_public_module .

    $default  reduce using rule 52 (require_module)


State 89

  607 single_alias: optional_public_or_private_alias "name" . $@45 '=' type_declaration

    $default  reduce using rule 606 ($@45)

    $@45  go to state 133


State 90

  608 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 608 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias . "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 137


State 93

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 138


State 94

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias . "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 139


State 95

  284 name_in_namespace: "::" "name" .

    $default  reduce using rule 284 (name_in_namespace)


State 96

  283 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   45 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  138 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  139                       | annotation_declaration . "||" annotation_declaration
  140                       | annotation_declaration . "^^" annotation_declaration
  142                       | "|>" annotation_declaration .

    $default  reduce using rule 142 (annotation_declaration)


State 99

  137 annotation_declaration: '!' annotation_declaration .
  138                       | annotation_declaration . "&&" annotation_declaration
  139                       | annotation_declaration . "||" annotation_declaration
  140                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 137 (annotation_declaration)


State 100

  138 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  139                       | annotation_declaration . "||" annotation_declaration
  140                       | annotation_declaration . "^^" annotation_declaration
  141                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  135 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  138 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  139 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  140 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  144 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  148 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  242 optional_public_or_private_function: "public" .

    $default  reduce using rule 242 (optional_public_or_private_function)


State 108

  241 optional_public_or_private_function: "private" .

    $default  reduce using rule 241 (optional_public_or_private_function)


State 109

  245 function_declaration: optional_public_or_private_function . $@13 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 244 ($@13)

    $@13  go to state 152


State 110

  239 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 239 (global_function_declaration)


State 111

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 609 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  631 class_or_struct: "struct" .

    $default  reduce using rule 631 (class_or_struct)


State 113

  630 class_or_struct: "class" .

    $default  reduce using rule 630 (class_or_struct)


State 114

  632 class_or_struct: "template" . "class"
  633                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct . optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 634 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  588 optional_public_or_private_variable: "public" .

    $default  reduce using rule 588 (optional_public_or_private_variable)


State 117

  587 optional_public_or_private_variable: "private" .

    $default  reduce using rule 587 (optional_public_or_private_variable)


State 118

  593 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  595           | kwd_let optional_shared optional_public_or_private_variable . $@44 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 594 ($@44)

    $@44  go to state 162


State 119

  122 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 122 (annotation_argument)


State 120

  123 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 123 (annotation_argument)


State 121

  120 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 120 (annotation_argument)


State 122

  121 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 121 (annotation_argument)


State 123

  119 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 119 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  125 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  118 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 118 (annotation_argument)


State 127

  127 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 127 (annotation_argument_list)


State 128

   60 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 60 (expect_error)


State 129

   58 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 58 (expect_list)


State 130

   53 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 175


State 131

   51 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 51 (require_module_name)


State 132

   50 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 50 (require_module_name)


State 133

  607 single_alias: optional_public_or_private_alias "name" $@45 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" . optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 619 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" . optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  283 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 283 (name_in_namespace)


State 141

   42 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 42 (reader_character_sequence)


State 142

   43 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 45 (expr_reader)


State 143

  141 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 141 (annotation_declaration)


State 144

  127 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  135 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  138 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  138                       | annotation_declaration "&&" annotation_declaration .
  139                       | annotation_declaration . "||" annotation_declaration
  140                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 138 (annotation_declaration)


State 146

  138 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  139                       | annotation_declaration . "||" annotation_declaration
  139                       | annotation_declaration "||" annotation_declaration .
  140                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 139 (annotation_declaration)


State 147

  138 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  139                       | annotation_declaration . "||" annotation_declaration
  140                       | annotation_declaration . "^^" annotation_declaration
  140                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 140 (annotation_declaration)


State 148

  138 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  139                       | annotation_declaration . "||" annotation_declaration
  140                       | annotation_declaration . "^^" annotation_declaration
  144 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 144 (annotation_list)


State 149

   66 emit_semis: "new line, semicolon" .

    $default  reduce using rule 66 (emit_semis)


State 150

   67 emit_semis: emit_semis . "new line, semicolon"
   69 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 69 (optional_emit_semis)


State 151

  148 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 148 (optional_annotation_list_with_emit_semis)


State 152

  245 function_declaration: optional_public_or_private_function $@13 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 215


State 153

  611 optional_public_or_private_enum: "public" .

    $default  reduce using rule 611 (optional_public_or_private_enum)


State 154

  610 optional_public_or_private_enum: "private" .

    $default  reduce using rule 610 (optional_public_or_private_enum)


State 155

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 216

    enum_name  go to state 217


State 156

  633 class_or_struct: "template" "struct" .

    $default  reduce using rule 633 (class_or_struct)


State 157

  632 class_or_struct: "template" "class" .

    $default  reduce using rule 632 (class_or_struct)


State 158

  636 optional_public_or_private_structure: "public" .

    $default  reduce using rule 636 (optional_public_or_private_structure)


State 159

  635 optional_public_or_private_structure: "private" .

    $default  reduce using rule 635 (optional_public_or_private_structure)


State 160

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure . $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 640 ($@50)

    $@50  go to state 218


State 161

  593 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 589 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 512 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  111 annotation_argument_value: "true" .

    $default  reduce using rule 111 (annotation_argument_value)


State 168

  112 annotation_argument_value: "false" .

    $default  reduce using rule 112 (annotation_argument_value)


State 169

  109 annotation_argument_value: "integer constant" .

    $default  reduce using rule 109 (annotation_argument_value)


State 170

  110 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 110 (annotation_argument_value)


State 171

  108 annotation_argument_value: "name" .

    $default  reduce using rule 108 (annotation_argument_value)


State 172

  107 annotation_argument_value: string_constant .

    $default  reduce using rule 107 (annotation_argument_value)


State 173

  113 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 113 (annotation_argument_value_list)


State 174

  114 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  125 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   53 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 53 (require_module)


State 176

  607 single_alias: optional_public_or_private_alias "name" $@45 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  617 emit_commas: "new line, comma" .

    $default  reduce using rule 617 (emit_commas)


State 178

  618 emit_commas: emit_commas . "new line, comma"
  620 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 620 (optional_emit_commas)


State 179

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas . $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 782 ($@90)

    $@90  go to state 278


State 180

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 772 ($@82)

    $@82  go to state 279


State 181

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis . $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 777 ($@86)

    $@86  go to state 280


State 182

   43 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 43 (reader_character_sequence)


State 183

  135 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 135 (annotation_declaration_basic)


State 184

   67 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 67 (emit_semis)


State 185

  155 function_name: "operator" . '!'
  156              | "operator" . '~'
  157              | "operator" . "+="
  158              | "operator" . "-="
  159              | "operator" . "*="
  160              | "operator" . "/="
  161              | "operator" . "%="
  162              | "operator" . "&="
  163              | "operator" . "|="
  164              | "operator" . "^="
  165              | "operator" . "&&="
  166              | "operator" . "||="
  167              | "operator" . "^^="
  168              | "operator" . "&&"
  169              | "operator" . "||"
  170              | "operator" . "^^"
  171              | "operator" . '+'
  172              | "operator" . '-'
  173              | "operator" . '*'
  174              | "operator" . '/'
  175              | "operator" . '%'
  176              | "operator" . '<'
  177              | "operator" . '>'
  178              | "operator" . ".."
  179              | "operator" . "=="
  180              | "operator" . "!="
  181              | "operator" . "<="
  182              | "operator" . ">="
  183              | "operator" . '&'
  184              | "operator" . '|'
  185              | "operator" . '^'
  188              | "operator" . "++"
  189              | "operator" . "--"
  190              | "operator" . "<<"
  191              | "operator" . ">>"
  192              | "operator" . "<<="
  193              | "operator" . ">>="
  194              | "operator" . "<<<"
  195              | "operator" . ">>>"
  196              | "operator" . "<<<="
  197              | "operator" . ">>>="
  198              | "operator" . '[' ']'
  199              | "operator" . "?[" ']'
  200              | "operator" . '.'
  201              | "operator" . "?."
  202              | "operator" . '.' "name"
  203              | "operator" . '.' "name" ":="
  204              | "operator" . "?." "name"
  205              | "operator" . ":="
  206              | "operator" . "delete"
  207              | "operator" . "??"
  208              | "operator" . "is"
  209              | "operator" . "as"
  210              | "operator" . "is" "name"
  211              | "operator" . "as" "name"
  212              | "operator" . '?' "as"
  213              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 281
    "as"      shift, and go to state 282
    "delete"  shift, and go to state 283
    "+="      shift, and go to state 284
    "-="      shift, and go to state 285
    "/="      shift, and go to state 286
    "*="      shift, and go to state 287
    "%="      shift, and go to state 288
    "&="      shift, and go to state 289
    "|="      shift, and go to state 290
    "^="      shift, and go to state 291
    "<<"      shift, and go to state 292
    ">>"      shift, and go to state 293
    "++"      shift, and go to state 294
    "--"      shift, and go to state 295
    "<="      shift, and go to state 296
    "<<="     shift, and go to state 297
    ">>="     shift, and go to state 298
    ">="      shift, and go to state 299
    "=="      shift, and go to state 300
    "!="      shift, and go to state 301
    "??"      shift, and go to state 302
    "?."      shift, and go to state 303
    "?["      shift, and go to state 304
    ":="      shift, and go to state 305
    "<<<"     shift, and go to state 306
    ">>>"     shift, and go to state 307
    "<<<="    shift, and go to state 308
    ">>>="    shift, and go to state 309
    "&&"      shift, and go to state 310
    "||"      shift, and go to state 311
    "^^"      shift, and go to state 312
    "&&="     shift, and go to state 313
    "||="     shift, and go to state 314
    "^^="     shift, and go to state 315
    ".."      shift, and go to state 316
    '?'       shift, and go to state 317
    '|'       shift, and go to state 318
    '^'       shift, and go to state 319
    '&'       shift, and go to state 320
    '<'       shift, and go to state 321
    '>'       shift, and go to state 322
    '-'       shift, and go to state 323
    '+'       shift, and go to state 324
    '*'       shift, and go to state 325
    '/'       shift, and go to state 326
    '%'       shift, and go to state 327
    '~'       shift, and go to state 328
    '!'       shift, and go to state 329
    '.'       shift, and go to state 330
    '['       shift, and go to state 331


State 186

  214 function_name: "bool" .

    $default  reduce using rule 214 (function_name)


State 187

  215 function_name: "string" .

    $default  reduce using rule 215 (function_name)


State 188

  216 function_name: "int" .

    $default  reduce using rule 216 (function_name)


State 189

  217 function_name: "int2" .

    $default  reduce using rule 217 (function_name)


State 190

  218 function_name: "int3" .

    $default  reduce using rule 218 (function_name)


State 191

  219 function_name: "int4" .

    $default  reduce using rule 219 (function_name)


State 192

  220 function_name: "uint" .

    $default  reduce using rule 220 (function_name)


State 193

  221 function_name: "uint2" .

    $default  reduce using rule 221 (function_name)


State 194

  222 function_name: "uint3" .

    $default  reduce using rule 222 (function_name)


State 195

  223 function_name: "uint4" .

    $default  reduce using rule 223 (function_name)


State 196

  224 function_name: "float" .

    $default  reduce using rule 224 (function_name)


State 197

  225 function_name: "float2" .

    $default  reduce using rule 225 (function_name)


State 198

  226 function_name: "float3" .

    $default  reduce using rule 226 (function_name)


State 199

  227 function_name: "float4" .

    $default  reduce using rule 227 (function_name)


State 200

  228 function_name: "range" .

    $default  reduce using rule 228 (function_name)


State 201

  229 function_name: "urange" .

    $default  reduce using rule 229 (function_name)


State 202

  230 function_name: "range64" .

    $default  reduce using rule 230 (function_name)


State 203

  231 function_name: "urange64" .

    $default  reduce using rule 231 (function_name)


State 204

  232 function_name: "int64" .

    $default  reduce using rule 232 (function_name)


State 205

  233 function_name: "uint64" .

    $default  reduce using rule 233 (function_name)


State 206

  234 function_name: "double" .

    $default  reduce using rule 234 (function_name)


State 207

  235 function_name: "int8" .

    $default  reduce using rule 235 (function_name)


State 208

  236 function_name: "uint8" .

    $default  reduce using rule 236 (function_name)


State 209

  237 function_name: "int16" .

    $default  reduce using rule 237 (function_name)


State 210

  238 function_name: "uint16" .

    $default  reduce using rule 238 (function_name)


State 211

  186 function_name: "++" . "operator"

    "operator"  shift, and go to state 332


State 212

  187 function_name: "--" . "operator"

    "operator"  shift, and go to state 333


State 213

  154 function_name: "name" .

    $default  reduce using rule 154 (function_name)


State 214

  243 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 334

    $default  reduce using rule 149 (optional_function_argument_list)

    optional_function_argument_list  go to state 335


State 215

  245 function_declaration: optional_public_or_private_function $@13 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 336


State 216

  612 enum_name: "name" .

    $default  reduce using rule 612 (enum_name)


State 217

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    ':'  shift, and go to state 337

    $default  reduce using rule 613 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 338


State 218

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 . structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 627 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  590 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  592                                 | global_variable_declaration_list . $@43 optional_field_annotation let_variable_declaration
  593 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 591 ($@43)

    SEMICOLON  go to state 343
    $@43       go to state 344


State 220

  128 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 345


State 221

  129 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  513 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 513 (optional_field_annotation)


State 222

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  114 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  125 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 125 (annotation_argument)


State 228

  711 type_declaration_no_options_no_dim: "type" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 351


State 229

  734 type_declaration_no_options_no_dim: "array" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 352


State 230

  737 type_declaration_no_options_no_dim: "table" . '<' $@61 table_type_pair '>' $@62

    '<'  shift, and go to state 353


State 231

  712 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  740 type_declaration_no_options_no_dim: "iterator" . '<' $@63 type_declaration '>' $@64

    '<'  shift, and go to state 355


State 233

  730 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 356


State 234

  648 basic_type_declaration: "bool" .

    $default  reduce using rule 648 (basic_type_declaration)


State 235

  668 basic_type_declaration: "void" .

    $default  reduce using rule 668 (basic_type_declaration)


State 236

  649 basic_type_declaration: "string" .

    $default  reduce using rule 649 (basic_type_declaration)


State 237

  684 auto_type_declaration: "auto" .
  685                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 684 (auto_type_declaration)


State 238

  650 basic_type_declaration: "int" .

    $default  reduce using rule 650 (basic_type_declaration)


State 239

  654 basic_type_declaration: "int2" .

    $default  reduce using rule 654 (basic_type_declaration)


State 240

  655 basic_type_declaration: "int3" .

    $default  reduce using rule 655 (basic_type_declaration)


State 241

  656 basic_type_declaration: "int4" .

    $default  reduce using rule 656 (basic_type_declaration)


State 242

  657 basic_type_declaration: "uint" .

    $default  reduce using rule 657 (basic_type_declaration)


State 243

  674 basic_type_declaration: "bitfield" .
  694 bitfield_type_declaration: "bitfield" . '<' $@52 bitfield_bits '>' $@53

    '<'  shift, and go to state 358

    $default  reduce using rule 674 (basic_type_declaration)


State 244

  661 basic_type_declaration: "uint2" .

    $default  reduce using rule 661 (basic_type_declaration)


State 245

  662 basic_type_declaration: "uint3" .

    $default  reduce using rule 662 (basic_type_declaration)


State 246

  663 basic_type_declaration: "uint4" .

    $default  reduce using rule 663 (basic_type_declaration)


State 247

  664 basic_type_declaration: "float" .

    $default  reduce using rule 664 (basic_type_declaration)


State 248

  665 basic_type_declaration: "float2" .

    $default  reduce using rule 665 (basic_type_declaration)


State 249

  666 basic_type_declaration: "float3" .

    $default  reduce using rule 666 (basic_type_declaration)


State 250

  667 basic_type_declaration: "float4" .

    $default  reduce using rule 667 (basic_type_declaration)


State 251

  669 basic_type_declaration: "range" .

    $default  reduce using rule 669 (basic_type_declaration)


State 252

  670 basic_type_declaration: "urange" .

    $default  reduce using rule 670 (basic_type_declaration)


State 253

  671 basic_type_declaration: "range64" .

    $default  reduce using rule 671 (basic_type_declaration)


State 254

  672 basic_type_declaration: "urange64" .

    $default  reduce using rule 672 (basic_type_declaration)


State 255

  741 type_declaration_no_options_no_dim: "block" .
  744                                   | "block" . '<' $@65 type_declaration '>' $@66
  747                                   | "block" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 359

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 256

  653 basic_type_declaration: "int64" .

    $default  reduce using rule 653 (basic_type_declaration)


State 257

  660 basic_type_declaration: "uint64" .

    $default  reduce using rule 660 (basic_type_declaration)


State 258

  673 basic_type_declaration: "double" .

    $default  reduce using rule 673 (basic_type_declaration)


State 259

  748 type_declaration_no_options_no_dim: "function" .
  751                                   | "function" . '<' $@69 type_declaration '>' $@70
  754                                   | "function" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 360

    $default  reduce using rule 748 (type_declaration_no_options_no_dim)


State 260

  755 type_declaration_no_options_no_dim: "lambda" .
  758                                   | "lambda" . '<' $@73 type_declaration '>' $@74
  761                                   | "lambda" . '<' $@75 optional_function_argument_list optional_function_type '>' $@76

    '<'  shift, and go to state 361

    $default  reduce using rule 755 (type_declaration_no_options_no_dim)


State 261

  651 basic_type_declaration: "int8" .

    $default  reduce using rule 651 (basic_type_declaration)


State 262

  658 basic_type_declaration: "uint8" .

    $default  reduce using rule 658 (basic_type_declaration)


State 263

  652 basic_type_declaration: "int16" .

    $default  reduce using rule 652 (basic_type_declaration)


State 264

  659 basic_type_declaration: "uint16" .

    $default  reduce using rule 659 (basic_type_declaration)


State 265

  764 type_declaration_no_options_no_dim: "tuple" . '<' $@77 tuple_type_list '>' $@78

    '<'  shift, and go to state 362


State 266

  767 type_declaration_no_options_no_dim: "variant" . '<' $@79 variant_type_list '>' $@80

    '<'  shift, and go to state 363


State 267

  686 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  713 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  715                                   | '$' . name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 365


State 269

  683 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 683 (structure_type_declaration)


State 270

  705 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 271

  708 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 272

  706 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 273

  707 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 274

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  768 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 768 (type_declaration)


State 275

  703 type_declaration_no_options: type_declaration_no_options_no_dim .
  704                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 375

    $default  reduce using rule 703 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  607 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 607 (single_alias)


State 277

  618 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 618 (emit_commas)


State 278

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 . '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    '{'  shift, and go to state 378


State 279

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 379


State 280

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 . '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    '{'  shift, and go to state 380


State 281

  208 function_name: "operator" "is" .
  210              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 208 (function_name)


State 282

  209 function_name: "operator" "as" .
  211              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 209 (function_name)


State 283

  206 function_name: "operator" "delete" .

    $default  reduce using rule 206 (function_name)


State 284

  157 function_name: "operator" "+=" .

    $default  reduce using rule 157 (function_name)


State 285

  158 function_name: "operator" "-=" .

    $default  reduce using rule 158 (function_name)


State 286

  160 function_name: "operator" "/=" .

    $default  reduce using rule 160 (function_name)


State 287

  159 function_name: "operator" "*=" .

    $default  reduce using rule 159 (function_name)


State 288

  161 function_name: "operator" "%=" .

    $default  reduce using rule 161 (function_name)


State 289

  162 function_name: "operator" "&=" .

    $default  reduce using rule 162 (function_name)


State 290

  163 function_name: "operator" "|=" .

    $default  reduce using rule 163 (function_name)


State 291

  164 function_name: "operator" "^=" .

    $default  reduce using rule 164 (function_name)


State 292

  190 function_name: "operator" "<<" .

    $default  reduce using rule 190 (function_name)


State 293

  191 function_name: "operator" ">>" .

    $default  reduce using rule 191 (function_name)


State 294

  188 function_name: "operator" "++" .

    $default  reduce using rule 188 (function_name)


State 295

  189 function_name: "operator" "--" .

    $default  reduce using rule 189 (function_name)


State 296

  181 function_name: "operator" "<=" .

    $default  reduce using rule 181 (function_name)


State 297

  192 function_name: "operator" "<<=" .

    $default  reduce using rule 192 (function_name)


State 298

  193 function_name: "operator" ">>=" .

    $default  reduce using rule 193 (function_name)


State 299

  182 function_name: "operator" ">=" .

    $default  reduce using rule 182 (function_name)


State 300

  179 function_name: "operator" "==" .

    $default  reduce using rule 179 (function_name)


State 301

  180 function_name: "operator" "!=" .

    $default  reduce using rule 180 (function_name)


State 302

  207 function_name: "operator" "??" .

    $default  reduce using rule 207 (function_name)


State 303

  201 function_name: "operator" "?." .
  204              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 201 (function_name)


State 304

  199 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 305

  205 function_name: "operator" ":=" .

    $default  reduce using rule 205 (function_name)


State 306

  194 function_name: "operator" "<<<" .

    $default  reduce using rule 194 (function_name)


State 307

  195 function_name: "operator" ">>>" .

    $default  reduce using rule 195 (function_name)


State 308

  196 function_name: "operator" "<<<=" .

    $default  reduce using rule 196 (function_name)


State 309

  197 function_name: "operator" ">>>=" .

    $default  reduce using rule 197 (function_name)


State 310

  168 function_name: "operator" "&&" .

    $default  reduce using rule 168 (function_name)


State 311

  169 function_name: "operator" "||" .

    $default  reduce using rule 169 (function_name)


State 312

  170 function_name: "operator" "^^" .

    $default  reduce using rule 170 (function_name)


State 313

  165 function_name: "operator" "&&=" .

    $default  reduce using rule 165 (function_name)


State 314

  166 function_name: "operator" "||=" .

    $default  reduce using rule 166 (function_name)


State 315

  167 function_name: "operator" "^^=" .

    $default  reduce using rule 167 (function_name)


State 316

  178 function_name: "operator" ".." .

    $default  reduce using rule 178 (function_name)


State 317

  212 function_name: "operator" '?' . "as"
  213              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 318

  184 function_name: "operator" '|' .

    $default  reduce using rule 184 (function_name)


State 319

  185 function_name: "operator" '^' .

    $default  reduce using rule 185 (function_name)


State 320

  183 function_name: "operator" '&' .

    $default  reduce using rule 183 (function_name)


State 321

  176 function_name: "operator" '<' .

    $default  reduce using rule 176 (function_name)


State 322

  177 function_name: "operator" '>' .

    $default  reduce using rule 177 (function_name)


State 323

  172 function_name: "operator" '-' .

    $default  reduce using rule 172 (function_name)


State 324

  171 function_name: "operator" '+' .

    $default  reduce using rule 171 (function_name)


State 325

  173 function_name: "operator" '*' .

    $default  reduce using rule 173 (function_name)


State 326

  174 function_name: "operator" '/' .

    $default  reduce using rule 174 (function_name)


State 327

  175 function_name: "operator" '%' .

    $default  reduce using rule 175 (function_name)


State 328

  156 function_name: "operator" '~' .

    $default  reduce using rule 156 (function_name)


State 329

  155 function_name: "operator" '!' .

    $default  reduce using rule 155 (function_name)


State 330

  200 function_name: "operator" '.' .
  202              | "operator" '.' . "name"
  203              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 200 (function_name)


State 331

  198 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 332

  186 function_name: "++" "operator" .

    $default  reduce using rule 186 (function_name)


State 333

  187 function_name: "--" "operator" .

    $default  reduce using rule 187 (function_name)


State 334

  150 optional_function_argument_list: '(' . ')'
  151                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    ')'   shift, and go to state 389
    '@'   shift, and go to state 220

    $default  reduce using rule 512 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 393


State 335

  243 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 394

    $default  reduce using rule 152 (optional_function_type)

    optional_function_type  go to state 395


State 336

  245 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 396
    $@16              go to state 397


State 337

  614 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 398
    "uint"    shift, and go to state 399
    "int64"   shift, and go to state 400
    "uint64"  shift, and go to state 401
    "int8"    shift, and go to state 402
    "uint8"   shift, and go to state 403
    "int16"   shift, and go to state 404
    "uint16"  shift, and go to state 405

    enum_basic_type_declaration  go to state 406


State 338

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 619 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 407


State 339

  628 optional_sealed: "sealed" .

    $default  reduce using rule 628 (optional_sealed)


State 340

  629 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 408


State 341

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name . optional_emit_semis $@51 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 409


State 342

  593 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 593 (global_let)


State 343

  590 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 590 (global_variable_declaration_list)


State 344

  592 global_variable_declaration_list: global_variable_declaration_list $@43 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 512 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 410


State 345

  128 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 411


State 346

  129 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 412


State 347

  573 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 573 (global_let_variable_name_with_pos_list)


State 348

  574 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  581 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  582                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  583                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 413
    ':'  shift, and go to state 414
    '&'  shift, and go to state 415

    $default  reduce using rule 566 (optional_ref)

    optional_ref  go to state 416


State 349

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 595 (global_let)


State 350

  114 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 114 (annotation_argument_value_list)


State 351

  711 type_declaration_no_options_no_dim: "type" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 709 ($@54)

    $@54  go to state 417


State 352

  734 type_declaration_no_options_no_dim: "array" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 732 ($@59)

    $@59  go to state 418


State 353

  737 type_declaration_no_options_no_dim: "table" '<' . $@61 table_type_pair '>' $@62

    $default  reduce using rule 735 ($@61)

    $@61  go to state 419


State 354

  712 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 485
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 355

  740 type_declaration_no_options_no_dim: "iterator" '<' . $@63 type_declaration '>' $@64

    $default  reduce using rule 738 ($@63)

    $@63  go to state 495


State 356

  730 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 728 ($@57)

    $@57  go to state 496


State 357

  685 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 497


State 358

  694 bitfield_type_declaration: "bitfield" '<' . $@52 bitfield_bits '>' $@53

    $default  reduce using rule 692 ($@52)

    $@52  go to state 498


State 359

  744 type_declaration_no_options_no_dim: "block" '<' . $@65 type_declaration '>' $@66
  747                                   | "block" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 745 ($@67)
    '>'       reduce using rule 745 ($@67)
    '('       reduce using rule 745 ($@67)
    $default  reduce using rule 742 ($@65)

    $@65  go to state 499
    $@67  go to state 500


State 360

  751 type_declaration_no_options_no_dim: "function" '<' . $@69 type_declaration '>' $@70
  754                                   | "function" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 752 ($@71)
    '>'       reduce using rule 752 ($@71)
    '('       reduce using rule 752 ($@71)
    $default  reduce using rule 749 ($@69)

    $@69  go to state 501
    $@71  go to state 502


State 361

  758 type_declaration_no_options_no_dim: "lambda" '<' . $@73 type_declaration '>' $@74
  761                                   | "lambda" '<' . $@75 optional_function_argument_list optional_function_type '>' $@76

    ':'       reduce using rule 759 ($@75)
    '>'       reduce using rule 759 ($@75)
    '('       reduce using rule 759 ($@75)
    $default  reduce using rule 756 ($@73)

    $@73  go to state 503
    $@75  go to state 504


State 362

  764 type_declaration_no_options_no_dim: "tuple" '<' . $@77 tuple_type_list '>' $@78

    $default  reduce using rule 762 ($@77)

    $@77  go to state 505


State 363

  767 type_declaration_no_options_no_dim: "variant" '<' . $@79 variant_type_list '>' $@80

    $default  reduce using rule 765 ($@79)

    $@79  go to state 506


State 364

  686 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 507
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 365

  713 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  715                                   | '$' name_in_namespace . '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 508
    '('  shift, and go to state 509


State 366

  718 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 718 (type_declaration_no_options_no_dim)


State 367

  723 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 368

  717 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 369

  725 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  726                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 510
    '&'      shift, and go to state 511


State 370

  731 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 731 (type_declaration_no_options_no_dim)


State 371

  727 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 372

  720 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 373

  716 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  719                                   | type_declaration_no_options '-' . "const"
  721                                   | type_declaration_no_options '-' . '&'
  724                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 512
    '&'      shift, and go to state 513
    '['      shift, and go to state 514
    '#'      shift, and go to state 515


State 374

  722 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 375

  699 dim_list: '[' . expr ']'
  700         | '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 516
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 517
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 376

  701 dim_list: dim_list . '[' expr ']'
  702         | dim_list . '[' ']'
  704 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 518

    $default  reduce using rule 704 (type_declaration_no_options)


State 377

  769 type_declaration: type_declaration '|' . type_declaration_no_options
  770                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268
    '#'          shift, and go to state 519

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 520
    type_declaration_no_options_no_dim  go to state 275


State 378

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' . $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 783 ($@91)

    $@91  go to state 521


State 379

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 773 ($@83)

    $@83  go to state 522


State 380

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' . $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 778 ($@87)

    $@87  go to state 523


State 381

  210 function_name: "operator" "is" "name" .

    $default  reduce using rule 210 (function_name)


State 382

  211 function_name: "operator" "as" "name" .

    $default  reduce using rule 211 (function_name)


State 383

  204 function_name: "operator" "?." "name" .

    $default  reduce using rule 204 (function_name)


State 384

  199 function_name: "operator" "?[" ']' .

    $default  reduce using rule 199 (function_name)


State 385

  212 function_name: "operator" '?' "as" .
  213              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 524

    $default  reduce using rule 212 (function_name)


State 386

  202 function_name: "operator" '.' "name" .
  203              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 525

    $default  reduce using rule 202 (function_name)


State 387

  198 function_name: "operator" '[' ']' .

    $default  reduce using rule 198 (function_name)


State 388

  535 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 526


State 389

  150 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 150 (optional_function_argument_list)


State 390

  533 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  534 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 527
    "var"  shift, and go to state 528

    $default  reduce using rule 307 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 529


State 391

  536 function_argument_list: function_argument_declaration_no_type .
  538                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 530

    $default  reduce using rule 536 (function_argument_list)


State 392

  537 function_argument_list: function_argument_declaration_type .
  539                       | function_argument_declaration_type . ';' function_argument_list
  540                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 531
    ';'  shift, and go to state 532

    $default  reduce using rule 537 (function_argument_list)


State 393

  151 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 533


State 394

  153 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 534


State 395

  243 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 243 (function_declaration_header)


State 396

  245 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 245 (function_declaration)


State 397

  252 expression_block: $@16 . '{' expressions $@17 '}' expression_block_finally

    '{'  shift, and go to state 535


State 398

  675 enum_basic_type_declaration: "int" .

    $default  reduce using rule 675 (enum_basic_type_declaration)


State 399

  678 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 678 (enum_basic_type_declaration)


State 400

  681 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 681 (enum_basic_type_declaration)


State 401

  682 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 682 (enum_basic_type_declaration)


State 402

  676 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 676 (enum_basic_type_declaration)


State 403

  679 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 679 (enum_basic_type_declaration)


State 404

  677 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 677 (enum_basic_type_declaration)


State 405

  680 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 680 (enum_basic_type_declaration)


State 406

  614 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 614 (optional_enum_basic_type_declaration)


State 407

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@47 enum_list optional_commas $@48 '}'

    '{'  shift, and go to state 536


State 408

  629 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 537

    $default  reduce using rule 625 (optional_structure_parent)

    optional_structure_parent  go to state 538


State 409

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis . $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 641 ($@51)

    $@51  go to state 539


State 410

  592 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541

    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 543


State 411

  128 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 128 (metadata_argument_list)


State 412

  129 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 544


State 413

  574 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 545


State 414

  581 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  582                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 546
    type_declaration_no_options_no_dim  go to state 275


State 415

  567 optional_ref: '&' .

    $default  reduce using rule 567 (optional_ref)


State 416

  583 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 550


State 417

  711 type_declaration_no_options_no_dim: "type" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 551


State 418

  734 type_declaration_no_options_no_dim: "array" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 552


State 419

  737 type_declaration_no_options_no_dim: "table" '<' $@61 . table_type_pair '>' $@62

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 553
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 554


State 420

  812 make_struct_decl: "struct" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 555


State 421

  815 make_struct_decl: "class" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 556


State 422

  416 expr: "true" .

    $default  reduce using rule 416 (expr)


State 423

  417 expr: "false" .

    $default  reduce using rule 417 (expr)


State 424

  291 expr_new: "new" . new_type_declaration
  292         | "new" . new_type_declaration '(' use_initializer ')'
  293         | "new" . new_type_declaration '(' expr_list ')'
  294         | "new" . new_type_declaration '(' make_struct_single ')'
  295         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  296         | "new" . make_decl

    "struct"       shift, and go to state 420
    "class"        shift, and go to state 421
    "array"        shift, and go to state 427
    "table"        shift, and go to state 429
    "fixed_array"  shift, and go to state 436
    "default"      shift, and go to state 437
    "tuple"        shift, and go to state 439
    "variant"      shift, and go to state 440
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 557
    '['            shift, and go to state 464
    '{'            shift, and go to state 468

    name_in_namespace           go to state 269
    new_type_declaration        go to state 558
    structure_type_declaration  go to state 559
    make_decl                   go to state 560
    make_struct_decl            go to state 490
    make_tuple_call             go to state 491
    make_dim_decl               go to state 492
    make_table_decl             go to state 493
    array_comprehension         go to state 494


State 425

  331 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  332               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  333               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 561


State 426

  330 expr_type_decl: "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 562


State 427

  831 make_dim_decl: "array" . "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  834              | "array" . "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'
  837              | "array" . "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  838              | "array" . '(' expr_list optional_comma ')'
  841              | "array" . '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "struct"   shift, and go to state 563
    "tuple"    shift, and go to state 564
    "variant"  shift, and go to state 565
    '<'        shift, and go to state 566
    '('        shift, and go to state 567


State 428

  410 expr: "null" .

    $default  reduce using rule 410 (expr)


State 429

  850 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  851                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  852                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 568
    '('  shift, and go to state 569


State 430

  461 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 570


State 431

  321 expr_cast: "cast" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 571


State 432

  324 expr_cast: "upcast" . '<' $@22 type_declaration_no_options '>' $@23 expr

    '<'  shift, and go to state 572


State 433

  462 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 573


State 434

  327 expr_cast: "reinterpret" . '<' $@24 type_declaration_no_options '>' $@25 expr

    '<'  shift, and go to state 574


State 435

  492 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 575


State 436

  842 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  845              | "fixed_array" . '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 576
    '('  shift, and go to state 577


State 437

  821 make_struct_decl: "default" . '<' $@99 type_declaration_no_options '>' $@100 use_initializer

    '<'  shift, and go to state 578


State 438

  674 basic_type_declaration: "bitfield" .

    $default  reduce using rule 674 (basic_type_declaration)


State 439

  824 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  827                | "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 579
    '('  shift, and go to state 580


State 440

  818 make_struct_decl: "variant" . '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 581


State 441

  493 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  494               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  495               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 582


State 442

  446 expr: "++" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 583
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 443

  447 expr: "--" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 584
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 444

  496 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 585


State 445

  497 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 586


State 446

  498 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 587


State 447

  499 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 588


State 448

  500 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 589


State 449

  502 expr_mtag: "$c" . '(' expr ')' '(' ')'
  503          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 590


State 450

  501 expr_mtag: "..." .

    $default  reduce using rule 501 (expr_mtag)


State 451

  354 expr_numeric_const: "integer constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 452

  356 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 356 (expr_numeric_const)


State 453

  355 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 454

  357 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 357 (expr_numeric_const)


State 455

  358 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 358 (expr_numeric_const)


State 456

  359 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 359 (expr_numeric_const)


State 457

  360 expr_numeric_const: "double constant" .

    $default  reduce using rule 360 (expr_numeric_const)


State 458

   41 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 38 (string_builder_body)

    string_builder_body  go to state 591


State 459

  423 expr: '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 592
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 460

  422 expr: '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 593
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 461

  460 expr: '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 594
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 462

  421 expr: '~' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 595
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 463

  420 expr: '!' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 596
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 464

  828 make_dim_decl: '[' . optional_expr_list ']'
  857 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  858                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 465

  450 expr: '(' . expr_list optional_comma ')'
  451     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 604
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 606
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 466

  339 block_or_lambda: '$' .

    $default  reduce using rule 339 (block_or_lambda)


State 467

  340 block_or_lambda: '@' .
  341                | '@' . '@'
  386 func_addr_expr: '@' . '@' func_addr_name
  389               | '@' . '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  392               | '@' . '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  511 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 607

    $default  reduce using rule 340 (block_or_lambda)


State 468

  849 make_table_decl: '{' . $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  859 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 608

    $default  reduce using rule 848 ($@113)

    $@113  go to state 609


State 469

  414 expr: string_builder .

    $default  reduce using rule 414 (expr)


State 470

  413 expr: expr_reader .

    $default  reduce using rule 413 (expr)


State 471

  491 expr: expr_call_pipe .

    $default  reduce using rule 491 (expr)


State 472

  380 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  381                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  403 expr_call: name_in_namespace . '(' ')'
  404          | name_in_namespace . '(' "uninitialized" ')'
  405          | name_in_namespace . '(' make_struct_single ')'
  406          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  407          | name_in_namespace . '(' expr_list ')'
  411 expr: name_in_namespace .

    '('  shift, and go to state 610

    $default  reduce using rule 411 (expr)


State 473

  484 expr: expr_new .

    $default  reduce using rule 484 (expr)


State 474

  483 expr: expr_cast .

    $default  reduce using rule 483 (expr)


State 475

  482 expr: expr_type_decl .

    $default  reduce using rule 482 (expr)


State 476

  481 expr: expr_type_info .

    $default  reduce using rule 481 (expr)


State 477

  351 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 611

    $default  reduce using rule 145 (optional_annotation_list)

    optional_annotation_list  go to state 612


State 478

  487 expr: expr_full_block .

    $default  reduce using rule 487 (expr)


State 479

  412 expr: expr_numeric_const .

    $default  reduce using rule 412 (expr)


State 480

  486 expr: expr_named_call .

    $default  reduce using rule 486 (expr)


State 481

  485 expr: expr_method_call .

    $default  reduce using rule 485 (expr)


State 482

  458 expr: func_addr_expr .

    $default  reduce using rule 458 (expr)


State 483

  418 expr: expr_field .

    $default  reduce using rule 418 (expr)


State 484

  253 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  459 expr: expr_call .

    '$'  shift, and go to state 466
    '@'  shift, and go to state 613
    '{'  shift, and go to state 614

    $default  reduce using rule 459 (expr)

    block_or_lambda                go to state 615
    expr_full_block_assumed_piped  go to state 616


State 485

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  712 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 652


State 486

  463 expr: expr_generator .

    $default  reduce using rule 463 (expr)


State 487

  419 expr: expr_mtag .

    $default  reduce using rule 419 (expr)


State 488

  408 expr_call: basic_type_declaration . '(' ')'
  409          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 653


State 489

  415 expr: make_decl .

    $default  reduce using rule 415 (expr)


State 490

  786 make_decl: make_struct_decl .

    $default  reduce using rule 786 (make_decl)


State 491

  790 make_decl: make_tuple_call .

    $default  reduce using rule 790 (make_decl)


State 492

  787 make_decl: make_dim_decl .

    $default  reduce using rule 787 (make_decl)


State 493

  788 make_decl: make_table_decl .

    $default  reduce using rule 788 (make_decl)


State 494

  789 make_decl: array_comprehension .

    $default  reduce using rule 789 (make_decl)


State 495

  740 type_declaration_no_options_no_dim: "iterator" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 654


State 496

  730 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 655


State 497

  685 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 656


State 498

  694 bitfield_type_declaration: "bitfield" '<' $@52 . bitfield_bits '>' $@53

    "name"  shift, and go to state 657

    bitfield_bits  go to state 658


State 499

  744 type_declaration_no_options_no_dim: "block" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 659


State 500

  747 type_declaration_no_options_no_dim: "block" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 334

    $default  reduce using rule 149 (optional_function_argument_list)

    optional_function_argument_list  go to state 660


State 501

  751 type_declaration_no_options_no_dim: "function" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 661


State 502

  754 type_declaration_no_options_no_dim: "function" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 334

    $default  reduce using rule 149 (optional_function_argument_list)

    optional_function_argument_list  go to state 662


State 503

  758 type_declaration_no_options_no_dim: "lambda" '<' $@73 . type_declaration '>' $@74

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 663


State 504

  761 type_declaration_no_options_no_dim: "lambda" '<' $@75 . optional_function_argument_list optional_function_type '>' $@76

    '('  shift, and go to state 334

    $default  reduce using rule 149 (optional_function_argument_list)

    optional_function_argument_list  go to state 664


State 505

  764 type_declaration_no_options_no_dim: "tuple" '<' $@77 . tuple_type_list '>' $@78

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 667
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 506

  767 type_declaration_no_options_no_dim: "variant" '<' $@79 . variant_type_list '>' $@80

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 671


State 507

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  686 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 672


State 508

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 714 ($@56)

    $@56  go to state 673


State 509

  713 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 674
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 510

  725 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 511

  726 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 512

  719 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 513

  721 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 721 (type_declaration_no_options_no_dim)


State 514

  716 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 675


State 515

  724 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 516

  700 dim_list: '[' ']' .

    $default  reduce using rule 700 (dim_list)


State 517

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  699 dim_list: '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 676


State 518

  701 dim_list: dim_list '[' . expr ']'
  702         | dim_list '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 677
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 678
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 519

  770 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 770 (type_declaration)


State 520

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  769 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 769 (type_declaration)


State 521

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 . bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 679

    $default  reduce using rule 689 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 680


State 522

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . tuple_alias_type_list optional_semis $@84 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    $default  reduce using rule 545 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 681
    tuple_alias_type_list               go to state 682
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 523

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 . variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 669

    $default  reduce using rule 551 (variant_alias_type_list)

    variant_type             go to state 683
    variant_alias_type_list  go to state 684


State 524

  213 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 213 (function_name)


State 525

  203 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 203 (function_name)


State 526

  535 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 685
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 527

  305 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 305 (kwd_let_var_or_nothing)


State 528

  306 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 306 (kwd_let_var_or_nothing)


State 529

  533 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  534 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 688
    variable_declaration_type     go to state 689
    variable_name_with_pos_list   go to state 690


State 530

  538 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 512 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 691


State 531

  540 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 512 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 692


State 532

  539 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 512 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 693


State 533

  151 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 151 (optional_function_argument_list)


State 534

  153 optional_function_type: ':' type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 153 (optional_function_type)


State 535

  252 expression_block: $@16 '{' . expressions $@17 '}' expression_block_finally

    $default  reduce using rule 273 (expressions)

    expressions  go to state 694


State 536

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 622 ($@47)

    $@47  go to state 695


State 537

  626 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 696


State 538

  629 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 629 (structure_name)


State 539

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 697
    '{'  shift, and go to state 698

    optional_struct_variable_declaration_list  go to state 699


State 540

  569 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 700


State 541

  568 let_variable_name_with_pos_list: "name" .
  570                                | "name" . "aka" "name"

    "aka"  shift, and go to state 701

    $default  reduce using rule 568 (let_variable_name_with_pos_list)


State 542

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  572                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  578 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  579                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  580                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 702
    ':'  shift, and go to state 703
    '&'  shift, and go to state 415

    $default  reduce using rule 566 (optional_ref)

    optional_ref  go to state 704


State 543

  592 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 592 (global_variable_declaration_list)


State 544

  129 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 129 (metadata_argument_list)


State 545

  574 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 574 (global_let_variable_name_with_pos_list)


State 546

  581 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  582                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 705
    copy_or_move_or_clone  go to state 706


State 547

  564 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 564 (copy_or_move_or_clone)


State 548

  565 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 565 (copy_or_move_or_clone)


State 549

  563 copy_or_move_or_clone: '=' .

    $default  reduce using rule 563 (copy_or_move_or_clone)


State 550

  583 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 707
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 551

  711 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration . '>' $@55
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 708


State 552

  734 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration . '>' $@60
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 709


State 553

  737 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair . '>' $@62

    '>'  shift, and go to state 710


State 554

  697 table_type_pair: type_declaration .
  698                | type_declaration . c_or_s type_declaration
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 697 (table_type_pair)

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 715


State 555

  812 make_struct_decl: "struct" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 810 ($@93)

    $@93  go to state 716


State 556

  815 make_struct_decl: "class" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 813 ($@95)

    $@95  go to state 717


State 557

  289 new_type_declaration: '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 287 ($@18)

    $@18  go to state 718


State 558

  291 expr_new: "new" new_type_declaration .
  292         | "new" new_type_declaration . '(' use_initializer ')'
  293         | "new" new_type_declaration . '(' expr_list ')'
  294         | "new" new_type_declaration . '(' make_struct_single ')'
  295         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 719

    $default  reduce using rule 291 (expr_new)


State 559

  290 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 290 (new_type_declaration)


State 560

  296 expr_new: "new" make_decl .

    $default  reduce using rule 296 (expr_new)


State 561

  331 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  332               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  333               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 720
    '('  shift, and go to state 721


State 562

  330 expr_type_decl: "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 328 ($@26)

    $@26  go to state 722


State 563

  831 make_dim_decl: "array" "struct" . '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 723


State 564

  834 make_dim_decl: "array" "tuple" . '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 724


State 565

  837 make_dim_decl: "array" "variant" . '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    '<'  shift, and go to state 725


State 566

  841 make_dim_decl: "array" '<' . $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    $default  reduce using rule 839 ($@109)

    $@109  go to state 726


State 567

  838 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 727
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 568

  851 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  852                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 728
    type_declaration_no_options_no_dim  go to state 275


State 569

  850 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 730
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    expr_map_tuple_list     go to state 731
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 570

  461 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 732
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 571

  321 expr_cast: "cast" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 319 ($@20)

    $@20  go to state 733


State 572

  324 expr_cast: "upcast" '<' . $@22 type_declaration_no_options '>' $@23 expr

    $default  reduce using rule 322 ($@22)

    $@22  go to state 734


State 573

  462 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 735
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 574

  327 expr_cast: "reinterpret" '<' . $@24 type_declaration_no_options '>' $@25 expr

    $default  reduce using rule 325 ($@24)

    $@24  go to state 736


State 575

  492 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 737
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 576

  845 make_dim_decl: "fixed_array" '<' . $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 843 ($@111)

    $@111  go to state 738


State 577

  842 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 739
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 578

  821 make_struct_decl: "default" '<' . $@99 type_declaration_no_options '>' $@100 use_initializer

    $default  reduce using rule 819 ($@99)

    $@99  go to state 740


State 579

  827 make_tuple_call: "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 825 ($@101)

    $@101  go to state 741


State 580

  824 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 742
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 581

  818 make_struct_decl: "variant" '<' . $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 816 ($@97)

    $@97  go to state 743


State 582

  493 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  494               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  495               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 744
    type_declaration_no_options_no_dim  go to state 275


State 583

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  446     | "++" expr .
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 446 (expr)


State 584

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  447     | "--" expr .
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 447 (expr)


State 585

  496 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 745
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 586

  497 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 746
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 587

  498 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 747
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 588

  499 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 748
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 589

  500 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 749
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 590

  502 expr_mtag: "$c" '(' . expr ')' '(' ')'
  503          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 750
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 591

   39 string_builder_body: string_builder_body . character_sequence
   40                    | string_builder_body . "{" expr optional_format_string "}"
   41 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 751
    "{"                   shift, and go to state 752

    character_sequence  go to state 753


State 592

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  423 expr: '-' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 423 (expr)


State 593

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  422 expr: '+' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 422 (expr)


State 594

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  460     | '*' expr .
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 460 (expr)


State 595

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  421 expr: '~' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 421 (expr)


State 596

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  420 expr: '!' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 420 (expr)


State 597

  857 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 754


State 598

  858 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 755


State 599

  828 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 756


State 600

  277 optional_expr_list: expr_list . optional_comma
  335 expr_list: expr_list . ',' expr

    ','  shift, and go to state 757

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 758


State 601

  334 expr_list: expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 334 (expr_list)


State 602

  795 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  796                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 759


State 603

  282 name_in_namespace: "name" .
  283                  | "name" . "::" "name"
  791 make_struct_fields: "name" . copy_or_move expr
  792                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    "::"  shift, and go to state 96
    '='   shift, and go to state 762

    $default  reduce using rule 282 (name_in_namespace)

    copy_or_move  go to state 763


State 604

  335 expr_list: expr_list . ',' expr
  450 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 764


State 605

  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  801 make_struct_single: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 801 (make_struct_single)


State 606

  451 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 766


State 607

  341 block_or_lambda: '@' '@' .
  386 func_addr_expr: '@' '@' . func_addr_name
  389               | '@' '@' . '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  392               | '@' '@' . '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  511 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "$c"    shift, and go to state 768
    "name"  shift, and go to state 58
    '<'     shift, and go to state 769

    $default  reduce using rule 341 (block_or_lambda)

    name_in_namespace  go to state 770
    func_addr_name     go to state 771


State 608

  859 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 772


State 609

  849 make_table_decl: '{' $@113 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 773


State 610

  380 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  381                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  403 expr_call: name_in_namespace '(' . ')'
  404          | name_in_namespace '(' . "uninitialized" ')'
  405          | name_in_namespace '(' . make_struct_single ')'
  406          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  407          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 774
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 775
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 776
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 777
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 778
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 611

  146 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 779
    name_in_namespace             go to state 70


State 612

  351 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 349 (optional_capture_list)

    optional_capture_list  go to state 781


State 613

  340 block_or_lambda: '@' .
  341                | '@' . '@'

    '@'  shift, and go to state 782

    $default  reduce using rule 340 (block_or_lambda)


State 614

  353 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 273 (expressions)

    expressions  go to state 783


State 615

  352 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 611

    $default  reduce using rule 145 (optional_annotation_list)

    optional_annotation_list  go to state 784


State 616

  253 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 253 (expr_call_pipe)


State 617

  468 expr: expr "is" . "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr "is" . basic_type_declaration
  470     | expr "is" . "name"
  510 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 785
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 786
    "name"      shift, and go to state 787

    basic_type_declaration  go to state 788


State 618

  471 expr: expr "as" . "name"
  474     | expr "as" . "type" '<' $@36 type_declaration '>' $@37
  475     | expr "as" . basic_type_declaration
  508 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 789
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 790
    "name"      shift, and go to state 791

    basic_type_declaration  go to state 792


State 619

  424 expr: expr "<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 793
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 620

  425 expr: expr ">>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 794
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 621

  448 expr: expr "++" .

    $default  reduce using rule 448 (expr)


State 622

  449 expr: expr "--" .

    $default  reduce using rule 449 (expr)


State 623

  437 expr: expr "<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 795
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 624

  438 expr: expr ">=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 796
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 625

  435 expr: expr "==" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 797
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 626

  436 expr: expr "!=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 798
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 627

  382 expr_method_call: expr "->" . "name" '(' ')'
  383                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 799


State 628

  464 expr: expr "??" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 800
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 629

  456 expr: expr "?." . "name"
  505 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 801
    "name"  shift, and go to state 802


State 630

  454 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 803
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 631

  488 expr: expr "<|" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 804
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 632

  489 expr: expr "|>" . expr
  490     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 805
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 806
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 633

  426 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 807
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 634

  427 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 808
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 635

  442 expr: expr "&&" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 809
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 636

  443 expr: expr "||" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 810
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 637

  444 expr: expr "^^" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 811
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 638

  445 expr: expr ".." . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 812
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 639

  465 expr: expr '?' . expr ':' expr
  476     | expr '?' . "as" "name"
  479     | expr '?' . "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr '?' . "as" basic_type_declaration
  509 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "as"                              shift, and go to state 813
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 814
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 640

  440 expr: expr '|' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 815
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 641

  441 expr: expr '^' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 816
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 642

  439 expr: expr '&' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 817
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 643

  433 expr: expr '<' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 818
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 644

  434 expr: expr '>' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 819
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 645

  429 expr: expr '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 820
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 646

  428 expr: expr '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 821
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 647

  430 expr: expr '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 822
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 648

  431 expr: expr '/' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 823
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 649

  432 expr: expr '%' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 824
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 650

  393 expr_field: expr '.' . "name"
  394           | expr '.' . '.' "name"
  395           | expr '.' . "name" '(' ')'
  396           | expr '.' . "name" '(' expr_list ')'
  397           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  398           | expr '.' . basic_type_declaration '(' ')'
  399           | expr '.' . basic_type_declaration '(' expr_list ')'
  402           | expr '.' . $@32 error $@33
  453 expr: expr '.' . '[' expr ']'
  455     | expr '.' . "?[" expr ']'
  457     | expr '.' . "?." "name"
  504 expr_mtag: expr '.' . "$f" '(' expr ')'
  506          | expr '.' . '.' "$f" '(' expr ')'
  507          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 825
    "?["        shift, and go to state 826
    "$f"        shift, and go to state 827
    "name"      shift, and go to state 828
    '.'         shift, and go to state 829
    '['         shift, and go to state 830

    $default  reduce using rule 400 ($@32)

    $@32                    go to state 831
    basic_type_declaration  go to state 832


State 651

  452 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 833
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 652

  712 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 712 (type_declaration_no_options_no_dim)


State 653

  408 expr_call: basic_type_declaration '(' . ')'
  409          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 834
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 835
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 654

  740 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration . '>' $@64
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 836


State 655

  730 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration . '>' $@58
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 837


State 656

  685 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 685 (auto_type_declaration)


State 657

  687 bitfield_bits: "name" .

    $default  reduce using rule 687 (bitfield_bits)


State 658

  688 bitfield_bits: bitfield_bits . ';' "name"
  694 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits . '>' $@53

    '>'  shift, and go to state 838
    ';'  shift, and go to state 839


State 659

  744 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration . '>' $@66
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 840


State 660

  747 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 394

    $default  reduce using rule 152 (optional_function_type)

    optional_function_type  go to state 841


State 661

  751 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration . '>' $@70
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 842


State 662

  754 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 394

    $default  reduce using rule 152 (optional_function_type)

    optional_function_type  go to state 843


State 663

  758 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration . '>' $@74
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 844


State 664

  761 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list . optional_function_type '>' $@76

    ':'  shift, and go to state 394

    $default  reduce using rule 152 (optional_function_type)

    optional_function_type  go to state 845


State 665

  282 name_in_namespace: "name" .
  283                  | "name" . "::" "name"
  542 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 846

    $default  reduce using rule 282 (name_in_namespace)


State 666

  543 tuple_type_list: tuple_type .

    $default  reduce using rule 543 (tuple_type_list)


State 667

  544 tuple_type_list: tuple_type_list . c_or_s tuple_type
  764 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list . '>' $@78

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 847
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 668

  541 tuple_type: type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 541 (tuple_type)


State 669

  548 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 849


State 670

  549 variant_type_list: variant_type .

    $default  reduce using rule 549 (variant_type_list)


State 671

  550 variant_type_list: variant_type_list . c_or_s variant_type
  767 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list . '>' $@80

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 850
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 672

  686 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 686 (auto_type_declaration)


State 673

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 852
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 853


State 674

  713 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 854


State 675

  716 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 676

  699 dim_list: '[' expr ']' .

    $default  reduce using rule 699 (dim_list)


State 677

  702 dim_list: dim_list '[' ']' .

    $default  reduce using rule 702 (dim_list)


State 678

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  701 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 855


State 679

  690 bitfield_alias_bits: "name" .

    $default  reduce using rule 690 (bitfield_alias_bits)


State 680

  691 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits . optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 615 (optional_commas)

    COMMA            go to state 856
    commas           go to state 857
    optional_commas  go to state 858


State 681

  546 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 546 (tuple_alias_type_list)


State 682

  547 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 859
    semis           go to state 860
    optional_semis  go to state 861


State 683

  552 variant_alias_type_list: variant_type .

    $default  reduce using rule 552 (variant_alias_type_list)


State 684

  553 variant_alias_type_list: variant_alias_type_list . semis variant_type
  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list . optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 859
    semis           go to state 862
    optional_semis  go to state 863


State 685

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  535 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 864


State 686

  644 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 865


State 687

  643 variable_name_with_pos_list: "name" .
  645                            | "name" . "aka" "name"

    "aka"  shift, and go to state 866

    $default  reduce using rule 643 (variable_name_with_pos_list)


State 688

  533 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 533 (function_argument_declaration_no_type)


State 689

  534 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 534 (function_argument_declaration_type)


State 690

  556 variable_declaration_no_type: variable_name_with_pos_list .
  557                             | variable_name_with_pos_list . '&'
  558                             | variable_name_with_pos_list . copy_or_move expr
  559 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  560                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 760
    ','   shift, and go to state 867
    '='   shift, and go to state 762
    ':'   shift, and go to state 868
    '&'   shift, and go to state 869

    $default  reduce using rule 556 (variable_declaration_no_type)

    copy_or_move  go to state 870


State 691

  538 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 538 (function_argument_list)


State 692

  540 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 540 (function_argument_list)


State 693

  539 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 539 (function_argument_list)


State 694

  252 expression_block: $@16 '{' expressions . $@17 '}' expression_block_finally
  274 expressions: expressions . expression_any
  275            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 102 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 99 ($@10)
    "with"       reduce using rule 104 ($@12)
    '}'          reduce using rule 251 ($@17)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@9                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@10                              go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@11                              go to state 894
    expression_with                   go to state 895
    $@12                              go to state 896
    expression_with_alias             go to state 897
    $@17                              go to state 898
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 695

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 . enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 910

    $default  reduce using rule 600 (enum_list)

    enum_expression  go to state 911
    enum_list        go to state 912


State 696

  626 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 626 (optional_structure_parent)


State 697

  637 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 637 (optional_struct_variable_declaration_list)


State 698

  638 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 525 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 913


State 699

  642 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list .

    $default  reduce using rule 642 (structure_declaration)


State 700

  569 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 914
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 701

  570 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 915


State 702

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  572                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 916


State 703

  578 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  579                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 917
    type_declaration_no_options_no_dim  go to state 275


State 704

  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 918


State 705

  581 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 581 (global_let_variable_declaration)


State 706

  582 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 919
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 707

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  583 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 920


State 708

  711 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 710 ($@55)

    $@55  go to state 921


State 709

  734 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 733 ($@60)

    $@60  go to state 922


State 710

  737 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' . $@62

    $default  reduce using rule 736 ($@62)

    $@62  go to state 923


State 711

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 712

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 713

  695 c_or_s: COMMA .

    $default  reduce using rule 695 (c_or_s)


State 714

  696 c_or_s: SEMICOLON .

    $default  reduce using rule 696 (c_or_s)


State 715

  698 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 924


State 716

  812 make_struct_decl: "struct" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 925
    type_declaration_no_options_no_dim  go to state 275


State 717

  815 make_struct_decl: "class" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 926
    type_declaration_no_options_no_dim  go to state 275


State 718

  289 new_type_declaration: '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 927


State 719

  292 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  293         | "new" new_type_declaration '(' . expr_list ')'
  294         | "new" new_type_declaration '(' . make_struct_single ')'
  295         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 928
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 808 (use_initializer)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 929
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 930
    use_initializer         go to state 931
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 720

  332 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  333               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 932


State 721

  331 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 933
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 722

  330 expr_type_decl: "type" '<' $@26 . type_declaration '>' $@27

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 934


State 723

  831 make_dim_decl: "array" "struct" '<' . $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 829 ($@103)

    $@103  go to state 935


State 724

  834 make_dim_decl: "array" "tuple" '<' . $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 832 ($@105)

    $@105  go to state 936


State 725

  837 make_dim_decl: "array" "variant" '<' . $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    $default  reduce using rule 835 ($@107)

    $@107  go to state 937


State 726

  841 make_dim_decl: "array" '<' $@109 . type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 938
    type_declaration_no_options_no_dim  go to state 275


State 727

  335 expr_list: expr_list . ',' expr
  838 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 939


State 728

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  851 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  852                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "??"                   shift, and go to state 370
    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '>'                    shift, and go to state 940
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 941


State 729

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  822 make_map_tuple: expr . "=>" expr
  823               | expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "=>"   shift, and go to state 942
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 823 (make_map_tuple)


State 730

  846 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 846 (expr_map_tuple_list)


State 731

  847 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  850 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 943

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 944


State 732

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  461     | "deref" '(' expr . ')'
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 945


State 733

  321 expr_cast: "cast" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 946
    type_declaration_no_options_no_dim  go to state 275


State 734

  324 expr_cast: "upcast" '<' $@22 . type_declaration_no_options '>' $@23 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 947
    type_declaration_no_options_no_dim  go to state 275


State 735

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  462     | "addr" '(' expr . ')'
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 948


State 736

  327 expr_cast: "reinterpret" '<' $@24 . type_declaration_no_options '>' $@25 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 949
    type_declaration_no_options_no_dim  go to state 275


State 737

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  492     | "unsafe" '(' expr . ')'
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 950


State 738

  845 make_dim_decl: "fixed_array" '<' $@111 . type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 951
    type_declaration_no_options_no_dim  go to state 275


State 739

  335 expr_list: expr_list . ',' expr
  842 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 952


State 740

  821 make_struct_decl: "default" '<' $@99 . type_declaration_no_options '>' $@100 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 953
    type_declaration_no_options_no_dim  go to state 275


State 741

  827 make_tuple_call: "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 954
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 742

  335 expr_list: expr_list . ',' expr
  824 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 955


State 743

  818 make_struct_decl: "variant" '<' $@97 . variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 956


State 744

  493 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  494               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  495               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 957
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 745

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  496 expr_mtag: "$$" '(' expr . ')'
  504          | expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 958


State 746

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  497 expr_mtag: "$i" '(' expr . ')'
  504          | expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 959


State 747

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  498 expr_mtag: "$v" '(' expr . ')'
  504          | expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 960


State 748

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  499 expr_mtag: "$b" '(' expr . ')'
  504          | expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 961


State 749

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  500 expr_mtag: "$a" '(' expr . ')'
  504          | expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 962


State 750

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: "$c" '(' expr . ')' '(' ')'
  503          | "$c" '(' expr . ')' '(' expr_list ')'
  504          | expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 963


State 751

   41 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 41 (string_builder)


State 752

   40 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 964
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 753

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   39 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 39 (string_builder_body)


State 754

  857 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 965


State 755

  858 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 966


State 756

  828 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 828 (make_dim_decl)


State 757

  335 expr_list: expr_list ',' . expr
  856 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 856 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 967
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 758

  277 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 277 (optional_expr_list)


State 759

  795 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  796                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 968
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 760

  555 copy_or_move: "<-" .

    $default  reduce using rule 555 (copy_or_move)


State 761

  792 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 969
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 762

  554 copy_or_move: '=' .

    $default  reduce using rule 554 (copy_or_move)


State 763

  791 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 970
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 764

  450 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 971


State 765

  793 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  794                   | make_struct_fields ',' . "name" ":=" expr
  797                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 972
    "name"  shift, and go to state 973


State 766

  451 expr: '(' make_struct_single ')' .

    $default  reduce using rule 451 (expr)


State 767

  385 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 974


State 768

  511 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 975


State 769

  389 func_addr_expr: '@' '@' '<' . $@28 type_declaration_no_options '>' $@29 func_addr_name
  392               | '@' '@' '<' . $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    ':'       reduce using rule 390 ($@30)
    '>'       reduce using rule 390 ($@30)
    '('       reduce using rule 390 ($@30)
    $default  reduce using rule 387 ($@28)

    $@28  go to state 976
    $@30  go to state 977


State 770

  384 func_addr_name: name_in_namespace .

    $default  reduce using rule 384 (func_addr_name)


State 771

  386 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 386 (func_addr_expr)


State 772

  859 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 978


State 773

  849 make_table_decl: '{' $@113 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 979
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 980
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 774

  404 expr_call: name_in_namespace '(' "uninitialized" . ')'
  406          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    ')'     shift, and go to state 982

    make_struct_fields  go to state 605
    make_struct_single  go to state 983


State 775

  380 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  828 make_dim_decl: '[' . optional_expr_list ']'
  857 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  858                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 984
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 776

  403 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 403 (expr_call)


State 777

  335 expr_list: expr_list . ',' expr
  381 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  407 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 985
    ')'  shift, and go to state 986


State 778

  405 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 987


State 779

  144 annotation_list: annotation_list . ',' annotation_declaration
  146 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 988


State 780

  350 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 989


State 781

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 334

    $default  reduce using rule 149 (optional_function_argument_list)

    optional_function_argument_list  go to state 990


State 782

  341 block_or_lambda: '@' '@' .

    $default  reduce using rule 341 (block_or_lambda)


State 783

  274 expressions: expressions . expression_any
  275            | expressions . error
  353 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468
    '}'                               shift, and go to state 991

    "while"      reduce using rule 102 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 99 ($@10)
    "with"       reduce using rule 104 ($@12)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@9                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@10                              go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@11                              go to state 894
    expression_with                   go to state 895
    $@12                              go to state 896
    expression_with_alias             go to state 897
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 784

  352 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 349 (optional_capture_list)

    optional_capture_list  go to state 992


State 785

  468 expr: expr "is" "type" . '<' $@34 type_declaration_no_options '>' $@35

    '<'  shift, and go to state 993


State 786

  510 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 994


State 787

  470 expr: expr "is" "name" .

    $default  reduce using rule 470 (expr)


State 788

  469 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 469 (expr)


State 789

  474 expr: expr "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 995


State 790

  508 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 996


State 791

  471 expr: expr "as" "name" .

    $default  reduce using rule 471 (expr)


State 792

  475 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 475 (expr)


State 793

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  424     | expr "<<" expr .
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 424 (expr)


State 794

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  425     | expr ">>" expr .
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 425 (expr)


State 795

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  437     | expr "<=" expr .
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 437 (expr)


State 796

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  438     | expr ">=" expr .
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 438 (expr)


State 797

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  435     | expr "==" expr .
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 435 (expr)


State 798

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  436     | expr "!=" expr .
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 436 (expr)


State 799

  382 expr_method_call: expr "->" "name" . '(' ')'
  383                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 997


State 800

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  464     | expr "??" expr .
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 464 (expr)


State 801

  505 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 998


State 802

  456 expr: expr "?." "name" .

    $default  reduce using rule 456 (expr)


State 803

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  454     | expr "?[" expr . ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 999


State 804

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  488     | expr "<|" expr .
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 488 (expr)


State 805

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  489     | expr "|>" expr .
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 489 (expr)


State 806

  408 expr_call: basic_type_declaration . '(' ')'
  409          | basic_type_declaration . '(' expr_list ')'
  490 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 653

    $default  reduce using rule 490 (expr)


State 807

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  426     | expr "<<<" expr .
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 426 (expr)


State 808

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  427     | expr ">>>" expr .
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 427 (expr)


State 809

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  442     | expr "&&" expr .
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 442 (expr)


State 810

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  443     | expr "||" expr .
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "^^"   shift, and go to state 637
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 443 (expr)


State 811

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  444     | expr "^^" expr .
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 444 (expr)


State 812

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  445     | expr ".." expr .
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 445 (expr)


State 813

  476 expr: expr '?' "as" . "name"
  479     | expr '?' "as" . "type" '<' $@38 type_declaration '>' $@39
  480     | expr '?' "as" . basic_type_declaration
  509 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1000
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 1001
    "name"      shift, and go to state 1002

    basic_type_declaration  go to state 1003


State 814

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  465     | expr '?' expr . ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1004
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651


State 815

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  440     | expr '|' expr .
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 440 (expr)


State 816

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  441     | expr '^' expr .
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 441 (expr)


State 817

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  439     | expr '&' expr .
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 439 (expr)


State 818

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  433     | expr '<' expr .
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 433 (expr)


State 819

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  434     | expr '>' expr .
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 434 (expr)


State 820

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  429     | expr '-' expr .
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 429 (expr)


State 821

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  428     | expr '+' expr .
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 428 (expr)


State 822

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  430     | expr '*' expr .
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 430 (expr)


State 823

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  431     | expr '/' expr .
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 431 (expr)


State 824

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  432     | expr '%' expr .
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 432 (expr)


State 825

  457 expr: expr '.' "?." . "name"
  507 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1005
    "name"  shift, and go to state 1006


State 826

  455 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1007
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 827

  504 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1008


State 828

  393 expr_field: expr '.' "name" .
  395           | expr '.' "name" . '(' ')'
  396           | expr '.' "name" . '(' expr_list ')'
  397           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1009

    $default  reduce using rule 393 (expr_field)


State 829

  394 expr_field: expr '.' '.' . "name"
  506 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1010
    "name"  shift, and go to state 1011


State 830

  453 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1012
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 831

  402 expr_field: expr '.' $@32 . error $@33

    error  shift, and go to state 1013


State 832

  398 expr_field: expr '.' basic_type_declaration . '(' ')'
  399           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1014


State 833

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  452     | expr '[' expr . ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1015


State 834

  408 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 408 (expr_call)


State 835

  335 expr_list: expr_list . ',' expr
  409 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1017


State 836

  740 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 739 ($@64)

    $@64  go to state 1018


State 837

  730 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 729 ($@58)

    $@58  go to state 1019


State 838

  694 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' . $@53

    $default  reduce using rule 693 ($@53)

    $@53  go to state 1020


State 839

  688 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1021


State 840

  744 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 743 ($@66)

    $@66  go to state 1022


State 841

  747 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1023


State 842

  751 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 750 ($@70)

    $@70  go to state 1024


State 843

  754 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1025


State 844

  758 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' . $@74

    $default  reduce using rule 757 ($@74)

    $@74  go to state 1026


State 845

  761 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type . '>' $@76

    '>'  shift, and go to state 1027


State 846

  542 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1028


State 847

  764 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' . $@78

    $default  reduce using rule 763 ($@78)

    $@78  go to state 1029


State 848

  544 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1030
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 849

  548 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1031


State 850

  767 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' . $@80

    $default  reduce using rule 766 ($@80)

    $@80  go to state 1032


State 851

  550 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 669

    variant_type  go to state 1033


State 852

  281 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1034
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1035


State 853

  280 type_declaration_no_options_list: type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 280 (type_declaration_no_options_list)


State 854

  713 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 855

  701 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 701 (dim_list)


State 856

  598 commas: COMMA .

    $default  reduce using rule 598 (commas)


State 857

  599 commas: commas . COMMA
  616 optional_commas: commas .
  691 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1036
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 616 (optional_commas)

    COMMA  go to state 1037


State 858

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas . $@92 '}'

    $default  reduce using rule 784 ($@92)

    $@92  go to state 1038


State 859

   82 semis: SEMICOLON .

    $default  reduce using rule 82 (semis)


State 860

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  547 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 665
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON                           go to state 1039
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1040
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 861

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 774 ($@84)

    $@84  go to state 1041


State 862

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  553 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 669
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON     go to state 1039
    variant_type  go to state 1042


State 863

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis . $@88 '}'

    $default  reduce using rule 779 ($@88)

    $@88  go to state 1043


State 864

  535 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 535 (function_argument_declaration_type)


State 865

  644 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1044
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 866

  645 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1045


State 867

  646 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  647                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1046


State 868

  559 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  560                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1047


State 869

  557 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 557 (variable_declaration_no_type)


State 870

  558 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1048
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 871

  275 expressions: expressions error .

    $default  reduce using rule 275 (expressions)


State 872

  299 expression_return: "return" .
  300                  | "return" . expr
  301                  | "return" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1049
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 299 (expression_return)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1050
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 873

  297 expression_break: "break" .

    $default  reduce using rule 297 (expression_break)


State 874

  304 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1051
    $@16              go to state 397


State 875

  285 expression_delete: "delete" . expr
  286                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "explicit"                        shift, and go to state 1052
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1053
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 876

  106 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1054


State 877

  298 expression_continue: "continue" .

    $default  reduce using rule 298 (expression_continue)


State 878

  272 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1055


State 879

   61 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1056


State 880

   62 expression_goto: "goto" . "label" "integer constant"
   63                | "goto" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 1057
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1058
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 881

  101 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  492 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 575

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1059


State 882

  302 expression_yield: "yield" . expr
  303                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1060
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1061
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 883

  254 expression_any: SEMICOLON .

    $default  reduce using rule 254 (expression_any)


State 884

  270 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1062


State 885

  271 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1063


State 886

   98 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1064


State 887

  267 expression_any: expression_if_then_else .

    $default  reduce using rule 267 (expression_any)


State 888

   97 expression_if_then_else: $@9 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1065
    "static_if"  shift, and go to state 1066

    if_or_static_if  go to state 1067


State 889

  268 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 268 (expression_any)


State 890

  262 expression_any: expression_for_loop .

    $default  reduce using rule 262 (expression_any)


State 891

  100 expression_for_loop: $@10 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1068


State 892

  259 expression_any: expression_unsafe .

    $default  reduce using rule 259 (expression_any)


State 893

  258 expression_any: expression_while_loop .

    $default  reduce using rule 258 (expression_any)


State 894

  103 expression_while_loop: $@11 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1069


State 895

  260 expression_any: expression_with .

    $default  reduce using rule 260 (expression_any)


State 896

  105 expression_with: $@12 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1070


State 897

  261 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1071


State 898

  252 expression_block: $@16 '{' expressions $@17 . '}' expression_block_finally

    '}'  shift, and go to state 1072


State 899

  274 expressions: expressions expression_any .

    $default  reduce using rule 274 (expressions)


State 900

  256 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1073


State 901

   80 expression_if_one_liner: expression_break .
  263 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1074


State 902

   81 expression_if_one_liner: expression_continue .
  264 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1075


State 903

   78 expression_if_one_liner: expression_return .
  265 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 78 (expression_if_one_liner)

    SEMICOLON  go to state 1076


State 904

   79 expression_if_one_liner: expression_yield .
  266 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (expression_if_one_liner)

    SEMICOLON  go to state 1077


State 905

  269 expression_any: expression_try_catch .

    $default  reduce using rule 269 (expression_any)


State 906

  316 expression_let: kwd_let . optional_in_scope let_variable_declaration
  317               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  318               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1078

    $default  reduce using rule 311 (optional_in_scope)

    optional_in_scope  go to state 1079


State 907

  257 expression_any: expression_let .

    $default  reduce using rule 257 (expression_any)


State 908

  255 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1080


State 909

   77 expression_if_one_liner: expr .
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 617
    "as"    shift, and go to state 618
    "+="    shift, and go to state 1081
    "-="    shift, and go to state 1082
    "/="    shift, and go to state 1083
    "*="    shift, and go to state 1084
    "%="    shift, and go to state 1085
    "&="    shift, and go to state 1086
    "|="    shift, and go to state 1087
    "^="    shift, and go to state 1088
    "<<"    shift, and go to state 619
    ">>"    shift, and go to state 620
    "++"    shift, and go to state 621
    "--"    shift, and go to state 622
    "<="    shift, and go to state 623
    "<<="   shift, and go to state 1089
    ">>="   shift, and go to state 1090
    ">="    shift, and go to state 624
    "=="    shift, and go to state 625
    "!="    shift, and go to state 626
    "->"    shift, and go to state 627
    "<-"    shift, and go to state 1091
    "??"    shift, and go to state 628
    "?."    shift, and go to state 629
    "?["    shift, and go to state 630
    "<|"    shift, and go to state 631
    "|>"    shift, and go to state 632
    ":="    shift, and go to state 1092
    "<<<"   shift, and go to state 633
    ">>>"   shift, and go to state 634
    "<<<="  shift, and go to state 1093
    ">>>="  shift, and go to state 1094
    "&&"    shift, and go to state 635
    "||"    shift, and go to state 636
    "^^"    shift, and go to state 637
    "&&="   shift, and go to state 1095
    "||="   shift, and go to state 1096
    "^^="   shift, and go to state 1097
    ".."    shift, and go to state 638
    '='     shift, and go to state 1098
    '?'     shift, and go to state 639
    '|'     shift, and go to state 640
    '^'     shift, and go to state 641
    '&'     shift, and go to state 642
    '<'     shift, and go to state 643
    '>'     shift, and go to state 644
    '-'     shift, and go to state 645
    '+'     shift, and go to state 646
    '*'     shift, and go to state 647
    '/'     shift, and go to state 648
    '%'     shift, and go to state 649
    '.'     shift, and go to state 650
    '['     shift, and go to state 651

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 361 (expr_assign)


State 910

  596 enum_expression: "name" .
  597                | "name" . '=' expr

    '='  shift, and go to state 1099

    $default  reduce using rule 596 (enum_expression)


State 911

  601 enum_list: enum_expression .

    $default  reduce using rule 601 (enum_list)


State 912

  602 enum_list: enum_list . commas enum_expression
  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list . optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 615 (optional_commas)

    COMMA            go to state 856
    commas           go to state 1100
    optional_commas  go to state 1101


State 913

  526 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  528                                 | struct_variable_declaration_list . $@40 structure_variable_declaration SEMICOLON
  530                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  532                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block
  638 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1102
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1103

    "def"     reduce using rule 147 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 527 ($@40)

    optional_annotation_list_with_emit_semis  go to state 1104
    $@40                                      go to state 1105


State 914

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  569 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1106


State 915

  570 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 570 (let_variable_name_with_pos_list)


State 916

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  572                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1107

    $default  reduce using rule 571 (let_variable_name_with_pos_list)


State 917

  578 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  579                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 1108
    copy_or_move_or_clone  go to state 1109


State 918

  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1110
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 919

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  582 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1111


State 920

  583 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 583 (global_let_variable_declaration)


State 921

  711 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 711 (type_declaration_no_options_no_dim)


State 922

  734 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 923

  737 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62 .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 924

  698 table_type_pair: type_declaration c_or_s type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 698 (table_type_pair)


State 925

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1112
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 926

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1113
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 927

  289 new_type_declaration: '<' $@18 type_declaration . '>' $@19
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1114


State 928

  295 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  809 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    $default  reduce using rule 809 (use_initializer)

    make_struct_fields  go to state 605
    make_struct_single  go to state 1115


State 929

  293 expr_new: "new" new_type_declaration '(' expr_list . ')'
  335 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1116


State 930

  294 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1117


State 931

  292 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1118


State 932

  332 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  333               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1119
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1120


State 933

  331 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1121


State 934

  330 expr_type_decl: "type" '<' $@26 type_declaration . '>' $@27
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1122


State 935

  831 make_dim_decl: "array" "struct" '<' $@103 . type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1123
    type_declaration_no_options_no_dim  go to state 275


State 936

  834 make_dim_decl: "array" "tuple" '<' $@105 . tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 1124
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 937

  837 make_dim_decl: "array" "variant" '<' $@107 . variant_type_list '>' $@108 '(' make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 1125


State 938

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  841 make_dim_decl: "array" '<' $@109 type_declaration_no_options . '>' $@110 '(' optional_expr_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1126
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 939

  838 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1127


State 940

  851 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1128


State 941

  852 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1129
    type_declaration_no_options_no_dim  go to state 275


State 942

  822 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1130
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 943

  847 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  856 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 856 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1131
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 944

  850 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1132


State 945

  461 expr: "deref" '(' expr ')' .

    $default  reduce using rule 461 (expr)


State 946

  321 expr_cast: "cast" '<' $@20 type_declaration_no_options . '>' $@21 expr
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1133
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 947

  324 expr_cast: "upcast" '<' $@22 type_declaration_no_options . '>' $@23 expr
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1134
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 948

  462 expr: "addr" '(' expr ')' .

    $default  reduce using rule 462 (expr)


State 949

  327 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options . '>' $@25 expr
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1135
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 950

  492 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 492 (expr)


State 951

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options . '>' $@112 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1136
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 952

  842 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1137


State 953

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  821 make_struct_decl: "default" '<' $@99 type_declaration_no_options . '>' $@100 use_initializer

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1138
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 954

  544 tuple_type_list: tuple_type_list . c_or_s tuple_type
  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1139
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 955

  824 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1140


State 956

  550 variant_type_list: variant_type_list . c_or_s variant_type
  818 make_struct_decl: "variant" '<' $@97 variant_type_list . '>' $@98 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1141
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 957

  493 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  494               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  495               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 349 (optional_capture_list)

    optional_capture_list  go to state 1142


State 958

  496 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 959

  497 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 960

  498 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 961

  499 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 962

  500 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 963

  502 expr_mtag: "$c" '(' expr ')' . '(' ')'
  503          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1143


State 964

   40 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1144
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 35 (optional_format_string)

    optional_format_string  go to state 1145


State 965

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1146
    ','   shift, and go to state 867


State 966

  858 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 1147


State 967

  335 expr_list: expr_list ',' expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 335 (expr_list)


State 968

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  795 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  796                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1148


State 969

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  792 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 792 (make_struct_fields)


State 970

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  791 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 791 (make_struct_fields)


State 971

  450 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 450 (expr)


State 972

  797 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  798                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1149


State 973

  793 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  794                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1150
    '='   shift, and go to state 762

    copy_or_move  go to state 1151


State 974

  385 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1152
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 975

  511 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1153
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 976

  389 func_addr_expr: '@' '@' '<' $@28 . type_declaration_no_options '>' $@29 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1154
    type_declaration_no_options_no_dim  go to state 275


State 977

  392 func_addr_expr: '@' '@' '<' $@30 . optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    '('  shift, and go to state 334

    $default  reduce using rule 149 (optional_function_argument_list)

    optional_function_argument_list  go to state 1155


State 978

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1156
    ','   shift, and go to state 867


State 979

  849 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1157


State 980

  279 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  847 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 943

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 1158


State 981

  791 make_struct_fields: "name" . copy_or_move expr
  792                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    '='   shift, and go to state 762

    copy_or_move  go to state 763


State 982

  404 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 404 (expr_call)


State 983

  406 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1159


State 984

  380 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1160


State 985

  335 expr_list: expr_list ',' . expr
  381 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1161
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 967
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 986

  407 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 407 (expr_call)


State 987

  405 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 405 (expr_call)


State 988

  146 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 146 (optional_annotation_list)


State 989

  350 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1162
    ":="    shift, and go to state 1163
    "name"  shift, and go to state 1164
    '='     shift, and go to state 1165
    '&'     shift, and go to state 1166

    capture_entry  go to state 1167
    capture_list   go to state 1168


State 990

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 394

    $default  reduce using rule 152 (optional_function_type)

    optional_function_type  go to state 1169


State 991

  353 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 353 (expr_full_block_assumed_piped)


State 992

  352 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 334

    $default  reduce using rule 149 (optional_function_argument_list)

    optional_function_argument_list  go to state 1170


State 993

  468 expr: expr "is" "type" '<' . $@34 type_declaration_no_options '>' $@35

    $default  reduce using rule 466 ($@34)

    $@34  go to state 1171


State 994

  510 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1172
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 995

  474 expr: expr "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 472 ($@36)

    $@36  go to state 1173


State 996

  508 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1174
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 997

  382 expr_method_call: expr "->" "name" '(' . ')'
  383                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1175
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1176
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 998

  505 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1177
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 999

  454 expr: expr "?[" expr ']' .

    $default  reduce using rule 454 (expr)


State 1000

  479 expr: expr '?' "as" "type" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 1178


State 1001

  509 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1179


State 1002

  476 expr: expr '?' "as" "name" .

    $default  reduce using rule 476 (expr)


State 1003

  480 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 480 (expr)


State 1004

  465 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1180
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1005

  507 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1181


State 1006

  457 expr: expr '.' "?." "name" .

    $default  reduce using rule 457 (expr)


State 1007

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  455     | expr '.' "?[" expr . ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1182


State 1008

  504 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1183
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1009

  395 expr_field: expr '.' "name" '(' . ')'
  396           | expr '.' "name" '(' . expr_list ')'
  397           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1184
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1185
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1186
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1010

  506 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1187


State 1011

  394 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 394 (expr_field)


State 1012

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  453     | expr '.' '[' expr . ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1188


State 1013

  402 expr_field: expr '.' $@32 error . $@33

    $default  reduce using rule 401 ($@33)

    $@33  go to state 1189


State 1014

  398 expr_field: expr '.' basic_type_declaration '(' . ')'
  399           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1190
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1191
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1015

  452 expr: expr '[' expr ']' .

    $default  reduce using rule 452 (expr)


State 1016

  335 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 967
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1017

  409 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 409 (expr_call)


State 1018

  740 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 1019

  730 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 1020

  694 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53 .

    $default  reduce using rule 694 (bitfield_type_declaration)


State 1021

  688 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 688 (bitfield_bits)


State 1022

  744 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 1023

  747 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 746 ($@68)

    $@68  go to state 1192


State 1024

  751 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 751 (type_declaration_no_options_no_dim)


State 1025

  754 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 753 ($@72)

    $@72  go to state 1193


State 1026

  758 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74 .

    $default  reduce using rule 758 (type_declaration_no_options_no_dim)


State 1027

  761 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' . $@76

    $default  reduce using rule 760 ($@76)

    $@76  go to state 1194


State 1028

  542 tuple_type: "name" ':' type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 542 (tuple_type)


State 1029

  764 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78 .

    $default  reduce using rule 764 (type_declaration_no_options_no_dim)


State 1030

  544 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 544 (tuple_type_list)


State 1031

  548 variant_type: "name" ':' type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 548 (variant_type)


State 1032

  767 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80 .

    $default  reduce using rule 767 (type_declaration_no_options_no_dim)


State 1033

  550 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 550 (variant_type_list)


State 1034

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1195


State 1035

  281 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1196


State 1036

  691 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 691 (bitfield_alias_bits)


State 1037

  599 commas: commas COMMA .

    $default  reduce using rule 599 (commas)


State 1038

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 . '}'

    '}'  shift, and go to state 1197


State 1039

   83 semis: semis SEMICOLON .

    $default  reduce using rule 83 (semis)


State 1040

  547 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 547 (tuple_alias_type_list)


State 1041

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1198


State 1042

  553 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 553 (variant_alias_type_list)


State 1043

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 . '}'

    '}'  shift, and go to state 1199


State 1044

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  644 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1200


State 1045

  645 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 645 (variable_name_with_pos_list)


State 1046

  646 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  647                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1201

    $default  reduce using rule 646 (variable_name_with_pos_list)


State 1047

  559 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  560                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 760
    '='   shift, and go to state 762
    '|'   shift, and go to state 377

    $default  reduce using rule 559 (variable_declaration_type)

    copy_or_move  go to state 1202


State 1048

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  558 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 558 (variable_declaration_no_type)


State 1049

  301 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1203
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1050

  300 expression_return: "return" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 300 (expression_return)


State 1051

  304 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1204


State 1052

  286 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1205
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1053

  285 expression_delete: "delete" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 285 (expression_delete)


State 1054

  106 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1206


State 1055

  272 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 272 (expression_any)


State 1056

   61 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1207


State 1057

   62 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1208


State 1058

   63 expression_goto: "goto" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 63 (expression_goto)


State 1059

  101 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1209
    $@16              go to state 397


State 1060

  303 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1210
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1061

  302 expression_yield: "yield" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 302 (expression_yield)


State 1062

  270 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 270 (expression_any)


State 1063

  271 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 271 (expression_any)


State 1064

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1211


State 1065

   73 if_or_static_if: "if" .

    $default  reduce using rule 73 (if_or_static_if)


State 1066

   74 if_or_static_if: "static_if" .

    $default  reduce using rule 74 (if_or_static_if)


State 1067

   97 expression_if_then_else: $@9 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1212


State 1068

  100 expression_for_loop: $@10 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1213


State 1069

  103 expression_while_loop: $@11 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1214


State 1070

  105 expression_with: $@12 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1215


State 1071

  261 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 1072

  252 expression_block: $@16 '{' expressions $@17 '}' . expression_block_finally

    "finally"  shift, and go to state 1216

    $default  reduce using rule 246 (expression_block_finally)

    expression_block_finally  go to state 1217


State 1073

  256 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 256 (expression_any)


State 1074

  263 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 263 (expression_any)


State 1075

  264 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 264 (expression_any)


State 1076

  265 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 265 (expression_any)


State 1077

  266 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 266 (expression_any)


State 1078

  310 optional_in_scope: "inscope" .

    $default  reduce using rule 310 (optional_in_scope)


State 1079

  316 expression_let: kwd_let optional_in_scope . let_variable_declaration
  317               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  318               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541
    '('     shift, and go to state 1218
    '{'     shift, and go to state 1219

    tuple_expansion_variable_declaration  go to state 1220
    let_variable_name_with_pos_list       go to state 542
    let_variable_declaration              go to state 1221


State 1080

  255 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 255 (expression_any)


State 1081

  371 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1222
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1082

  372 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1223
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1083

  374 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1224
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1084

  373 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1225
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1085

  375 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1226
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1086

  365 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1227
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1087

  366 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1228
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1088

  367 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1229
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1089

  376 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1230
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1090

  377 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1231
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1091

  363 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1232
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1092

  364 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1233
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1093

  378 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1234
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1094

  379 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1235
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1095

  368 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1236
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1096

  369 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1237
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1097

  370 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1238
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1098

  362 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1239
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1099

  597 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1240
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1100

  599 commas: commas . COMMA
  602 enum_list: enum_list commas . enum_expression
  616 optional_commas: commas .

    "name"             shift, and go to state 910
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 616 (optional_commas)

    COMMA            go to state 1037
    enum_expression  go to state 1241


State 1101

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas . $@48 '}'

    $default  reduce using rule 623 ($@48)

    $@48  go to state 1242


State 1102

  526 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 526 (struct_variable_declaration_list)


State 1103

  638 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 638 (optional_struct_variable_declaration_list)


State 1104

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  532                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1243


State 1105

  528 struct_variable_declaration_list: struct_variable_declaration_list $@40 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 512 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1244
    structure_variable_declaration  go to state 1245


State 1106

  569 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 569 (let_variable_name_with_pos_list)


State 1107

  572 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1246


State 1108

  578 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 578 (let_variable_declaration)


State 1109

  579 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1247
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1110

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1248


State 1111

  582 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 582 (global_let_variable_declaration)


State 1112

  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 811 ($@94)

    $@94  go to state 1249


State 1113

  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 814 ($@96)

    $@96  go to state 1250


State 1114

  289 new_type_declaration: '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 288 ($@19)

    $@19  go to state 1251


State 1115

  295 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1252


State 1116

  293 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 293 (expr_new)


State 1117

  294 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 294 (expr_new)


State 1118

  292 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 292 (expr_new)


State 1119

  332 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1253


State 1120

  333 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1254


State 1121

  331 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 331 (expr_type_info)


State 1122

  330 expr_type_decl: "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 329 ($@27)

    $@27  go to state 1255


State 1123

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1256
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1124

  544 tuple_type_list: tuple_type_list . c_or_s tuple_type
  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list . '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1257
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 1125

  550 variant_type_list: variant_type_list . c_or_s variant_type
  837 make_dim_decl: "array" "variant" '<' $@107 variant_type_list . '>' $@108 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1258
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 1126

  841 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' . $@110 '(' optional_expr_list ')'

    $default  reduce using rule 840 ($@110)

    $@110  go to state 1259


State 1127

  838 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 838 (make_dim_decl)


State 1128

  851 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1260
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 980
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1129

  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"
  852 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1261
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1130

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  822 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 822 (make_map_tuple)


State 1131

  847 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 847 (expr_map_tuple_list)


State 1132

  850 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 850 (make_table_decl)


State 1133

  321 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 320 ($@21)

    $@21  go to state 1262


State 1134

  324 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' . $@23 expr

    $default  reduce using rule 323 ($@23)

    $@23  go to state 1263


State 1135

  327 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' . $@25 expr

    $default  reduce using rule 326 ($@25)

    $@25  go to state 1264


State 1136

  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' . $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 844 ($@112)

    $@112  go to state 1265


State 1137

  842 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 842 (make_dim_decl)


State 1138

  821 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' . $@100 use_initializer

    $default  reduce using rule 820 ($@100)

    $@100  go to state 1266


State 1139

  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 826 ($@102)

    $@102  go to state 1267


State 1140

  824 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 824 (make_tuple_call)


State 1141

  818 make_struct_decl: "variant" '<' $@97 variant_type_list '>' . $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 817 ($@98)

    $@98  go to state 1268


State 1142

  493 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  494               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  495               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1269

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1270


State 1143

  502 expr_mtag: "$c" '(' expr ')' '(' . ')'
  503          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1271
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1272
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1144

   37 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 36 ($@1)

    $@1  go to state 1273


State 1145

   40 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1274


State 1146

  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1275
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1147

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1276
    ','   shift, and go to state 867


State 1148

  795 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  796                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1277
    '='   shift, and go to state 762

    copy_or_move  go to state 1278


State 1149

  797 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  798                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1279
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1150

  794 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1280
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1151

  793 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1281
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1152

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  385 func_addr_name: "$i" '(' expr . ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1282


State 1153

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  511          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1283


State 1154

  389 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options . '>' $@29 func_addr_name
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1284
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1155

  392 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list . optional_function_type '>' $@31 func_addr_name

    ':'  shift, and go to state 394

    $default  reduce using rule 152 (optional_function_type)

    optional_function_type  go to state 1285


State 1156

  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1286
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1157

  849 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 849 (make_table_decl)


State 1158

  279 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 279 (optional_expr_map_tuple_list)


State 1159

  406 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 406 (expr_call)


State 1160

  380 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1287


State 1161

  381 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  828 make_dim_decl: '[' . optional_expr_list ']'
  857 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  858                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1288
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1162

  344 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1289


State 1163

  345 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1290


State 1164

  346 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1291


State 1165

  343 capture_entry: '=' . "name"

    "name"  shift, and go to state 1292


State 1166

  342 capture_entry: '&' . "name"

    "name"  shift, and go to state 1293


State 1167

  347 capture_list: capture_entry .

    $default  reduce using rule 347 (capture_list)


State 1168

  348 capture_list: capture_list . ',' capture_entry
  350 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1294
    ')'  shift, and go to state 1295


State 1169

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1296


State 1170

  352 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 394

    $default  reduce using rule 152 (optional_function_type)

    optional_function_type  go to state 1297


State 1171

  468 expr: expr "is" "type" '<' $@34 . type_declaration_no_options '>' $@35

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1298
    type_declaration_no_options_no_dim  go to state 275


State 1172

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  510          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1299


State 1173

  474 expr: expr "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1300


State 1174

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  508          | expr "as" "$f" '(' expr . ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1301


State 1175

  382 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 382 (expr_method_call)


State 1176

  335 expr_list: expr_list . ',' expr
  383 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1302


State 1177

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  505          | expr "?." "$f" '(' expr . ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1303


State 1178

  479 expr: expr '?' "as" "type" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 477 ($@38)

    $@38  go to state 1304


State 1179

  509 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1305
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1180

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  465     | expr '?' expr ':' expr .
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 465 (expr)


State 1181

  507 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1306
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1182

  455 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 455 (expr)


State 1183

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr '.' "$f" '(' expr . ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1307


State 1184

  397 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  828 make_dim_decl: '[' . optional_expr_list ']'
  857 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  858                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1308
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1185

  395 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 395 (expr_field)


State 1186

  335 expr_list: expr_list . ',' expr
  396 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1309


State 1187

  506 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1310
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1188

  453 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 453 (expr)


State 1189

  402 expr_field: expr '.' $@32 error $@33 .

    $default  reduce using rule 402 (expr_field)


State 1190

  398 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 398 (expr_field)


State 1191

  335 expr_list: expr_list . ',' expr
  399 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1311


State 1192

  747 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 747 (type_declaration_no_options_no_dim)


State 1193

  754 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 754 (type_declaration_no_options_no_dim)


State 1194

  761 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76 .

    $default  reduce using rule 761 (type_declaration_no_options_no_dim)


State 1195

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1312
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1196

  281 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 281 (type_declaration_no_options_list)


State 1197

  785 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}' .

    $default  reduce using rule 785 (bitfield_alias_declaration)


State 1198

  775 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 775 (tuple_alias_declaration)


State 1199

  780 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}' .

    $default  reduce using rule 780 (variant_alias_declaration)


State 1200

  644 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 644 (variable_name_with_pos_list)


State 1201

  647 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1313


State 1202

  560 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1314
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1203

  301 expression_return: "return" "<-" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 301 (expression_return)


State 1204

  304 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1315
    $@16              go to state 397


State 1205

  286 expression_delete: "delete" "explicit" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 286 (expression_delete)


State 1206

  106 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1316
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1207

   61 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 61 (expression_label)


State 1208

   62 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 62 (expression_goto)


State 1209

  101 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 101 (expression_unsafe)


State 1210

  303 expression_yield: "yield" "<-" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 303 (expression_yield)


State 1211

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1317
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1212

   97 expression_if_then_else: $@9 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1318
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1213

  100 expression_for_loop: $@10 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 1319


State 1214

  103 expression_while_loop: $@11 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1320
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1215

  105 expression_with: $@12 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1321
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1216

  249 expression_block_finally: "finally" . $@14 '{' expressions $@15 '}'

    $default  reduce using rule 247 ($@14)

    $@14  go to state 1322


State 1217

  252 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally .

    $default  reduce using rule 252 (expression_block)


State 1218

  314 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  315                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1323

    tuple_expansion  go to state 1324


State 1219

  318 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 575 (variable_declaration_list)

    variable_declaration_list  go to state 1325


State 1220

  317 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 317 (expression_let)


State 1221

  316 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 316 (expression_let)


State 1222

  371 expr_assign: expr "+=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 371 (expr_assign)


State 1223

  372 expr_assign: expr "-=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 372 (expr_assign)


State 1224

  374 expr_assign: expr "/=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 374 (expr_assign)


State 1225

  373 expr_assign: expr "*=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 373 (expr_assign)


State 1226

  375 expr_assign: expr "%=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 375 (expr_assign)


State 1227

  365 expr_assign: expr "&=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 365 (expr_assign)


State 1228

  366 expr_assign: expr "|=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 366 (expr_assign)


State 1229

  367 expr_assign: expr "^=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 367 (expr_assign)


State 1230

  376 expr_assign: expr "<<=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 376 (expr_assign)


State 1231

  377 expr_assign: expr ">>=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 377 (expr_assign)


State 1232

  363 expr_assign: expr "<-" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 363 (expr_assign)


State 1233

  364 expr_assign: expr ":=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 364 (expr_assign)


State 1234

  378 expr_assign: expr "<<<=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 378 (expr_assign)


State 1235

  379 expr_assign: expr ">>>=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 379 (expr_assign)


State 1236

  368 expr_assign: expr "&&=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 368 (expr_assign)


State 1237

  369 expr_assign: expr "||=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 369 (expr_assign)


State 1238

  370 expr_assign: expr "^^=" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 370 (expr_assign)


State 1239

  362 expr_assign: expr '=' expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 362 (expr_assign)


State 1240

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  597 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 597 (enum_expression)


State 1241

  602 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 602 (enum_list)


State 1242

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 . '}'

    '}'  shift, and go to state 1326


State 1243

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  532                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1327
    "private"  shift, and go to state 1328

    $default  reduce using rule 519 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1329


State 1244

  524 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1330

    $default  reduce using rule 522 (optional_static_member_variable)

    optional_static_member_variable  go to state 1331


State 1245

  528 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1332


State 1246

  572 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 572 (let_variable_name_with_pos_list)


State 1247

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  579 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1333


State 1248

  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 580 (let_variable_declaration)


State 1249

  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1334


State 1250

  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1335


State 1251

  289 new_type_declaration: '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 289 (new_type_declaration)


State 1252

  295 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 295 (expr_new)


State 1253

  332 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1336
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1254

  333 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1337


State 1255

  330 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 330 (expr_type_decl)


State 1256

  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 830 ($@104)

    $@104  go to state 1338


State 1257

  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' . $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 833 ($@106)

    $@106  go to state 1339


State 1258

  837 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' . $@108 '(' make_variant_dim ')'

    $default  reduce using rule 836 ($@108)

    $@108  go to state 1340


State 1259

  841 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 . '(' optional_expr_list ')'

    '('  shift, and go to state 1341


State 1260

  851 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1342


State 1261

  852 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1343


State 1262

  321 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1344
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1263

  324 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1345
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1264

  327 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1346
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1265

  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1347


State 1266

  821 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 . use_initializer

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1349


State 1267

  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1350


State 1268

  818 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1351


State 1269

  493 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  494               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1352
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1353
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1270

  495 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1354
    $@16              go to state 397


State 1271

  502 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1272

  335 expr_list: expr_list . ',' expr
  503 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1355


State 1273

   37 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 33 (format_string)

    format_string  go to state 1356


State 1274

   40 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 40 (string_builder_body)


State 1275

  335 expr_list: expr_list . ',' expr
  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1357


State 1276

  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1358
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1277

  796 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1359
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1278

  795 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1360
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1279

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  797 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  798                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1361


State 1280

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  794 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 794 (make_struct_fields)


State 1281

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  793 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 793 (make_struct_fields)


State 1282

  385 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 385 (func_addr_name)


State 1283

  511 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1284

  389 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' . $@29 func_addr_name

    $default  reduce using rule 388 ($@29)

    $@29  go to state 1362


State 1285

  392 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type . '>' $@31 func_addr_name

    '>'  shift, and go to state 1363


State 1286

  335 expr_list: expr_list . ',' expr
  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1364


State 1287

  380 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 380 (expr_named_call)


State 1288

  381 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1365


State 1289

  344 capture_entry: "<-" "name" .

    $default  reduce using rule 344 (capture_entry)


State 1290

  345 capture_entry: ":=" "name" .

    $default  reduce using rule 345 (capture_entry)


State 1291

  346 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1366


State 1292

  343 capture_entry: '=' "name" .

    $default  reduce using rule 343 (capture_entry)


State 1293

  342 capture_entry: '&' "name" .

    $default  reduce using rule 342 (capture_entry)


State 1294

  348 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1162
    ":="    shift, and go to state 1163
    "name"  shift, and go to state 1164
    '='     shift, and go to state 1165
    '&'     shift, and go to state 1166

    capture_entry  go to state 1367


State 1295

  350 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 350 (optional_capture_list)


State 1296

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1368

    $default  reduce using rule 250 ($@16)

    expression_block       go to state 1369
    $@16                   go to state 397
    block_or_simple_block  go to state 1370


State 1297

  352 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1371


State 1298

  468 expr: expr "is" "type" '<' $@34 type_declaration_no_options . '>' $@35
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1299

  510 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1300

  474 expr: expr "as" "type" '<' $@36 type_declaration . '>' $@37
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1373


State 1301

  508 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1302

  383 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 383 (expr_method_call)


State 1303

  505 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1304

  479 expr: expr '?' "as" "type" '<' $@38 . type_declaration '>' $@39

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1374


State 1305

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr '?' "as" "$f" '(' expr . ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1375


State 1306

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr '.' "?." "$f" '(' expr . ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1376


State 1307

  504 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1308

  397 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1377


State 1309

  396 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 396 (expr_field)


State 1310

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr '.' '.' "$f" '(' expr . ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1378


State 1311

  399 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 399 (expr_field)


State 1312

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1379


State 1313

  647 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 647 (variable_name_with_pos_list)


State 1314

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  560 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 560 (variable_declaration_type)


State 1315

  304 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 304 (expression_try_catch)


State 1316

  106 expression_with_alias: "assume" "name" '=' expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 106 (expression_with_alias)


State 1317

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1380


State 1318

   97 expression_if_then_else: $@9 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1381


State 1319

  100 expression_for_loop: $@10 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1382
    ','   shift, and go to state 867


State 1320

  103 expression_while_loop: $@11 "while" '(' expr . ')' optional_emit_semis expression_block
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1383


State 1321

  105 expression_with: $@12 "with" '(' expr . ')' optional_emit_semis expression_block
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1384


State 1322

  249 expression_block_finally: "finally" $@14 . '{' expressions $@15 '}'

    '{'  shift, and go to state 1385


State 1323

  312 tuple_expansion: "name" .

    $default  reduce using rule 312 (tuple_expansion)


State 1324

  313 tuple_expansion: tuple_expansion . ',' "name"
  314 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  315                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1386
    ')'  shift, and go to state 1387


State 1325

  318 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  576 variable_declaration_list: variable_declaration_list . SEMICOLON
  577                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 540
    "name"                 shift, and go to state 541
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1388

    SEMICOLON                        go to state 1389
    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 1390


State 1326

  624 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}' .

    $default  reduce using rule 624 (enum_declaration)


State 1327

  520 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 520 (optional_public_or_private_member_variable)


State 1328

  521 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 521 (optional_public_or_private_member_variable)


State 1329

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  532                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1391
    "static"    shift, and go to state 1330

    $default  reduce using rule 522 (optional_static_member_variable)

    optional_static_member_variable  go to state 1392


State 1330

  523 optional_static_member_variable: "static" .

    $default  reduce using rule 523 (optional_static_member_variable)


State 1331

  524 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1393
    "sealed"    shift, and go to state 1394

    $default  reduce using rule 514 (optional_override)

    optional_override  go to state 1395


State 1332

  528 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 528 (struct_variable_declaration_list)


State 1333

  579 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 579 (let_variable_declaration)


State 1334

  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1396


State 1335

  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1397


State 1336

  332 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1398


State 1337

  333 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1399


State 1338

  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1400


State 1339

  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1401


State 1340

  837 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 . '(' make_variant_dim ')'

    '('  shift, and go to state 1402


State 1341

  841 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1403
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1342

  851 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 851 (make_table_decl)


State 1343

  852 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1404
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 980
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1344

  321 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 321 (expr_cast)


State 1345

  324 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 324 (expr_cast)


State 1346

  327 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 327 (expr_cast)


State 1347

  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1405
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1348

  809 use_initializer: "uninitialized" .

    $default  reduce using rule 809 (use_initializer)


State 1349

  821 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer .

    $default  reduce using rule 821 (make_struct_decl)


State 1350

  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1406


State 1351

  818 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1407


State 1352

  493 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 493 (expr_generator)


State 1353

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  494 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1408


State 1354

  495 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 495 (expr_generator)


State 1355

  503 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1356

   34 format_string: format_string . STRING_CHARACTER
   37 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1409

    $default  reduce using rule 37 (optional_format_string)


State 1357

  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1410


State 1358

  335 expr_list: expr_list . ',' expr
  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1411


State 1359

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  796 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 796 (make_struct_fields)


State 1360

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  795 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 795 (make_struct_fields)


State 1361

  797 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  798                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1412
    '='   shift, and go to state 762

    copy_or_move  go to state 1413


State 1362

  389 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "name"  shift, and go to state 58

    name_in_namespace  go to state 770
    func_addr_name     go to state 1414


State 1363

  392 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' . $@31 func_addr_name

    $default  reduce using rule 391 ($@31)

    $@31  go to state 1415


State 1364

  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1416


State 1365

  381 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1417


State 1366

  346 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1418


State 1367

  348 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 348 (capture_list)


State 1368

  337 block_or_simple_block: "=>" . expr
  338                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1419
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1420
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1369

  336 block_or_simple_block: expression_block .

    $default  reduce using rule 336 (block_or_simple_block)


State 1370

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 351 (expr_full_block)


State 1371

  352 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1421
    $@16              go to state 397


State 1372

  468 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' . $@35

    $default  reduce using rule 467 ($@35)

    $@35  go to state 1422


State 1373

  474 expr: expr "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 473 ($@37)

    $@37  go to state 1423


State 1374

  479 expr: expr '?' "as" "type" '<' $@38 type_declaration . '>' $@39
  769 type_declaration: type_declaration . '|' type_declaration_no_options
  770                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1424


State 1375

  509 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1376

  507 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1377

  397 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1425


State 1378

  506 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1379

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 1380

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1426

    $default  reduce using rule 75 (expression_else_one_liner)

    expression_else_one_liner  go to state 1427


State 1381

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1428


State 1382

  100 expression_for_loop: $@10 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1429
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1383

  103 expression_while_loop: $@11 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1430


State 1384

  105 expression_with: $@12 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1431


State 1385

  249 expression_block_finally: "finally" $@14 '{' . expressions $@15 '}'

    $default  reduce using rule 273 (expressions)

    expressions  go to state 1432


State 1386

  313 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1433


State 1387

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  315                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1434
    '&'  shift, and go to state 415

    $default  reduce using rule 566 (optional_ref)

    optional_ref  go to state 1435


State 1388

  318 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 318 (expression_let)


State 1389

  576 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 576 (variable_declaration_list)


State 1390

  577 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 577 (variable_declaration_list)


State 1391

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@41 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1436

    $default  reduce using rule 517 (optional_constant)

    optional_constant  go to state 1437


State 1392

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1393
    "sealed"    shift, and go to state 1394

    $default  reduce using rule 514 (optional_override)

    optional_override  go to state 1438


State 1393

  515 optional_override: "override" .

    $default  reduce using rule 515 (optional_override)


State 1394

  516 optional_override: "sealed" .

    $default  reduce using rule 516 (optional_override)


State 1395

  524 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1327
    "private"  shift, and go to state 1328

    $default  reduce using rule 519 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1439


State 1396

  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 807 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1444


State 1397

  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 807 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1445


State 1398

  332 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 332 (expr_type_info)


State 1399

  333 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1446
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1400

  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1447


State 1401

  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1448


State 1402

  837 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    $default  reduce using rule 799 (make_variant_dim)

    make_struct_fields  go to state 1449
    make_variant_dim    go to state 1450


State 1403

  841 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1451


State 1404

  852 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1452


State 1405

  335 expr_list: expr_list . ',' expr
  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 1453


State 1406

  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 807 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1454


State 1407

  818 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    $default  reduce using rule 799 (make_variant_dim)

    make_struct_fields  go to state 1449
    make_variant_dim    go to state 1455


State 1408

  494 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 494 (expr_generator)


State 1409

   34 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 34 (format_string)


State 1410

  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1456
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1411

  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1457


State 1412

  798 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1458
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1413

  797 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1459
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1414

  389 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name .

    $default  reduce using rule 389 (func_addr_expr)


State 1415

  392 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "name"  shift, and go to state 58

    name_in_namespace  go to state 770
    func_addr_name     go to state 1460


State 1416

  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1461
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1417

  381 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 381 (expr_named_call)


State 1418

  346 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 346 (capture_entry)


State 1419

  338 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1462
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1420

  337 block_or_simple_block: "=>" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 337 (block_or_simple_block)


State 1421

  352 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 352 (expr_full_block_assumed_piped)


State 1422

  468 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35 .

    $default  reduce using rule 468 (expr)


State 1423

  474 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 474 (expr)


State 1424

  479 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 478 ($@39)

    $@39  go to state 1463


State 1425

  397 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 397 (expr_field)


State 1426

   76 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1464
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1465
    expression_continue      go to state 1466
    expression_return        go to state 1467
    expression_yield         go to state 1468
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1469
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1427

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1470


State 1428

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 86 ($@3)
    '{'       [reduce using rule 89 ($@5)]
    $default  reduce using rule 89 ($@5)

    expression_if_block  go to state 1471
    $@3                  go to state 1472
    $@5                  go to state 1473

    reduce/reduce conflict on token '{':
       86 $@3: %empty .
       89 $@5: %empty .
      First example: program optional_annotation_list_with_emit_semis "def" optional_public_or_private_function $@13 function_declaration_header optional_emit_semis $@16 '{' expressions $@9 if_or_static_if '(' expr ')' optional_emit_semis . '{' expressions $@4 '}' expression_block_finally expression_else $@17 '}' expression_block_finally $end
      First reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                           $end
               `-> 6: program global_function_declaration
                              `-> 239: optional_annotation_list_with_emit_semis "def" function_declaration
                                                                                      `-> 245: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block
                                                                                                                                                                                        `-> 252: $@16 '{' expressions                                                                                                                                                                          $@17 '}' expression_block_finally
                                                                                                                                                                                                          `-> 274: expressions expression_any
                                                                                                                                                                                                                               `-> 267: expression_if_then_else
                                                                                                                                                                                                                                        `-> 97: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block                                                       expression_else
                                                                                                                                                                                                                                                                                                     `-> 88: $@3              '{' expressions $@4 '}' expression_block_finally
                                                                                                                                                                                                                                                                                                             `-> 86: %empty .
      Second example: program optional_annotation_list_with_emit_semis "def" optional_public_or_private_function $@13 function_declaration_header optional_emit_semis $@16 '{' expressions $@9 if_or_static_if '(' expr ')' optional_emit_semis . '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' SEMICOLON expression_else $@17 '}' expression_block_finally $end
      Second reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                                                      $end
               `-> 6: program global_function_declaration
                              `-> 239: optional_annotation_list_with_emit_semis "def" function_declaration
                                                                                      `-> 245: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block
                                                                                                                                                                                        `-> 252: $@16 '{' expressions                                                                                                                                                                                                                                     $@17 '}' expression_block_finally
                                                                                                                                                                                                          `-> 274: expressions expression_any
                                                                                                                                                                                                                               `-> 267: expression_if_then_else
                                                                                                                                                                                                                                        `-> 97: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block                                                                                                                  expression_else
                                                                                                                                                                                                                                                                                                     `-> 90: $@5              expression_if_one_liner                                                                           SEMICOLON
                                                                                                                                                                                                                                                                                                             `-> 89: %empty . `-> 77: expr
                                                                                                                                                                                                                                                                                                                                      `-> 415: make_decl
                                                                                                                                                                                                                                                                                                                                               `-> 788: make_table_decl
                                                                                                                                                                                                                                                                                                                                                        `-> 849: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'



State 1429

  100 expression_for_loop: $@10 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  335 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1474


State 1430

  103 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1475
    $@16              go to state 397


State 1431

  105 expression_with: $@12 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1476
    $@16              go to state 397


State 1432

  249 expression_block_finally: "finally" $@14 '{' expressions . $@15 '}'
  274 expressions: expressions . expression_any
  275            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 102 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 99 ($@10)
    "with"       reduce using rule 104 ($@12)
    '}'          reduce using rule 248 ($@15)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@9                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@10                              go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@11                              go to state 894
    expression_with                   go to state 895
    $@12                              go to state 896
    expression_with_alias             go to state 897
    $@15                              go to state 1477
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1433

  313 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 313 (tuple_expansion)


State 1434

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1478
    type_declaration_no_options_no_dim  go to state 275


State 1435

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 1479


State 1436

  518 optional_constant: "const" .

    $default  reduce using rule 518 (optional_constant)


State 1437

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@41 function_declaration_header SEMICOLON

    $default  reduce using rule 529 ($@41)

    $@41  go to state 1480


State 1438

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1436

    $default  reduce using rule 517 (optional_constant)

    optional_constant  go to state 1481


State 1439

  524 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 1482
    variable_declaration_type     go to state 1483
    variable_declaration          go to state 1484
    variable_name_with_pos_list   go to state 690


State 1440

  802 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    make_struct_fields  go to state 1485


State 1441

  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  804 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 804 (make_struct_dim_decl)


State 1442

  803 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  805 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1486

    $default  reduce using rule 855 (optional_comma)

    optional_comma  go to state 1487


State 1443

  806 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 806 (optional_make_struct_dim_decl)


State 1444

  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1488


State 1445

  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1489


State 1446

  333 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1490


State 1447

  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 807 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1491


State 1448

  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 807 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1492


State 1449

  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  800 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 800 (make_variant_dim)


State 1450

  837 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1493


State 1451

  841 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')' .

    $default  reduce using rule 841 (make_dim_decl)


State 1452

  852 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 852 (make_table_decl)


State 1453

  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1494


State 1454

  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1495


State 1455

  818 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1496


State 1456

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1497

    $default  reduce using rule 853 (array_comprehension_where)

    array_comprehension_where  go to state 1498


State 1457

  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1499
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1458

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  798 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 798 (make_struct_fields)


State 1459

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  797 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 797 (make_struct_fields)


State 1460

  392 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name .

    $default  reduce using rule 392 (func_addr_expr)


State 1461

  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1497

    $default  reduce using rule 853 (array_comprehension_where)

    array_comprehension_where  go to state 1500


State 1462

  338 block_or_simple_block: "=>" "<-" expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 338 (block_or_simple_block)


State 1463

  479 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 479 (expr)


State 1464

   76 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1465

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1466

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1467

   78 expression_if_one_liner: expression_return .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1468

   79 expression_if_one_liner: expression_yield .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1469

   77 expression_if_one_liner: expr .
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 77 (expression_if_one_liner)


State 1470

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 98 (expression_if_then_else_oneliner)


State 1471

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1501
    "elif"         shift, and go to state 1502
    "static_elif"  shift, and go to state 1503

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1504
    expression_else      go to state 1505


State 1472

   88 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1506


State 1473

   90 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1507
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1465
    expression_continue      go to state 1466
    expression_return        go to state 1467
    expression_yield         go to state 1468
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1469
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1474

  100 expression_for_loop: $@10 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1508


State 1475

  103 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 103 (expression_while_loop)


State 1476

  105 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 105 (expression_with)


State 1477

  249 expression_block_finally: "finally" $@14 '{' expressions $@15 . '}'

    '}'  shift, and go to state 1509


State 1478

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  716 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  717                                   | type_declaration_no_options . "explicit"
  718                                   | type_declaration_no_options . "const"
  719                                   | type_declaration_no_options . '-' "const"
  720                                   | type_declaration_no_options . '&'
  721                                   | type_declaration_no_options . '-' '&'
  722                                   | type_declaration_no_options . '#'
  723                                   | type_declaration_no_options . "implicit"
  724                                   | type_declaration_no_options . '-' '#'
  725                                   | type_declaration_no_options . "==" "const"
  726                                   | type_declaration_no_options . "==" '&'
  727                                   | type_declaration_no_options . '?'
  731                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 547
    "??"        shift, and go to state 370
    ":="        shift, and go to state 548
    '='         shift, and go to state 549
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    copy_or_move_or_clone  go to state 1510


State 1479

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1511
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1480

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1512


State 1481

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@42 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 531 ($@42)

    $@42  go to state 1513


State 1482

  562 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 562 (variable_declaration)


State 1483

  561 variable_declaration: variable_declaration_type .

    $default  reduce using rule 561 (variable_declaration)


State 1484

  524 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 524 (structure_variable_declaration)


State 1485

  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  802 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 765
    ')'  shift, and go to state 1514


State 1486

  803 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  856 optional_comma: ',' .

    '('  shift, and go to state 1515

    $default  reduce using rule 856 (optional_comma)


State 1487

  805 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 805 (make_struct_dim_decl)


State 1488

  812 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 812 (make_struct_decl)


State 1489

  815 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 815 (make_struct_decl)


State 1490

  333 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 333 (expr_type_info)


State 1491

  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1516


State 1492

  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1517


State 1493

  837 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')' .

    $default  reduce using rule 837 (make_dim_decl)


State 1494

  845 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')' .

    $default  reduce using rule 845 (make_dim_decl)


State 1495

  827 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 827 (make_tuple_call)


State 1496

  818 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 818 (make_struct_decl)


State 1497

  854 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1518


State 1498

  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1519


State 1499

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1497

    $default  reduce using rule 853 (array_comprehension_where)

    array_comprehension_where  go to state 1520


State 1500

  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1521


State 1501

   71 expression_else: "else" . optional_emit_semis expression_else_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1522


State 1502

   64 elif_or_static_elif: "elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1503

   65 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1504

   72 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_else_block expression_else

    '('  shift, and go to state 1523


State 1505

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 97 (expression_if_then_else)


State 1506

   88 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 273 (expressions)

    expressions  go to state 1524


State 1507

   90 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1525


State 1508

  100 expression_for_loop: $@10 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1526
    $@16              go to state 397


State 1509

  249 expression_block_finally: "finally" $@14 '{' expressions $@15 '}' .

    $default  reduce using rule 249 (expression_block_finally)


State 1510

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1527
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1511

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1528


State 1512

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1529


State 1513

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1530


State 1514

  802 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 802 (make_struct_dim_list)


State 1515

  803 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    make_struct_fields  go to state 1531


State 1516

  831 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 831 (make_dim_decl)


State 1517

  834 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 834 (make_dim_decl)


State 1518

  854 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1532
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1519

  857 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 857 (array_comprehension)


State 1520

  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1533


State 1521

  859 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 859 (array_comprehension)


State 1522

   71 expression_else: "else" optional_emit_semis . expression_else_block

    '{'       reduce using rule 91 ($@6)
    '{'       [reduce using rule 94 ($@8)]
    $default  reduce using rule 94 ($@8)

    expression_else_block  go to state 1534
    $@6                    go to state 1535
    $@8                    go to state 1536

    reduce/reduce conflict on token '{':
       91 $@6: %empty .
       94 $@8: %empty .
      First example: program optional_annotation_list_with_emit_semis "def" optional_public_or_private_function $@13 function_declaration_header optional_emit_semis $@16 '{' expressions $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block "else" optional_emit_semis . '{' expressions $@7 '}' expression_block_finally $@17 '}' expression_block_finally $end
      First reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                                  $end
               `-> 6: program global_function_declaration
                              `-> 239: optional_annotation_list_with_emit_semis "def" function_declaration
                                                                                      `-> 245: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block
                                                                                                                                                                                        `-> 252: $@16 '{' expressions                                                                                                                                                                                                                 $@17 '}' expression_block_finally
                                                                                                                                                                                                          `-> 274: expressions expression_any
                                                                                                                                                                                                                               `-> 267: expression_if_then_else
                                                                                                                                                                                                                                        `-> 97: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else
                                                                                                                                                                                                                                                                                                                         `-> 71: "else" optional_emit_semis expression_else_block
                                                                                                                                                                                                                                                                                                                                                            `-> 93: $@6              '{' expressions $@7 '}' expression_block_finally
                                                                                                                                                                                                                                                                                                                                                                    `-> 91: %empty .
      Second example: program optional_annotation_list_with_emit_semis "def" optional_public_or_private_function $@13 function_declaration_header optional_emit_semis $@16 '{' expressions $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block "else" optional_emit_semis . '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' SEMICOLON $@17 '}' expression_block_finally $end
      Second reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             $end
               `-> 6: program global_function_declaration
                              `-> 239: optional_annotation_list_with_emit_semis "def" function_declaration
                                                                                      `-> 245: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block
                                                                                                                                                                                        `-> 252: $@16 '{' expressions                                                                                                                                                                                                                                                                            $@17 '}' expression_block_finally
                                                                                                                                                                                                          `-> 274: expressions expression_any
                                                                                                                                                                                                                               `-> 267: expression_if_then_else
                                                                                                                                                                                                                                        `-> 97: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else
                                                                                                                                                                                                                                                                                                                         `-> 71: "else" optional_emit_semis expression_else_block
                                                                                                                                                                                                                                                                                                                                                            `-> 95: $@8              expression_if_one_liner                                                                           SEMICOLON
                                                                                                                                                                                                                                                                                                                                                                    `-> 94: %empty . `-> 77: expr
                                                                                                                                                                                                                                                                                                                                                                                             `-> 415: make_decl
                                                                                                                                                                                                                                                                                                                                                                                                      `-> 788: make_table_decl
                                                                                                                                                                                                                                                                                                                                                                                                               `-> 849: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'



State 1523

   72 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_else_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1537
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1524

   88 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  274 expressions: expressions . expression_any
  275            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 102 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 99 ($@10)
    "with"       reduce using rule 104 ($@12)
    '}'          reduce using rule 87 ($@4)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    $@4                               go to state 1538
    expression_if_then_else           go to state 887
    $@9                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@10                              go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@11                              go to state 894
    expression_with                   go to state 895
    $@12                              go to state 896
    expression_with_alias             go to state 897
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1525

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 90 (expression_if_block)


State 1526

  100 expression_for_loop: $@10 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 100 (expression_for_loop)


State 1527

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1539


State 1528

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 315 (tuple_expansion_variable_declaration)


State 1529

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON .

    $default  reduce using rule 530 (struct_variable_declaration_list)


State 1530

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1540


State 1531

  793 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  794                   | make_struct_fields . ',' "name" ":=" expr
  797                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  798                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  803 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 765
    ')'  shift, and go to state 1541


State 1532

  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'
  854 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 854 (array_comprehension_where)


State 1533

  858 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 858 (array_comprehension)


State 1534

   71 expression_else: "else" optional_emit_semis expression_else_block .

    $default  reduce using rule 71 (expression_else)


State 1535

   93 expression_else_block: $@6 . '{' expressions $@7 '}' expression_block_finally

    '{'  shift, and go to state 1542


State 1536

   95 expression_else_block: $@8 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1543
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1465
    expression_continue      go to state 1466
    expression_return        go to state 1467
    expression_yield         go to state 1468
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1469
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1537

   72 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_else_block expression_else
  382 expr_method_call: expr . "->" "name" '(' ')'
  383                 | expr . "->" "name" '(' expr_list ')'
  393 expr_field: expr . '.' "name"
  394           | expr . '.' '.' "name"
  395           | expr . '.' "name" '(' ')'
  396           | expr . '.' "name" '(' expr_list ')'
  397           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  398           | expr . '.' basic_type_declaration '(' ')'
  399           | expr . '.' basic_type_declaration '(' expr_list ')'
  402           | expr . '.' $@32 error $@33
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  504 expr_mtag: expr . '.' "$f" '(' expr ')'
  505          | expr . "?." "$f" '(' expr ')'
  506          | expr . '.' '.' "$f" '(' expr ')'
  507          | expr . '.' "?." "$f" '(' expr ')'
  508          | expr . "as" "$f" '(' expr ')'
  509          | expr . '?' "as" "$f" '(' expr ')'
  510          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1544


State 1538

   88 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1545


State 1539

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 314 (tuple_expansion_variable_declaration)


State 1540

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 250 ($@16)

    expression_block  go to state 1546
    $@16              go to state 397


State 1541

  803 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 803 (make_struct_dim_list)


State 1542

   93 expression_else_block: $@6 '{' . expressions $@7 '}' expression_block_finally

    $default  reduce using rule 273 (expressions)

    expressions  go to state 1547


State 1543

   95 expression_else_block: $@8 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1548


State 1544

   72 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_else_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1549


State 1545

   88 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1216

    $default  reduce using rule 246 (expression_block_finally)

    expression_block_finally  go to state 1550


State 1546

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 532 (struct_variable_declaration_list)


State 1547

   93 expression_else_block: $@6 '{' expressions . $@7 '}' expression_block_finally
  274 expressions: expressions . expression_any
  275            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 102 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 99 ($@10)
    "with"       reduce using rule 104 ($@12)
    '}'          reduce using rule 92 ($@7)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    $@7                               go to state 1551
    expression_if_then_else           go to state 887
    $@9                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@10                              go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@11                              go to state 894
    expression_with                   go to state 895
    $@12                              go to state 896
    expression_with_alias             go to state 897
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1548

   95 expression_else_block: $@8 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 95 (expression_else_block)


State 1549

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_else_block expression_else

    '{'       reduce using rule 91 ($@6)
    '{'       [reduce using rule 94 ($@8)]
    $default  reduce using rule 94 ($@8)

    expression_else_block  go to state 1552
    $@6                    go to state 1535
    $@8                    go to state 1536

    reduce/reduce conflict on token '{':
       91 $@6: %empty .
       94 $@8: %empty .
      First example: program optional_annotation_list_with_emit_semis "def" optional_public_or_private_function $@13 function_declaration_header optional_emit_semis $@16 '{' expressions $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block elif_or_static_elif '(' expr ')' optional_emit_semis . '{' expressions $@7 '}' expression_block_finally expression_else $@17 '}' expression_block_finally $end
      First reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $end
               `-> 6: program global_function_declaration
                              `-> 239: optional_annotation_list_with_emit_semis "def" function_declaration
                                                                                      `-> 245: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block
                                                                                                                                                                                        `-> 252: $@16 '{' expressions                                                                                                                                                                                                                                                           $@17 '}' expression_block_finally
                                                                                                                                                                                                          `-> 274: expressions expression_any
                                                                                                                                                                                                                               `-> 267: expression_if_then_else
                                                                                                                                                                                                                                        `-> 97: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else
                                                                                                                                                                                                                                                                                                                         `-> 72: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block                                                     expression_else
                                                                                                                                                                                                                                                                                                                                                                                      `-> 93: $@6              '{' expressions $@7 '}' expression_block_finally
                                                                                                                                                                                                                                                                                                                                                                                              `-> 91: %empty .
      Second example: program optional_annotation_list_with_emit_semis "def" optional_public_or_private_function $@13 function_declaration_header optional_emit_semis $@16 '{' expressions $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block elif_or_static_elif '(' expr ')' optional_emit_semis . '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' SEMICOLON expression_else $@17 '}' expression_block_finally $end
      Second reduce derivation
        $accept
        `-> 0: programend
               `-> 6: program global_function_declaration
                              `-> 239: optional_annotation_list_with_emit_semis "def" function_declaration
                                                                                      `-> 245: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block
                                                                                                                                                                                        `-> 252: $@16 '{' expressions                                                                                                                                                                                                                                                                                                                      $@17 '}' expression_block_finally
                                                                                                                                                                                                          `-> 274: expressions expression_any
                                                                                                                                                                                                                               `-> 267: expression_if_then_else
                                                                                                                                                                                                                                        `-> 97: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else
                                                                                                                                                                                                                                                                                                                         `-> 72: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block                                                                                                                expression_else
                                                                                                                                                                                                                                                                                                                                                                                      `-> 95: $@8              expression_if_one_liner                                                                           SEMICOLON
                                                                                                                                                                                                                                                                                                                                                                                              `-> 94: %empty . `-> 77: expr
                                                                                                                                                                                                                                                                                                                                                                                                                       `-> 415: make_decl
                                                                                                                                                                                                                                                                                                                                                                                                                                `-> 788: make_table_decl
                                                                                                                                                                                                                                                                                                                                                                                                                                         `-> 849: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'



State 1550

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 88 (expression_if_block)


State 1551

   93 expression_else_block: $@6 '{' expressions $@7 . '}' expression_block_finally

    '}'  shift, and go to state 1553


State 1552

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block . expression_else

    "else"         shift, and go to state 1501
    "elif"         shift, and go to state 1502
    "static_elif"  shift, and go to state 1503

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1504
    expression_else      go to state 1554


State 1553

   93 expression_else_block: $@6 '{' expressions $@7 '}' . expression_block_finally

    "finally"  shift, and go to state 1216

    $default  reduce using rule 246 (expression_block_finally)

    expression_block_finally  go to state 1555


State 1554

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else .

    $default  reduce using rule 72 (expression_else)


State 1555

   93 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally .

    $default  reduce using rule 93 (expression_else_block)
