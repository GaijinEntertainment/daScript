Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1459 conflicts: 1 reduce/reduce
State 1552 conflicts: 1 reduce/reduce
State 1579 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 format_string: %empty
   34              | format_string STRING_CHARACTER

   35 optional_format_string: %empty

   36 $@1: %empty

   37 optional_format_string: ':' $@1 format_string

   38 string_builder_body: %empty
   39                    | string_builder_body character_sequence
   40                    | string_builder_body "{" expr optional_format_string "}"

   41 string_builder: "start of the string" string_builder_body "end of the string"

   42 reader_character_sequence: STRING_CHARACTER
   43                          | reader_character_sequence STRING_CHARACTER

   44 $@2: %empty

   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   46 options_declaration: "options" annotation_argument_list

   47 require_declaration: "require" require_module

   48 require_module_name: "name"
   49                    | '%' require_module_name
   50                    | require_module_name '.' "name"
   51                    | require_module_name '/' "name"

   52 require_module: require_module_name is_public_module
   53               | require_module_name "as" "name" is_public_module

   54 is_public_module: %empty
   55                 | "public"

   56 expect_declaration: "expect" expect_list

   57 expect_list: expect_error
   58            | expect_list ',' expect_error

   59 expect_error: "integer constant"
   60             | "integer constant" ':' "integer constant"

   61 expression_label: "label" "integer constant" ':'

   62 expression_goto: "goto" "label" "integer constant"
   63                | "goto" expr

   64 elif_or_static_elif: "elif"
   65                    | "static_elif"

   66 emit_semis: "new line, semicolon"
   67           | emit_semis "new line, semicolon"

   68 optional_emit_semis: %empty
   69                    | emit_semis

   70 expression_else: %empty
   71                | "else" optional_emit_semis expression_else_block
   72                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else

   73 if_or_static_if: "if"
   74                | "static_if"

   75 expression_else_one_liner: %empty
   76                          | "else" expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return
   79                        | expression_yield
   80                        | expression_break
   81                        | expression_continue

   82 semis: SEMICOLON
   83      | semis SEMICOLON

   84 optional_semis: %empty
   85               | semis

   86 $@3: %empty

   87 $@4: %empty

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   89 $@5: %empty

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   91 $@6: %empty

   92 $@7: %empty

   93 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally

   94 $@8: %empty

   95 expression_else_block: $@8 expression_if_one_liner SEMICOLON

   96 $@9: %empty

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   99 for_variable_name_with_pos_list: "name"
  100                                | "$i" '(' expr ')'
  101                                | "name" "aka" "name"
  102                                | '(' tuple_expansion ')'
  103                                | for_variable_name_with_pos_list ',' "name"
  104                                | for_variable_name_with_pos_list ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list ',' '(' tuple_expansion ')'

  106 $@10: %empty

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  108 expression_unsafe: "unsafe" optional_emit_semis expression_block

  109 $@11: %empty

  110 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block

  111 $@12: %empty

  112 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block

  113 expression_with_alias: "assume" "name" '=' expr

  114 annotation_argument_value: string_constant
  115                          | "name"
  116                          | "integer constant"
  117                          | "floating point constant"
  118                          | "true"
  119                          | "false"

  120 annotation_argument_value_list: annotation_argument_value
  121                               | annotation_argument_value_list ',' annotation_argument_value

  122 annotation_argument_name: "name"
  123                         | "type"
  124                         | "in"

  125 annotation_argument: annotation_argument_name '=' string_constant
  126                    | annotation_argument_name '=' "name"
  127                    | annotation_argument_name '=' "integer constant"
  128                    | annotation_argument_name '=' "floating point constant"
  129                    | annotation_argument_name '=' "true"
  130                    | annotation_argument_name '=' "false"
  131                    | annotation_argument_name
  132                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  133 annotation_argument_list: annotation_argument
  134                         | annotation_argument_list ',' annotation_argument

  135 metadata_argument_list: '@' annotation_argument optional_emit_semis
  136                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  137 annotation_declaration_name: name_in_namespace
  138                            | "require"
  139                            | "private"
  140                            | "template"

  141 annotation_declaration_basic: annotation_declaration_name
  142                             | annotation_declaration_name '(' annotation_argument_list ')'

  143 annotation_declaration: annotation_declaration_basic
  144                       | '!' annotation_declaration
  145                       | annotation_declaration "&&" annotation_declaration
  146                       | annotation_declaration "||" annotation_declaration
  147                       | annotation_declaration "^^" annotation_declaration
  148                       | '(' annotation_declaration ')'
  149                       | "|>" annotation_declaration

  150 annotation_list: annotation_declaration
  151                | annotation_list ',' annotation_declaration

  152 optional_annotation_list: %empty
  153                         | '[' annotation_list ']'

  154 optional_annotation_list_with_emit_semis: %empty
  155                                         | '[' annotation_list ']' optional_emit_semis

  156 optional_function_argument_list: %empty
  157                                | '(' ')'
  158                                | '(' function_argument_list ')'

  159 optional_function_type: %empty
  160                       | ':' type_declaration

  161 function_name: "name"
  162              | "operator" '!'
  163              | "operator" '~'
  164              | "operator" "+="
  165              | "operator" "-="
  166              | "operator" "*="
  167              | "operator" "/="
  168              | "operator" "%="
  169              | "operator" "&="
  170              | "operator" "|="
  171              | "operator" "^="
  172              | "operator" "&&="
  173              | "operator" "||="
  174              | "operator" "^^="
  175              | "operator" "&&"
  176              | "operator" "||"
  177              | "operator" "^^"
  178              | "operator" '+'
  179              | "operator" '-'
  180              | "operator" '*'
  181              | "operator" '/'
  182              | "operator" '%'
  183              | "operator" '<'
  184              | "operator" '>'
  185              | "operator" ".."
  186              | "operator" "=="
  187              | "operator" "!="
  188              | "operator" "<="
  189              | "operator" ">="
  190              | "operator" '&'
  191              | "operator" '|'
  192              | "operator" '^'
  193              | "++" "operator"
  194              | "--" "operator"
  195              | "operator" "++"
  196              | "operator" "--"
  197              | "operator" "<<"
  198              | "operator" ">>"
  199              | "operator" "<<="
  200              | "operator" ">>="
  201              | "operator" "<<<"
  202              | "operator" ">>>"
  203              | "operator" "<<<="
  204              | "operator" ">>>="
  205              | "operator" '[' ']'
  206              | "operator" "?[" ']'
  207              | "operator" '.'
  208              | "operator" "?."
  209              | "operator" '.' "name"
  210              | "operator" '.' "name" ":="
  211              | "operator" '.' "name" "+="
  212              | "operator" '.' "name" "-="
  213              | "operator" '.' "name" "*="
  214              | "operator" '.' "name" "/="
  215              | "operator" '.' "name" "%="
  216              | "operator" '.' "name" "&="
  217              | "operator" '.' "name" "|="
  218              | "operator" '.' "name" "^="
  219              | "operator" '.' "name" "&&="
  220              | "operator" '.' "name" "||="
  221              | "operator" '.' "name" "^^="
  222              | "operator" "?." "name"
  223              | "operator" ":="
  224              | "operator" "delete"
  225              | "operator" "??"
  226              | "operator" "is"
  227              | "operator" "as"
  228              | "operator" "is" "name"
  229              | "operator" "as" "name"
  230              | "operator" '?' "as"
  231              | "operator" '?' "as" "name"
  232              | "bool"
  233              | "string"
  234              | "int"
  235              | "int2"
  236              | "int3"
  237              | "int4"
  238              | "uint"
  239              | "uint2"
  240              | "uint3"
  241              | "uint4"
  242              | "float"
  243              | "float2"
  244              | "float3"
  245              | "float4"
  246              | "range"
  247              | "urange"
  248              | "range64"
  249              | "urange64"
  250              | "int64"
  251              | "uint64"
  252              | "double"
  253              | "int8"
  254              | "uint8"
  255              | "int16"
  256              | "uint16"

  257 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  258 optional_public_or_private_function: %empty
  259                                    | "private"
  260                                    | "public"

  261 function_declaration_header: function_name optional_function_argument_list optional_function_type

  262 $@13: %empty

  263 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block

  264 expression_block_finally: %empty

  265 $@14: %empty

  266 $@15: %empty

  267 expression_block_finally: "finally" $@14 '{' expressions $@15 '}'

  268 $@16: %empty

  269 $@17: %empty

  270 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally

  271 expr_call_pipe: expr_call expr_full_block_assumed_piped

  272 expression_any: SEMICOLON
  273               | expr_assign SEMICOLON
  274               | expression_delete SEMICOLON
  275               | expression_let
  276               | expression_while_loop
  277               | expression_unsafe
  278               | expression_with
  279               | expression_with_alias SEMICOLON
  280               | expression_for_loop
  281               | expression_break SEMICOLON
  282               | expression_continue SEMICOLON
  283               | expression_return SEMICOLON
  284               | expression_yield SEMICOLON
  285               | expression_if_then_else
  286               | expression_if_then_else_oneliner
  287               | expression_try_catch
  288               | expression_label SEMICOLON
  289               | expression_goto SEMICOLON
  290               | "pass" SEMICOLON

  291 expressions: %empty
  292            | expressions expression_any
  293            | expressions error

  294 optional_expr_list: %empty
  295                   | expr_list optional_comma

  296 optional_expr_map_tuple_list: %empty
  297                             | expr_map_tuple_list optional_comma

  298 type_declaration_no_options_list: type_declaration
  299                                 | type_declaration_no_options_list c_or_s type_declaration

  300 name_in_namespace: "name"
  301                  | "name" "::" "name"
  302                  | "::" "name"

  303 expression_delete: "delete" expr
  304                  | "delete" "explicit" expr

  305 $@18: %empty

  306 $@19: %empty

  307 new_type_declaration: '<' $@18 type_declaration '>' $@19
  308                     | structure_type_declaration

  309 expr_new: "new" new_type_declaration
  310         | "new" new_type_declaration '(' use_initializer ')'
  311         | "new" new_type_declaration '(' expr_list ')'
  312         | "new" new_type_declaration '(' make_struct_single ')'
  313         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  314         | "new" make_decl

  315 expression_break: "break"

  316 expression_continue: "continue"

  317 expression_return: "return"
  318                  | "return" expr
  319                  | "return" "<-" expr

  320 expression_yield: "yield" expr
  321                 | "yield" "<-" expr

  322 expression_try_catch: "try" expression_block "recover" expression_block

  323 kwd_let_var_or_nothing: "let"
  324                       | "var"
  325                       | %empty

  326 kwd_let: "let"
  327        | "var"

  328 optional_in_scope: "inscope"
  329                  | %empty

  330 tuple_expansion: "name"
  331                | tuple_expansion ',' "name"

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  333                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  334 expression_let: kwd_let optional_in_scope let_variable_declaration
  335               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  336               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  337 $@20: %empty

  338 $@21: %empty

  339 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr

  340 $@22: %empty

  341 $@23: %empty

  342 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr

  343 $@24: %empty

  344 $@25: %empty

  345 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr

  346 $@26: %empty

  347 $@27: %empty

  348 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27

  349 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  350               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  351               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  352 expr_list: expr
  353          | expr_list ',' expr

  354 block_or_simple_block: expression_block
  355                      | "=>" expr
  356                      | "=>" "<-" expr

  357 block_or_lambda: '$'
  358                | '@'
  359                | '@' '@'

  360 capture_entry: '&' "name"
  361              | '=' "name"
  362              | "<-" "name"
  363              | ":=" "name"
  364              | "name" '(' "name" ')'

  365 capture_list: capture_entry
  366             | capture_list ',' capture_entry

  367 optional_capture_list: %empty
  368                      | "capture" '(' capture_list ')'

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  370 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  371                              | '{' expressions '}'

  372 expr_numeric_const: "integer constant"
  373                   | "unsigned integer constant"
  374                   | "long integer constant"
  375                   | "unsigned long integer constant"
  376                   | "unsigned int8 constant"
  377                   | "floating point constant"
  378                   | "double constant"

  379 expr_assign: expr
  380            | expr '=' expr
  381            | expr "<-" expr
  382            | expr ":=" expr
  383            | expr "&=" expr
  384            | expr "|=" expr
  385            | expr "^=" expr
  386            | expr "&&=" expr
  387            | expr "||=" expr
  388            | expr "^^=" expr
  389            | expr "+=" expr
  390            | expr "-=" expr
  391            | expr "*=" expr
  392            | expr "/=" expr
  393            | expr "%=" expr
  394            | expr "<<=" expr
  395            | expr ">>=" expr
  396            | expr "<<<=" expr
  397            | expr ">>>=" expr

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  399                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  400 expr_method_call: expr "->" "name" '(' ')'
  401                 | expr "->" "name" '(' expr_list ')'

  402 func_addr_name: name_in_namespace
  403               | "$i" '(' expr ')'

  404 func_addr_expr: '@' '@' func_addr_name

  405 $@28: %empty

  406 $@29: %empty

  407 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name

  408 $@30: %empty

  409 $@31: %empty

  410 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

  411 expr_field: expr '.' "name"
  412           | expr '.' '.' "name"
  413           | expr '.' "name" '(' ')'
  414           | expr '.' "name" '(' expr_list ')'
  415           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr '.' basic_type_declaration '(' ')'
  417           | expr '.' basic_type_declaration '(' expr_list ')'

  418 $@32: %empty

  419 $@33: %empty

  420 expr_field: expr '.' $@32 error $@33

  421 expr_call: name_in_namespace '(' ')'
  422          | name_in_namespace '(' "uninitialized" ')'
  423          | name_in_namespace '(' make_struct_single ')'
  424          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  425          | name_in_namespace '(' expr_list ')'
  426          | basic_type_declaration '(' ')'
  427          | basic_type_declaration '(' expr_list ')'

  428 expr: "null"
  429     | name_in_namespace
  430     | expr_numeric_const
  431     | expr_reader
  432     | string_builder
  433     | make_decl
  434     | "true"
  435     | "false"
  436     | expr_field
  437     | expr_mtag
  438     | '!' expr
  439     | '~' expr
  440     | '+' expr
  441     | '-' expr
  442     | expr "<<" expr
  443     | expr ">>" expr
  444     | expr "<<<" expr
  445     | expr ">>>" expr
  446     | expr '+' expr
  447     | expr '-' expr
  448     | expr '*' expr
  449     | expr '/' expr
  450     | expr '%' expr
  451     | expr '<' expr
  452     | expr '>' expr
  453     | expr "==" expr
  454     | expr "!=" expr
  455     | expr "<=" expr
  456     | expr ">=" expr
  457     | expr '&' expr
  458     | expr '|' expr
  459     | expr '^' expr
  460     | expr "&&" expr
  461     | expr "||" expr
  462     | expr "^^" expr
  463     | expr ".." expr
  464     | "++" expr
  465     | "--" expr
  466     | expr "++"
  467     | expr "--"
  468     | '(' expr_list optional_comma ')'
  469     | '(' make_struct_single ')'
  470     | expr '[' expr ']'
  471     | expr '.' '[' expr ']'
  472     | expr "?[" expr ']'
  473     | expr '.' "?[" expr ']'
  474     | expr "?." "name"
  475     | expr '.' "?." "name"
  476     | func_addr_expr
  477     | expr_call
  478     | '*' expr
  479     | "deref" '(' expr ')'
  480     | "addr" '(' expr ')'
  481     | expr_generator
  482     | expr "??" expr
  483     | expr '?' expr ':' expr

  484 $@34: %empty

  485 $@35: %empty

  486 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr "is" basic_type_declaration
  488     | expr "is" "name"
  489     | expr "as" "name"

  490 $@36: %empty

  491 $@37: %empty

  492 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr "as" basic_type_declaration
  494     | expr '?' "as" "name"

  495 $@38: %empty

  496 $@39: %empty

  497 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr '?' "as" basic_type_declaration
  499     | expr_type_info
  500     | expr_type_decl
  501     | expr_cast
  502     | expr_new
  503     | expr_method_call
  504     | expr_named_call
  505     | expr_full_block
  506     | expr "<|" expr
  507     | expr "|>" expr
  508     | expr "|>" basic_type_declaration
  509     | expr_call_pipe
  510     | "unsafe" '(' expr ')'

  511 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  512               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  513               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  514 expr_mtag: "$$" '(' expr ')'
  515          | "$i" '(' expr ')'
  516          | "$v" '(' expr ')'
  517          | "$b" '(' expr ')'
  518          | "$a" '(' expr ')'
  519          | "..."
  520          | "$c" '(' expr ')' '(' ')'
  521          | "$c" '(' expr ')' '(' expr_list ')'
  522          | expr '.' "$f" '(' expr ')'
  523          | expr "?." "$f" '(' expr ')'
  524          | expr '.' '.' "$f" '(' expr ')'
  525          | expr '.' "?." "$f" '(' expr ')'
  526          | expr "as" "$f" '(' expr ')'
  527          | expr '?' "as" "$f" '(' expr ')'
  528          | expr "is" "$f" '(' expr ')'
  529          | '@' '@' "$c" '(' expr ')'

  530 optional_field_annotation: %empty
  531                          | metadata_argument_list

  532 optional_override: %empty
  533                  | "override"
  534                  | "sealed"

  535 optional_constant: %empty
  536                  | "const"

  537 optional_public_or_private_member_variable: %empty
  538                                           | "public"
  539                                           | "private"

  540 optional_static_member_variable: %empty
  541                                | "static"

  542 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  543 struct_variable_declaration_list: %empty
  544                                 | struct_variable_declaration_list "new line, semicolon"

  545 $@40: %empty

  546 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON

  547 $@41: %empty

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON

  549 $@42: %empty

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

  551 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  552 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  553                                   | "$a" '(' expr ')'

  554 function_argument_list: function_argument_declaration_no_type
  555                       | function_argument_declaration_type
  556                       | function_argument_declaration_no_type ';' function_argument_list
  557                       | function_argument_declaration_type ';' function_argument_list
  558                       | function_argument_declaration_type ',' function_argument_list

  559 tuple_type: type_declaration
  560           | "name" ':' type_declaration

  561 tuple_type_list: tuple_type
  562                | tuple_type_list c_or_s tuple_type

  563 tuple_alias_type_list: %empty
  564                      | tuple_type
  565                      | tuple_alias_type_list semis tuple_type

  566 variant_type: "name" ':' type_declaration

  567 variant_type_list: variant_type
  568                  | variant_type_list c_or_s variant_type

  569 variant_alias_type_list: %empty
  570                        | variant_type
  571                        | variant_alias_type_list semis variant_type

  572 copy_or_move: '='
  573             | "<-"

  574 variable_declaration_no_type: variable_name_with_pos_list
  575                             | variable_name_with_pos_list '&'
  576                             | variable_name_with_pos_list copy_or_move expr

  577 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  578                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  579 variable_declaration: variable_declaration_type
  580                     | variable_declaration_no_type

  581 copy_or_move_or_clone: '='
  582                      | "<-"
  583                      | ":="

  584 optional_ref: %empty
  585             | '&'

  586 let_variable_name_with_pos_list: "name"
  587                                | "$i" '(' expr ')'
  588                                | "name" "aka" "name"
  589                                | let_variable_name_with_pos_list ',' "name"
  590                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  591 global_let_variable_name_with_pos_list: "name"
  592                                       | global_let_variable_name_with_pos_list ',' "name"

  593 variable_declaration_list: %empty
  594                          | variable_declaration_list SEMICOLON
  595                          | variable_declaration_list let_variable_declaration

  596 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  597                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  598                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  599 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  600                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  601                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  602 optional_shared: %empty
  603                | "shared"

  604 optional_public_or_private_variable: %empty
  605                                    | "private"
  606                                    | "public"

  607 global_variable_declaration_list: %empty
  608                                 | global_variable_declaration_list SEMICOLON

  609 $@43: %empty

  610 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration

  611 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  612 $@44: %empty

  613 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

  614 enum_expression: "name"
  615                | "name" '=' expr

  616 commas: COMMA
  617       | commas COMMA

  618 enum_list: %empty
  619          | enum_expression
  620          | enum_list commas enum_expression

  621 optional_public_or_private_alias: %empty
  622                                 | "private"
  623                                 | "public"

  624 $@45: %empty

  625 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration

  626 alias_declaration: "typedef" single_alias SEMICOLON

  627 optional_public_or_private_enum: %empty
  628                                | "private"
  629                                | "public"

  630 enum_name: "name"

  631 optional_enum_basic_type_declaration: %empty
  632                                     | ':' enum_basic_type_declaration

  633 optional_commas: %empty
  634                | commas

  635 emit_commas: "new line, comma"
  636            | emit_commas "new line, comma"

  637 optional_emit_commas: %empty
  638                     | emit_commas

  639 $@46: %empty

  640 $@47: %empty

  641 $@48: %empty

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

  643 optional_structure_parent: %empty
  644                          | ':' name_in_namespace

  645 optional_sealed: %empty
  646                | "sealed"

  647 structure_name: optional_sealed "name" optional_structure_parent

  648 class_or_struct: "class"
  649                | "struct"
  650                | "template" "class"
  651                | "template" "struct"

  652 optional_public_or_private_structure: %empty
  653                                     | "private"
  654                                     | "public"

  655 optional_struct_variable_declaration_list: ';'
  656                                          | '{' struct_variable_declaration_list '}'

  657 $@49: %empty

  658 $@50: %empty

  659 $@51: %empty

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

  661 variable_name_with_pos_list: "name"
  662                            | "$i" '(' expr ')'
  663                            | "name" "aka" "name"
  664                            | variable_name_with_pos_list ',' "name"
  665                            | variable_name_with_pos_list ',' "name" "aka" "name"

  666 basic_type_declaration: "bool"
  667                       | "string"
  668                       | "int"
  669                       | "int8"
  670                       | "int16"
  671                       | "int64"
  672                       | "int2"
  673                       | "int3"
  674                       | "int4"
  675                       | "uint"
  676                       | "uint8"
  677                       | "uint16"
  678                       | "uint64"
  679                       | "uint2"
  680                       | "uint3"
  681                       | "uint4"
  682                       | "float"
  683                       | "float2"
  684                       | "float3"
  685                       | "float4"
  686                       | "void"
  687                       | "range"
  688                       | "urange"
  689                       | "range64"
  690                       | "urange64"
  691                       | "double"
  692                       | "bitfield"

  693 enum_basic_type_declaration: "int"
  694                            | "int8"
  695                            | "int16"
  696                            | "uint"
  697                            | "uint8"
  698                            | "uint16"
  699                            | "int64"
  700                            | "uint64"

  701 structure_type_declaration: name_in_namespace

  702 auto_type_declaration: "auto"
  703                      | "auto" '(' "name" ')'
  704                      | "$t" '(' expr ')'

  705 bitfield_bits: "name"
  706              | bitfield_bits ';' "name"

  707 bitfield_alias_bits: %empty
  708                    | "name"
  709                    | bitfield_alias_bits commas "name"

  710 $@52: %empty

  711 $@53: %empty

  712 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53

  713 c_or_s: COMMA
  714       | SEMICOLON

  715 table_type_pair: type_declaration
  716                | type_declaration c_or_s type_declaration

  717 dim_list: '[' expr ']'
  718         | '[' ']'
  719         | dim_list '[' expr ']'
  720         | dim_list '[' ']'

  721 type_declaration_no_options: type_declaration_no_options_no_dim
  722                            | type_declaration_no_options_no_dim dim_list

  723 type_declaration_no_options_no_dim: basic_type_declaration
  724                                   | auto_type_declaration
  725                                   | bitfield_type_declaration
  726                                   | structure_type_declaration

  727 $@54: %empty

  728 $@55: %empty

  729 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55
  730                                   | "typedecl" '(' expr ')'
  731                                   | '$' name_in_namespace '(' optional_expr_list ')'

  732 $@56: %empty

  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  734                                   | type_declaration_no_options '-' '[' ']'
  735                                   | type_declaration_no_options "explicit"
  736                                   | type_declaration_no_options "const"
  737                                   | type_declaration_no_options '-' "const"
  738                                   | type_declaration_no_options '&'
  739                                   | type_declaration_no_options '-' '&'
  740                                   | type_declaration_no_options '#'
  741                                   | type_declaration_no_options "implicit"
  742                                   | type_declaration_no_options '-' '#'
  743                                   | type_declaration_no_options "==" "const"
  744                                   | type_declaration_no_options "==" '&'
  745                                   | type_declaration_no_options '?'

  746 $@57: %empty

  747 $@58: %empty

  748 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58
  749                                   | type_declaration_no_options "??"

  750 $@59: %empty

  751 $@60: %empty

  752 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60

  753 $@61: %empty

  754 $@62: %empty

  755 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62

  756 $@63: %empty

  757 $@64: %empty

  758 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64
  759                                   | "block"

  760 $@65: %empty

  761 $@66: %empty

  762 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66

  763 $@67: %empty

  764 $@68: %empty

  765 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  766                                   | "function"

  767 $@69: %empty

  768 $@70: %empty

  769 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70

  770 $@71: %empty

  771 $@72: %empty

  772 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72
  773                                   | "lambda"

  774 $@73: %empty

  775 $@74: %empty

  776 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74

  777 $@75: %empty

  778 $@76: %empty

  779 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76

  780 $@77: %empty

  781 $@78: %empty

  782 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78

  783 $@79: %empty

  784 $@80: %empty

  785 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80

  786 type_declaration: type_declaration_no_options
  787                 | type_declaration '|' type_declaration_no_options
  788                 | type_declaration '|' '#'

  789 $@81: %empty

  790 $@82: %empty

  791 $@83: %empty

  792 $@84: %empty

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

  794 $@85: %empty

  795 $@86: %empty

  796 $@87: %empty

  797 $@88: %empty

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

  799 $@89: %empty

  800 $@90: %empty

  801 $@91: %empty

  802 $@92: %empty

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

  804 make_decl: make_struct_decl
  805          | make_dim_decl
  806          | make_table_decl
  807          | array_comprehension
  808          | make_tuple_call

  809 make_struct_fields: "name" copy_or_move expr
  810                   | "name" ":=" expr
  811                   | make_struct_fields ',' "name" copy_or_move expr
  812                   | make_struct_fields ',' "name" ":=" expr
  813                   | "$f" '(' expr ')' copy_or_move expr
  814                   | "$f" '(' expr ')' ":=" expr
  815                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  817 make_variant_dim: %empty
  818                 | make_struct_fields

  819 make_struct_single: make_struct_fields optional_comma

  820 make_struct_dim_list: '(' make_struct_fields ')'
  821                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  822 make_struct_dim_decl: make_struct_fields
  823                     | make_struct_dim_list optional_comma

  824 optional_make_struct_dim_decl: make_struct_dim_decl
  825                              | %empty

  826 use_initializer: %empty
  827                | "uninitialized"

  828 $@93: %empty

  829 $@94: %empty

  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  831 $@95: %empty

  832 $@96: %empty

  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  834 $@97: %empty

  835 $@98: %empty

  836 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

  837 $@99: %empty

  838 $@100: %empty

  839 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer

  840 make_map_tuple: expr "=>" expr
  841               | expr

  842 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  843 $@101: %empty

  844 $@102: %empty

  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  846 make_dim_decl: '[' optional_expr_list ']'

  847 $@103: %empty

  848 $@104: %empty

  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  850 $@105: %empty

  851 $@106: %empty

  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

  853 $@107: %empty

  854 $@108: %empty

  855 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  856              | "array" '(' expr_list optional_comma ')'

  857 $@109: %empty

  858 $@110: %empty

  859 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'
  860              | "fixed_array" '(' expr_list optional_comma ')'

  861 $@111: %empty

  862 $@112: %empty

  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

  864 expr_map_tuple_list: make_map_tuple
  865                    | expr_map_tuple_list ',' make_map_tuple

  866 $@113: %empty

  867 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  868                | "table" '(' expr_map_tuple_list optional_comma ')'
  869                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  870                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  871 array_comprehension_where: %empty
  872                          | ';' "where" expr

  873 optional_comma: %empty
  874               | ','

  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  876                    | '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  877                    | '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 144 162 438
    '#' (35) 740 742 788
    '$' (36) 24 357 731 733
    '%' (37) 45 49 182 450
    '&' (38) 190 360 457 575 585 738 739 744
    '(' (40) 72 97 98 100 102 105 107 110 112 132 142 148 157 158 310 311 312 313 332 333 349 350 351 364 368 398 399 400 401 403 413 414 415 416 417 421 422 423 424 425 426 427 468 469 479 480 510 511 512 514 515 516 517 518 520 521 522 523 524 525 526 527 528 529 553 587 662 703 704 730 731 733 813 814 815 816 820 821 830 833 836 842 845 849 852 855 856 859 860 863 868 869 870 875 876 877
    ')' (41) 72 97 98 100 102 105 107 110 112 132 142 148 157 158 310 311 312 313 332 333 349 350 351 364 368 398 399 400 401 403 413 414 415 416 417 421 422 423 424 425 426 427 468 469 479 480 510 511 512 514 515 516 517 518 520 521 522 523 524 525 526 527 528 529 553 587 662 703 704 730 731 733 813 814 815 816 820 821 830 833 836 842 845 849 852 855 856 859 860 863 868 869 870 875 876 877
    '*' (42) 180 448 478
    '+' (43) 178 440 446
    ',' (44) 16 58 103 104 105 121 134 151 331 353 366 399 558 589 590 592 664 665 811 812 815 816 821 865 874
    '-' (45) 179 441 447 734 737 739 742
    '.' (46) 50 207 209 210 211 212 213 214 215 216 217 218 219 220 221 411 412 413 414 415 416 417 420 471 473 475 522 524 525
    '/' (47) 51 181 449
    ':' (58) 37 60 61 160 332 483 560 566 577 578 596 597 599 600 632 644
    ';' (59) 18 556 557 655 706 872 875 876 877
    '<' (60) 183 307 339 342 345 348 350 351 407 410 451 486 492 497 511 512 513 712 729 733 748 752 755 758 762 765 769 772 776 779 782 785 830 833 836 839 845 849 852 855 859 863 869 870
    '=' (61) 113 125 126 127 128 129 130 132 361 380 572 581 615 625
    '>' (62) 184 307 339 342 345 348 350 351 407 410 452 486 492 497 511 512 513 712 729 733 748 752 755 758 762 765 769 772 776 779 782 785 830 833 836 839 845 849 852 855 859 863 869 870
    '?' (63) 230 231 483 494 497 498 527 745
    '@' (64) 135 136 358 359 404 407 410 529
    '[' (91) 153 155 205 398 399 415 470 471 717 718 719 720 734 846 875 876
    ']' (93) 153 155 205 206 398 399 415 470 471 472 473 717 718 719 720 734 846 875 876
    '^' (94) 192 459
    '{' (123) 88 93 267 270 336 371 611 642 656 793 798 803 867 877
    '|' (124) 191 458 787 788
    '}' (125) 88 93 267 270 336 371 611 642 656 793 798 803 867 877
    '~' (126) 163 439
    error (256) 293 420
    "lexer error" (258)
    "capture" (259) 368
    "struct" (260) 649 651 830 849
    "class" (261) 648 650 833
    "let" (262) 323 326
    "def" (263) 257 548 550
    "while" (264) 110
    "if" (265) 73 98
    "static_if" (266) 74
    "else" (267) 71 76
    "for" (268) 107 875 876 877
    "recover" (269) 322
    "true" (270) 118 129 434
    "false" (271) 119 130 435
    "new" (272) 309 310 311 312 313 314
    "typeinfo" (273) 349 350 351
    "type" (274) 123 348 486 492 497 729
    "in" (275) 107 124 875 876 877
    "is" (276) 226 228 486 487 488 528
    "as" (277) 53 227 229 230 231 489 492 493 494 497 498 526 527
    "elif" (278) 64
    "static_elif" (279) 65
    "array" (280) 752 849 852 855 856 859
    "return" (281) 317 318 319
    "null" (282) 428
    "break" (283) 315
    "try" (284) 322
    "options" (285) 46
    "table" (286) 755 868 869 870
    "expect" (287) 56
    "const" (288) 536 736 737 743
    "require" (289) 47 138
    "operator" (290) 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
    "enum" (291) 642
    "finally" (292) 267
    "delete" (293) 224 303 304
    "deref" (294) 479
    "typedef" (295) 626
    "typedecl" (296) 730
    "with" (297) 112
    "aka" (298) 101 104 588 590 663 665
    "assume" (299) 113
    "cast" (300) 339
    "override" (301) 533
    "abstract" (302) 548
    "upcast" (303) 342
    "iterator" (304) 758 876
    "var" (305) 324 327
    "addr" (306) 480
    "continue" (307) 316
    "where" (308) 872
    "pass" (309) 290
    "reinterpret" (310) 345
    "module" (311) 26
    "public" (312) 22 55 260 538 606 623 629 654
    "label" (313) 61 62
    "goto" (314) 62 63
    "implicit" (315) 741
    "explicit" (316) 304 735
    "shared" (317) 603
    "private" (318) 23 139 259 539 605 622 628 653
    "smart_ptr" (319) 748
    "unsafe" (320) 108 510
    "inscope" (321) 328
    "static" (322) 541
    "fixed_array" (323) 860 863
    "default" (324) 839
    "uninitialized" (325) 313 422 424 827
    "bool" (326) 232 666
    "void" (327) 686
    "string" (328) 233 667
    "auto" (329) 702 703
    "int" (330) 234 668 693
    "int2" (331) 235 672
    "int3" (332) 236 673
    "int4" (333) 237 674
    "uint" (334) 238 675 696
    "bitfield" (335) 692 712 803
    "uint2" (336) 239 679
    "uint3" (337) 240 680
    "uint4" (338) 241 681
    "float" (339) 242 682
    "float2" (340) 243 683
    "float3" (341) 244 684
    "float4" (342) 245 685
    "range" (343) 246 687
    "urange" (344) 247 688
    "range64" (345) 248 689
    "urange64" (346) 249 690
    "block" (347) 759 762 765
    "int64" (348) 250 671 699
    "uint64" (349) 251 678 700
    "double" (350) 252 691
    "function" (351) 766 769 772
    "lambda" (352) 773 776 779
    "int8" (353) 253 669 694
    "uint8" (354) 254 676 697
    "int16" (355) 255 670 695
    "uint16" (356) 256 677 698
    "tuple" (357) 782 793 842 845 852
    "variant" (358) 785 798 836 855
    "generator" (359) 511 512 513
    "yield" (360) 320 321
    "sealed" (361) 534 646
    "template" (362) 140 650 651
    "+=" (363) 164 211 389
    "-=" (364) 165 212 390
    "/=" (365) 167 214 392
    "*=" (366) 166 213 391
    "%=" (367) 168 215 393
    "&=" (368) 169 216 383
    "|=" (369) 170 217 384
    "^=" (370) 171 218 385
    "<<" (371) 197 442
    ">>" (372) 198 443
    "++" (373) 193 195 464 466
    "--" (374) 194 196 465 467
    "<=" (375) 188 455
    "<<=" (376) 199 394
    ">>=" (377) 200 395
    ">=" (378) 189 456
    "==" (379) 186 453 743 744
    "!=" (380) 187 454
    "->" (381) 400 401
    "<-" (382) 319 321 356 362 381 573 582
    "??" (383) 225 482 749
    "?." (384) 208 222 474 475 523 525
    "?[" (385) 206 472 473
    "<|" (386) 506
    "|>" (387) 149 507 508
    ":=" (388) 210 223 363 382 583 810 812 814 816
    "<<<" (389) 201 444
    ">>>" (390) 202 445
    "<<<=" (391) 203 396
    ">>>=" (392) 204 397
    "=>" (393) 355 356 840
    "::" (394) 301 302
    "&&" (395) 145 175 460
    "||" (396) 146 176 461
    "^^" (397) 147 177 462
    "&&=" (398) 172 219 386
    "||=" (399) 173 220 387
    "^^=" (400) 174 221 388
    ".." (401) 185 463
    "$$" (402) 514
    "$i" (403) 100 403 515 587 662
    "$v" (404) 516
    "$b" (405) 517
    "$a" (406) 518 553
    "$t" (407) 704
    "$c" (408) 520 521 529
    "$f" (409) 522 523 524 525 526 527 528 813 814 815 816
    "..." (410) 519
    "integer constant" <i> (411) 59 60 61 62 116 127 372
    "long integer constant" <i64> (412) 374
    "unsigned integer constant" <ui> (413) 373
    "unsigned long integer constant" <ui64> (414) 375
    "unsigned int8 constant" <ui> (415) 376
    "floating point constant" <fd> (416) 117 128 377
    "double constant" <d> (417) 378
    "name" <s> (418) 25 48 50 51 53 99 101 103 104 113 115 122 126 161 209 210 211 212 213 214 215 216 217 218 219 220 221 222 228 229 231 300 301 302 330 331 350 351 360 361 362 363 364 400 401 411 412 413 414 415 474 475 488 489 494 560 566 586 588 589 590 591 592 614 615 625 630 647 661 663 664 665 703 705 706 708 709 793 798 803 809 810 811 812
    "new line, comma" (419) 17 635 636
    "new line, semicolon" (420) 19 66 67 544
    "start of the string" (421) 31 32 41
    STRING_CHARACTER <ch> (422) 27 29 34 42 43
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 41
    "{" (425) 40
    "}" (426) 40
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 616 617 713
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 82 83 90 95 98 272 273 274 279 281 282 283 284 288 289 290 332 333 546 548 594 596 597 598 599 600 601 608 626 714
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 39
    string_constant <s> (217)
        on left: 31 32
        on right: 114 125
    format_string <s> (218)
        on left: 33 34
        on right: 34 37
    optional_format_string <s> (219)
        on left: 35 37
        on right: 40
    $@1 (220)
        on left: 36
        on right: 37
    string_builder_body <pExpression> (221)
        on left: 38 39 40
        on right: 39 40 41
    string_builder <pExpression> (222)
        on left: 41
        on right: 432
    reader_character_sequence (223)
        on left: 42 43
        on right: 43 45
    expr_reader <pExpression> (224)
        on left: 45
        on right: 20 431
    $@2 (225)
        on left: 44
        on right: 45
    options_declaration (226)
        on left: 46
        on right: 9
    require_declaration (227)
        on left: 47
        on right: 8
    require_module_name <s> (228)
        on left: 48 49 50 51
        on right: 49 50 51 52 53
    require_module (229)
        on left: 52 53
        on right: 47
    is_public_module <b> (230)
        on left: 54 55
        on right: 52 53
    expect_declaration (231)
        on left: 56
        on right: 7
    expect_list (232)
        on left: 57 58
        on right: 56 58
    expect_error (233)
        on left: 59 60
        on right: 57 58
    expression_label <pExpression> (234)
        on left: 61
        on right: 288
    expression_goto <pExpression> (235)
        on left: 62 63
        on right: 289
    elif_or_static_elif <b> (236)
        on left: 64 65
        on right: 72
    emit_semis (237)
        on left: 66 67
        on right: 67 69
    optional_emit_semis (238)
        on left: 68 69
        on right: 71 72 97 107 108 110 112 135 136 155 263 369 370 513 550 660 793 798 867
    expression_else <pExpression> (239)
        on left: 70 71 72
        on right: 72 97
    if_or_static_if <b> (240)
        on left: 73 74
        on right: 97
    expression_else_one_liner <pExpression> (241)
        on left: 75 76
        on right: 98
    expression_if_one_liner <pExpression> (242)
        on left: 77 78 79 80 81
        on right: 76 90 95 98
    semis (243)
        on left: 82 83
        on right: 83 85 565 571
    optional_semis (244)
        on left: 84 85
        on right: 793 798
    expression_if_block <pExpression> (245)
        on left: 88 90
        on right: 97
    $@3 (246)
        on left: 86
        on right: 88
    $@4 (247)
        on left: 87
        on right: 88
    $@5 (248)
        on left: 89
        on right: 90
    expression_else_block <pExpression> (249)
        on left: 93 95
        on right: 71 72
    $@6 (250)
        on left: 91
        on right: 93
    $@7 (251)
        on left: 92
        on right: 93
    $@8 (252)
        on left: 94
        on right: 95
    expression_if_then_else <pExpression> (253)
        on left: 97
        on right: 285
    $@9 (254)
        on left: 96
        on right: 97
    expression_if_then_else_oneliner <pExpression> (255)
        on left: 98
        on right: 286
    for_variable_name_with_pos_list <pNameWithPosList> (256)
        on left: 99 100 101 102 103 104 105
        on right: 103 104 105 107 875 876 877
    expression_for_loop <pExpression> (257)
        on left: 107
        on right: 280
    $@10 (258)
        on left: 106
        on right: 107
    expression_unsafe <pExpression> (259)
        on left: 108
        on right: 277
    expression_while_loop <pExpression> (260)
        on left: 110
        on right: 276
    $@11 (261)
        on left: 109
        on right: 110
    expression_with <pExpression> (262)
        on left: 112
        on right: 278
    $@12 (263)
        on left: 111
        on right: 112
    expression_with_alias <pExpression> (264)
        on left: 113
        on right: 279
    annotation_argument_value <aa> (265)
        on left: 114 115 116 117 118 119
        on right: 120 121
    annotation_argument_value_list <aaList> (266)
        on left: 120 121
        on right: 121 132
    annotation_argument_name <s> (267)
        on left: 122 123 124
        on right: 125 126 127 128 129 130 131 132
    annotation_argument <aa> (268)
        on left: 125 126 127 128 129 130 131 132
        on right: 133 134 135 136
    annotation_argument_list <aaList> (269)
        on left: 133 134
        on right: 46 134 142
    metadata_argument_list <aaList> (270)
        on left: 135 136
        on right: 136 531
    annotation_declaration_name <s> (271)
        on left: 137 138 139 140
        on right: 141 142
    annotation_declaration_basic <fa> (272)
        on left: 141 142
        on right: 143
    annotation_declaration <fa> (273)
        on left: 143 144 145 146 147 148 149
        on right: 144 145 146 147 148 149 150 151
    annotation_list <faList> (274)
        on left: 150 151
        on right: 151 153 155
    optional_annotation_list <faList> (275)
        on left: 152 153
        on right: 369 370
    optional_annotation_list_with_emit_semis <faList> (276)
        on left: 154 155
        on right: 257 548 550 642 660
    optional_function_argument_list <pVarDeclList> (277)
        on left: 156 157 158
        on right: 261 369 370 410 765 772 779
    optional_function_type <pTypeDecl> (278)
        on left: 159 160
        on right: 261 369 370 410 765 772 779
    function_name <s> (279)
        on left: 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256
        on right: 261
    global_function_declaration (280)
        on left: 257
        on right: 6
    optional_public_or_private_function <b> (281)
        on left: 258 259 260
        on right: 263
    function_declaration_header <pFuncDecl> (282)
        on left: 261
        on right: 263 548 550
    function_declaration <pFuncDecl> (283)
        on left: 263
        on right: 257
    $@13 (284)
        on left: 262
        on right: 263
    expression_block_finally <pExpression> (285)
        on left: 264 267
        on right: 88 93 270
    $@14 (286)
        on left: 265
        on right: 267
    $@15 (287)
        on left: 266
        on right: 267
    expression_block <pExpression> (288)
        on left: 270
        on right: 107 108 110 112 263 322 354 370 513 550
    $@16 (289)
        on left: 268
        on right: 270
    $@17 (290)
        on left: 269
        on right: 270
    expr_call_pipe <pExpression> (291)
        on left: 271
        on right: 509
    expression_any <pExpression> (292)
        on left: 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290
        on right: 292
    expressions <pExpression> (293)
        on left: 291 292 293
        on right: 88 93 267 270 292 293 371
    optional_expr_list <pExpression> (294)
        on left: 294 295
        on right: 731 733 846 859
    optional_expr_map_tuple_list <pExpression> (295)
        on left: 296 297
        on right: 867 869 870
    type_declaration_no_options_list <pTypeDeclList> (296)
        on left: 298 299
        on right: 299 733
    name_in_namespace <s> (297)
        on left: 300 301 302
        on right: 45 137 349 350 351 398 399 402 421 422 423 424 425 429 644 701 731 733
    expression_delete <pExpression> (298)
        on left: 303 304
        on right: 274
    new_type_declaration <pTypeDecl> (299)
        on left: 307 308
        on right: 309 310 311 312 313
    $@18 (300)
        on left: 305
        on right: 307
    $@19 (301)
        on left: 306
        on right: 307
    expr_new <pExpression> (302)
        on left: 309 310 311 312 313 314
        on right: 502
    expression_break <pExpression> (303)
        on left: 315
        on right: 80 281
    expression_continue <pExpression> (304)
        on left: 316
        on right: 81 282
    expression_return <pExpression> (305)
        on left: 317 318 319
        on right: 78 283
    expression_yield <pExpression> (306)
        on left: 320 321
        on right: 79 284
    expression_try_catch <pExpression> (307)
        on left: 322
        on right: 287
    kwd_let_var_or_nothing <b> (308)
        on left: 323 324 325
        on right: 551 552
    kwd_let <b> (309)
        on left: 326 327
        on right: 334 335 336 611 613
    optional_in_scope <b> (310)
        on left: 328 329
        on right: 334 335 336
    tuple_expansion <pNameList> (311)
        on left: 330 331
        on right: 102 105 331 332 333
    tuple_expansion_variable_declaration <pVarDecl> (312)
        on left: 332 333
        on right: 335
    expression_let <pExpression> (313)
        on left: 334 335 336
        on right: 275
    expr_cast <pExpression> (314)
        on left: 339 342 345
        on right: 501
    $@20 (315)
        on left: 337
        on right: 339
    $@21 (316)
        on left: 338
        on right: 339
    $@22 (317)
        on left: 340
        on right: 342
    $@23 (318)
        on left: 341
        on right: 342
    $@24 (319)
        on left: 343
        on right: 345
    $@25 (320)
        on left: 344
        on right: 345
    expr_type_decl <pExpression> (321)
        on left: 348
        on right: 500
    $@26 (322)
        on left: 346
        on right: 348
    $@27 (323)
        on left: 347
        on right: 348
    expr_type_info <pExpression> (324)
        on left: 349 350 351
        on right: 499
    expr_list <pExpression> (325)
        on left: 352 353
        on right: 107 295 311 353 399 401 414 417 425 427 468 521 842 856 860 863 875 876 877
    block_or_simple_block <pExpression> (326)
        on left: 354 355 356
        on right: 369
    block_or_lambda <i> (327)
        on left: 357 358 359
        on right: 369 370
    capture_entry <pCapt> (328)
        on left: 360 361 362 363 364
        on right: 365 366
    capture_list <pCaptList> (329)
        on left: 365 366
        on right: 366 368
    optional_capture_list <pCaptList> (330)
        on left: 367 368
        on right: 369 370 511 512 513
    expr_full_block <pExpression> (331)
        on left: 369
        on right: 505
    expr_full_block_assumed_piped <pExpression> (332)
        on left: 370 371
        on right: 271
    expr_numeric_const <pExpression> (333)
        on left: 372 373 374 375 376 377 378
        on right: 430
    expr_assign <pExpression> (334)
        on left: 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397
        on right: 273
    expr_named_call <pExpression> (335)
        on left: 398 399
        on right: 504
    expr_method_call <pExpression> (336)
        on left: 400 401
        on right: 503
    func_addr_name <pExpression> (337)
        on left: 402 403
        on right: 404 407 410
    func_addr_expr <pExpression> (338)
        on left: 404 407 410
        on right: 476
    $@28 (339)
        on left: 405
        on right: 407
    $@29 (340)
        on left: 406
        on right: 407
    $@30 (341)
        on left: 408
        on right: 410
    $@31 (342)
        on left: 409
        on right: 410
    expr_field <pExpression> (343)
        on left: 411 412 413 414 415 416 417 420
        on right: 436
    $@32 (344)
        on left: 418
        on right: 420
    $@33 (345)
        on left: 419
        on right: 420
    expr_call <pExpression> (346)
        on left: 421 422 423 424 425 426 427
        on right: 271 477
    expr <pExpression> (347)
        on left: 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 486 487 488 489 492 493 494 497 498 499 500 501 502 503 504 505 506 507 508 509 510
        on right
    $@34 (348)
        on left: 484
        on right: 486
    $@35 (349)
        on left: 485
        on right: 486
    $@36 (350)
        on left: 490
        on right: 492
    $@37 (351)
        on left: 491
        on right: 492
    $@38 (352)
        on left: 495
        on right: 497
    $@39 (353)
        on left: 496
        on right: 497
    expr_generator <pExpression> (354)
        on left: 511 512 513
        on right: 481
    expr_mtag <pExpression> (355)
        on left: 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529
        on right: 437
    optional_field_annotation <aaList> (356)
        on left: 530 531
        on right: 542 551 552 610 613
    optional_override <i> (357)
        on left: 532 533 534
        on right: 542 550
    optional_constant <b> (358)
        on left: 535 536
        on right: 548 550
    optional_public_or_private_member_variable <b> (359)
        on left: 537 538 539
        on right: 542 548 550
    optional_static_member_variable <b> (360)
        on left: 540 541
        on right: 542 550
    structure_variable_declaration <pVarDecl> (361)
        on left: 542
        on right: 546
    struct_variable_declaration_list <pVarDeclList> (362)
        on left: 543 544 546 548 550
        on right: 544 546 548 550 656
    $@40 (363)
        on left: 545
        on right: 546
    $@41 (364)
        on left: 547
        on right: 548
    $@42 (365)
        on left: 549
        on right: 550
    function_argument_declaration_no_type <pVarDecl> (366)
        on left: 551
        on right: 554 556
    function_argument_declaration_type <pVarDecl> (367)
        on left: 552 553
        on right: 555 557 558
    function_argument_list <pVarDeclList> (368)
        on left: 554 555 556 557 558
        on right: 158 556 557 558
    tuple_type <pVarDecl> (369)
        on left: 559 560
        on right: 561 562 564 565
    tuple_type_list <pVarDeclList> (370)
        on left: 561 562
        on right: 562 782 845 852
    tuple_alias_type_list <pVarDeclList> (371)
        on left: 563 564 565
        on right: 565 793
    variant_type <pVarDecl> (372)
        on left: 566
        on right: 567 568 570 571
    variant_type_list <pVarDeclList> (373)
        on left: 567 568
        on right: 568 785 836 855
    variant_alias_type_list <pVarDeclList> (374)
        on left: 569 570 571
        on right: 571 798
    copy_or_move <b> (375)
        on left: 572 573
        on right: 576 578 809 811 813 815
    variable_declaration_no_type <pVarDecl> (376)
        on left: 574 575 576
        on right: 551 580
    variable_declaration_type <pVarDecl> (377)
        on left: 577 578
        on right: 552 579
    variable_declaration <pVarDecl> (378)
        on left: 579 580
        on right: 542
    copy_or_move_or_clone <i> (379)
        on left: 581 582 583
        on right: 332 333 597 598 600 601
    optional_ref <b> (380)
        on left: 584 585
        on right: 333 598 601
    let_variable_name_with_pos_list <pNameWithPosList> (381)
        on left: 586 587 588 589 590
        on right: 589 590 596 597 598
    global_let_variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 591 592
        on right: 592 599 600 601
    variable_declaration_list <pVarDeclList> (383)
        on left: 593 594 595
        on right: 336 594 595
    let_variable_declaration <pVarDecl> (384)
        on left: 596 597 598
        on right: 334 595 610
    global_let_variable_declaration <pVarDecl> (385)
        on left: 599 600 601
        on right: 613
    optional_shared <b> (386)
        on left: 602 603
        on right: 26 611 613
    optional_public_or_private_variable <b> (387)
        on left: 604 605 606
        on right: 611 613
    global_variable_declaration_list <pVarDeclList> (388)
        on left: 607 608 610
        on right: 608 610 611
    $@43 (389)
        on left: 609
        on right: 610
    global_let (390)
        on left: 611 613
        on right: 5
    $@44 (391)
        on left: 612
        on right: 613
    enum_expression <pEnumPair> (392)
        on left: 614 615
        on right: 619 620
    commas (393)
        on left: 616 617
        on right: 617 620 634 709
    enum_list <pEnum> (394)
        on left: 618 619 620
        on right: 620 642
    optional_public_or_private_alias <b> (395)
        on left: 621 622 623
        on right: 625 793 798 803
    single_alias (396)
        on left: 625
        on right: 626
    $@45 (397)
        on left: 624
        on right: 625
    alias_declaration (398)
        on left: 626
        on right: 10
    optional_public_or_private_enum <b> (399)
        on left: 627 628 629
        on right: 642
    enum_name <pEnum> (400)
        on left: 630
        on right: 642
    optional_enum_basic_type_declaration <type> (401)
        on left: 631 632
        on right: 642
    optional_commas (402)
        on left: 633 634
        on right: 642 803
    emit_commas (403)
        on left: 635 636
        on right: 636 638
    optional_emit_commas (404)
        on left: 637 638
        on right: 642 803
    enum_declaration (405)
        on left: 642
        on right: 4
    $@46 (406)
        on left: 639
        on right: 642
    $@47 (407)
        on left: 640
        on right: 642
    $@48 (408)
        on left: 641
        on right: 642
    optional_structure_parent <s> (409)
        on left: 643 644
        on right: 647
    optional_sealed <b> (410)
        on left: 645 646
        on right: 647
    structure_name <pStructure> (411)
        on left: 647
        on right: 660
    class_or_struct <i> (412)
        on left: 648 649 650 651
        on right: 660
    optional_public_or_private_structure <b> (413)
        on left: 652 653 654
        on right: 660
    optional_struct_variable_declaration_list <pVarDeclList> (414)
        on left: 655 656
        on right: 660
    structure_declaration (415)
        on left: 660
        on right: 3
    $@49 (416)
        on left: 657
        on right: 660
    $@50 (417)
        on left: 658
        on right: 660
    $@51 (418)
        on left: 659
        on right: 660
    variable_name_with_pos_list <pNameWithPosList> (419)
        on left: 661 662 663 664 665
        on right: 574 575 576 577 578 664 665
    basic_type_declaration <type> (420)
        on left: 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692
        on right: 416 417 426 427 487 493 498 508 723
    enum_basic_type_declaration <type> (421)
        on left: 693 694 695 696 697 698 699 700
        on right: 632
    structure_type_declaration <pTypeDecl> (422)
        on left: 701
        on right: 308 726
    auto_type_declaration <pTypeDecl> (423)
        on left: 702 703 704
        on right: 724
    bitfield_bits <pNameList> (424)
        on left: 705 706
        on right: 706 712
    bitfield_alias_bits <pNameList> (425)
        on left: 707 708 709
        on right: 709 803
    bitfield_type_declaration <pTypeDecl> (426)
        on left: 712
        on right: 725
    $@52 (427)
        on left: 710
        on right: 712
    $@53 (428)
        on left: 711
        on right: 712
    c_or_s (429)
        on left: 713 714
        on right: 299 351 562 568 716 870
    table_type_pair <aTypePair> (430)
        on left: 715 716
        on right: 755
    dim_list <pTypeDecl> (431)
        on left: 717 718 719 720
        on right: 719 720 722
    type_declaration_no_options <pTypeDecl> (432)
        on left: 721 722
        on right: 332 339 342 345 407 486 511 512 513 596 597 599 600 734 735 736 737 738 739 740 741 742 743 744 745 749 786 787 830 833 839 849 859 863 869 870
    type_declaration_no_options_no_dim <pTypeDecl> (433)
        on left: 723 724 725 726 729 730 731 733 734 735 736 737 738 739 740 741 742 743 744 745 748 749 752 755 758 759 762 765 766 769 772 773 776 779 782 785
        on right: 721 722
    $@54 (434)
        on left: 727
        on right: 729
    $@55 (435)
        on left: 728
        on right: 729
    $@56 (436)
        on left: 732
        on right: 733
    $@57 (437)
        on left: 746
        on right: 748
    $@58 (438)
        on left: 747
        on right: 748
    $@59 (439)
        on left: 750
        on right: 752
    $@60 (440)
        on left: 751
        on right: 752
    $@61 (441)
        on left: 753
        on right: 755
    $@62 (442)
        on left: 754
        on right: 755
    $@63 (443)
        on left: 756
        on right: 758
    $@64 (444)
        on left: 757
        on right: 758
    $@65 (445)
        on left: 760
        on right: 762
    $@66 (446)
        on left: 761
        on right: 762
    $@67 (447)
        on left: 763
        on right: 765
    $@68 (448)
        on left: 764
        on right: 765
    $@69 (449)
        on left: 767
        on right: 769
    $@70 (450)
        on left: 768
        on right: 769
    $@71 (451)
        on left: 770
        on right: 772
    $@72 (452)
        on left: 771
        on right: 772
    $@73 (453)
        on left: 774
        on right: 776
    $@74 (454)
        on left: 775
        on right: 776
    $@75 (455)
        on left: 777
        on right: 779
    $@76 (456)
        on left: 778
        on right: 779
    $@77 (457)
        on left: 780
        on right: 782
    $@78 (458)
        on left: 781
        on right: 782
    $@79 (459)
        on left: 783
        on right: 785
    $@80 (460)
        on left: 784
        on right: 785
    type_declaration <pTypeDecl> (461)
        on left: 786 787 788
        on right: 160 298 299 307 348 492 497 559 560 566 577 578 625 715 716 729 748 752 758 762 769 776 787 788
    tuple_alias_declaration (462)
        on left: 793
        on right: 12
    $@81 (463)
        on left: 789
        on right: 793
    $@82 (464)
        on left: 790
        on right: 793
    $@83 (465)
        on left: 791
        on right: 793
    $@84 (466)
        on left: 792
        on right: 793
    variant_alias_declaration (467)
        on left: 798
        on right: 11
    $@85 (468)
        on left: 794
        on right: 798
    $@86 (469)
        on left: 795
        on right: 798
    $@87 (470)
        on left: 796
        on right: 798
    $@88 (471)
        on left: 797
        on right: 798
    bitfield_alias_declaration (472)
        on left: 803
        on right: 13
    $@89 (473)
        on left: 799
        on right: 803
    $@90 (474)
        on left: 800
        on right: 803
    $@91 (475)
        on left: 801
        on right: 803
    $@92 (476)
        on left: 802
        on right: 803
    make_decl <pExpression> (477)
        on left: 804 805 806 807 808
        on right: 314 433
    make_struct_fields <pMakeStruct> (478)
        on left: 809 810 811 812 813 814 815 816
        on right: 398 399 415 811 812 815 816 818 819 820 821 822
    make_variant_dim <pExpression> (479)
        on left: 817 818
        on right: 836 855
    make_struct_single <pExpression> (480)
        on left: 819
        on right: 312 313 423 424 469
    make_struct_dim_list <pExpression> (481)
        on left: 820 821
        on right: 821 823
    make_struct_dim_decl <pExpression> (482)
        on left: 822 823
        on right: 824
    optional_make_struct_dim_decl <pExpression> (483)
        on left: 824 825
        on right: 830 833 845 849 852
    use_initializer <b> (484)
        on left: 826 827
        on right: 310 830 833 836 839 845 849 852
    make_struct_decl <pExpression> (485)
        on left: 830 833 836 839
        on right: 804
    $@93 (486)
        on left: 828
        on right: 830
    $@94 (487)
        on left: 829
        on right: 830
    $@95 (488)
        on left: 831
        on right: 833
    $@96 (489)
        on left: 832
        on right: 833
    $@97 (490)
        on left: 834
        on right: 836
    $@98 (491)
        on left: 835
        on right: 836
    $@99 (492)
        on left: 837
        on right: 839
    $@100 (493)
        on left: 838
        on right: 839
    make_map_tuple <pExpression> (494)
        on left: 840 841
        on right: 864 865 877
    make_tuple_call <pExpression> (495)
        on left: 842 845
        on right: 808
    $@101 (496)
        on left: 843
        on right: 845
    $@102 (497)
        on left: 844
        on right: 845
    make_dim_decl <pExpression> (498)
        on left: 846 849 852 855 856 859 860 863
        on right: 805
    $@103 (499)
        on left: 847
        on right: 849
    $@104 (500)
        on left: 848
        on right: 849
    $@105 (501)
        on left: 850
        on right: 852
    $@106 (502)
        on left: 851
        on right: 852
    $@107 (503)
        on left: 853
        on right: 855
    $@108 (504)
        on left: 854
        on right: 855
    $@109 (505)
        on left: 857
        on right: 859
    $@110 (506)
        on left: 858
        on right: 859
    $@111 (507)
        on left: 861
        on right: 863
    $@112 (508)
        on left: 862
        on right: 863
    expr_map_tuple_list <pExpression> (509)
        on left: 864 865
        on right: 297 865 868
    make_table_decl <pExpression> (510)
        on left: 867 868 869 870
        on right: 806
    $@113 (511)
        on left: 866
        on right: 867
    array_comprehension_where <pExpression> (512)
        on left: 871 872
        on right: 875 876 877
    optional_comma <b> (513)
        on left: 873 874
        on right: 295 297 468 819 823 842 856 860 863 868
    array_comprehension <pExpression> (514)
        on left: 875 876 877
        on right: 807


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 154 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  326 kwd_let: "let" .

    $default  reduce using rule 326 (kwd_let)


State 4

   46 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   56 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   47 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  626 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 621 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  327 kwd_let: "var" .

    $default  reduce using rule 327 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  803 bitfield_alias_declaration: "bitfield" . $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 799 ($@89)

    $@89  go to state 54


State 11

  793 tuple_alias_declaration: "tuple" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 789 ($@81)

    $@81  go to state 55


State 12

  798 variant_alias_declaration: "variant" . $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 794 ($@85)

    $@85  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   45 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  155 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  257 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  642 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'
  660 structure_declaration: optional_annotation_list_with_emit_semis . $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 657 ($@49)

    $@49  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  611 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  613           | kwd_let . optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 602 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  123 annotation_argument_name: "type" .

    $default  reduce using rule 123 (annotation_argument_name)


State 35

  124 annotation_argument_name: "in" .

    $default  reduce using rule 124 (annotation_argument_name)


State 36

  122 annotation_argument_name: "name" .

    $default  reduce using rule 122 (annotation_argument_name)


State 37

  125 annotation_argument: annotation_argument_name . '=' string_constant
  126                    | annotation_argument_name . '=' "name"
  127                    | annotation_argument_name . '=' "integer constant"
  128                    | annotation_argument_name . '=' "floating point constant"
  129                    | annotation_argument_name . '=' "true"
  130                    | annotation_argument_name . '=' "false"
  131                    | annotation_argument_name .
  132                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 131 (annotation_argument)


State 38

  133 annotation_argument_list: annotation_argument .

    $default  reduce using rule 133 (annotation_argument_list)


State 39

   46 options_declaration: "options" annotation_argument_list .
  134 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 46 (options_declaration)


State 40

   59 expect_error: "integer constant" .
   60             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 59 (expect_error)


State 41

   56 expect_declaration: "expect" expect_list .
   58 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 56 (expect_declaration)


State 42

   57 expect_list: expect_error .

    $default  reduce using rule 57 (expect_list)


State 43

   48 require_module_name: "name" .

    $default  reduce using rule 48 (require_module_name)


State 44

   49 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   50 require_module_name: require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"
   52 require_module: require_module_name . is_public_module
   53               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 88


State 46

   47 require_declaration: "require" require_module .

    $default  reduce using rule 47 (require_declaration)


State 47

  623 optional_public_or_private_alias: "public" .

    $default  reduce using rule 623 (optional_public_or_private_alias)


State 48

  622 optional_public_or_private_alias: "private" .

    $default  reduce using rule 622 (optional_public_or_private_alias)


State 49

  625 single_alias: optional_public_or_private_alias . "name" $@45 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  626 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 602 (optional_shared)

    optional_shared  go to state 91


State 54

  803 bitfield_alias_declaration: "bitfield" $@89 . optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 621 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  793 tuple_alias_declaration: "tuple" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 621 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  798 variant_alias_declaration: "variant" $@85 . optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 621 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  302 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  300 name_in_namespace: "name" .
  301                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 300 (name_in_namespace)


State 59

   45 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 44 ($@2)

    $@2  go to state 97


State 60

  138 annotation_declaration_name: "require" .

    $default  reduce using rule 138 (annotation_declaration_name)


State 61

  139 annotation_declaration_name: "private" .

    $default  reduce using rule 139 (annotation_declaration_name)


State 62

  140 annotation_declaration_name: "template" .

    $default  reduce using rule 140 (annotation_declaration_name)


State 63

  149 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  144 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  148 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  141 annotation_declaration_basic: annotation_declaration_name .
  142                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 141 (annotation_declaration_basic)


State 67

  143 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 143 (annotation_declaration)


State 68

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  150 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 150 (annotation_list)


State 69

  151 annotation_list: annotation_list . ',' annotation_declaration
  155 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  137 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 137 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  257 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 258 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 639 ($@46)

    $@46  go to state 111


State 76

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 . class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  603 optional_shared: "shared" .

    $default  reduce using rule 603 (optional_shared)


State 78

  611 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  613           | kwd_let optional_shared . optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 604 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  125 annotation_argument: annotation_argument_name '=' . string_constant
  126                    | annotation_argument_name '=' . "name"
  127                    | annotation_argument_name '=' . "integer constant"
  128                    | annotation_argument_name '=' . "floating point constant"
  129                    | annotation_argument_name '=' . "true"
  130                    | annotation_argument_name '=' . "false"
  132                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  134 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   60 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   58 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   49 require_module_name: '%' require_module_name .
   50                    | require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 49 (require_module_name)


State 84

   53 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   55 is_public_module: "public" .

    $default  reduce using rule 55 (is_public_module)


State 86

   51 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   50 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   52 require_module: require_module_name is_public_module .

    $default  reduce using rule 52 (require_module)


State 89

  625 single_alias: optional_public_or_private_alias "name" . $@45 '=' type_declaration

    $default  reduce using rule 624 ($@45)

    $@45  go to state 133


State 90

  626 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 626 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias . "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 137


State 93

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 138


State 94

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias . "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 139


State 95

  302 name_in_namespace: "::" "name" .

    $default  reduce using rule 302 (name_in_namespace)


State 96

  301 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   45 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  149                       | "|>" annotation_declaration .

    $default  reduce using rule 149 (annotation_declaration)


State 99

  144 annotation_declaration: '!' annotation_declaration .
  145                       | annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 144 (annotation_declaration)


State 100

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  148                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  142 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  145 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  146 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  147 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  151 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  155 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  260 optional_public_or_private_function: "public" .

    $default  reduce using rule 260 (optional_public_or_private_function)


State 108

  259 optional_public_or_private_function: "private" .

    $default  reduce using rule 259 (optional_public_or_private_function)


State 109

  263 function_declaration: optional_public_or_private_function . $@13 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 262 ($@13)

    $@13  go to state 152


State 110

  257 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 257 (global_function_declaration)


State 111

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 627 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  649 class_or_struct: "struct" .

    $default  reduce using rule 649 (class_or_struct)


State 113

  648 class_or_struct: "class" .

    $default  reduce using rule 648 (class_or_struct)


State 114

  650 class_or_struct: "template" . "class"
  651                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct . optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 652 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  606 optional_public_or_private_variable: "public" .

    $default  reduce using rule 606 (optional_public_or_private_variable)


State 117

  605 optional_public_or_private_variable: "private" .

    $default  reduce using rule 605 (optional_public_or_private_variable)


State 118

  611 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  613           | kwd_let optional_shared optional_public_or_private_variable . $@44 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 612 ($@44)

    $@44  go to state 162


State 119

  129 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 129 (annotation_argument)


State 120

  130 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 130 (annotation_argument)


State 121

  127 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 127 (annotation_argument)


State 122

  128 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 128 (annotation_argument)


State 123

  126 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 126 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  132 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  125 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 125 (annotation_argument)


State 127

  134 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 134 (annotation_argument_list)


State 128

   60 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 60 (expect_error)


State 129

   58 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 58 (expect_list)


State 130

   53 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 175


State 131

   51 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 51 (require_module_name)


State 132

   50 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 50 (require_module_name)


State 133

  625 single_alias: optional_public_or_private_alias "name" $@45 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" . optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 637 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" . optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  301 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 301 (name_in_namespace)


State 141

   42 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 42 (reader_character_sequence)


State 142

   43 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 45 (expr_reader)


State 143

  148 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 148 (annotation_declaration)


State 144

  134 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  142 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  145                       | annotation_declaration "&&" annotation_declaration .
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 145 (annotation_declaration)


State 146

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  146                       | annotation_declaration "||" annotation_declaration .
  147                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 146 (annotation_declaration)


State 147

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  147                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 147 (annotation_declaration)


State 148

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  151 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 151 (annotation_list)


State 149

   66 emit_semis: "new line, semicolon" .

    $default  reduce using rule 66 (emit_semis)


State 150

   67 emit_semis: emit_semis . "new line, semicolon"
   69 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 69 (optional_emit_semis)


State 151

  155 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 155 (optional_annotation_list_with_emit_semis)


State 152

  263 function_declaration: optional_public_or_private_function $@13 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 215


State 153

  629 optional_public_or_private_enum: "public" .

    $default  reduce using rule 629 (optional_public_or_private_enum)


State 154

  628 optional_public_or_private_enum: "private" .

    $default  reduce using rule 628 (optional_public_or_private_enum)


State 155

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 216

    enum_name  go to state 217


State 156

  651 class_or_struct: "template" "struct" .

    $default  reduce using rule 651 (class_or_struct)


State 157

  650 class_or_struct: "template" "class" .

    $default  reduce using rule 650 (class_or_struct)


State 158

  654 optional_public_or_private_structure: "public" .

    $default  reduce using rule 654 (optional_public_or_private_structure)


State 159

  653 optional_public_or_private_structure: "private" .

    $default  reduce using rule 653 (optional_public_or_private_structure)


State 160

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure . $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 658 ($@50)

    $@50  go to state 218


State 161

  611 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 607 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  613 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 530 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  118 annotation_argument_value: "true" .

    $default  reduce using rule 118 (annotation_argument_value)


State 168

  119 annotation_argument_value: "false" .

    $default  reduce using rule 119 (annotation_argument_value)


State 169

  116 annotation_argument_value: "integer constant" .

    $default  reduce using rule 116 (annotation_argument_value)


State 170

  117 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 117 (annotation_argument_value)


State 171

  115 annotation_argument_value: "name" .

    $default  reduce using rule 115 (annotation_argument_value)


State 172

  114 annotation_argument_value: string_constant .

    $default  reduce using rule 114 (annotation_argument_value)


State 173

  120 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 120 (annotation_argument_value_list)


State 174

  121 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  132 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   53 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 53 (require_module)


State 176

  625 single_alias: optional_public_or_private_alias "name" $@45 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  635 emit_commas: "new line, comma" .

    $default  reduce using rule 635 (emit_commas)


State 178

  636 emit_commas: emit_commas . "new line, comma"
  638 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 638 (optional_emit_commas)


State 179

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas . $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 800 ($@90)

    $@90  go to state 278


State 180

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 790 ($@82)

    $@82  go to state 279


State 181

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis . $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 795 ($@86)

    $@86  go to state 280


State 182

   43 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 43 (reader_character_sequence)


State 183

  142 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 142 (annotation_declaration_basic)


State 184

   67 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 67 (emit_semis)


State 185

  162 function_name: "operator" . '!'
  163              | "operator" . '~'
  164              | "operator" . "+="
  165              | "operator" . "-="
  166              | "operator" . "*="
  167              | "operator" . "/="
  168              | "operator" . "%="
  169              | "operator" . "&="
  170              | "operator" . "|="
  171              | "operator" . "^="
  172              | "operator" . "&&="
  173              | "operator" . "||="
  174              | "operator" . "^^="
  175              | "operator" . "&&"
  176              | "operator" . "||"
  177              | "operator" . "^^"
  178              | "operator" . '+'
  179              | "operator" . '-'
  180              | "operator" . '*'
  181              | "operator" . '/'
  182              | "operator" . '%'
  183              | "operator" . '<'
  184              | "operator" . '>'
  185              | "operator" . ".."
  186              | "operator" . "=="
  187              | "operator" . "!="
  188              | "operator" . "<="
  189              | "operator" . ">="
  190              | "operator" . '&'
  191              | "operator" . '|'
  192              | "operator" . '^'
  195              | "operator" . "++"
  196              | "operator" . "--"
  197              | "operator" . "<<"
  198              | "operator" . ">>"
  199              | "operator" . "<<="
  200              | "operator" . ">>="
  201              | "operator" . "<<<"
  202              | "operator" . ">>>"
  203              | "operator" . "<<<="
  204              | "operator" . ">>>="
  205              | "operator" . '[' ']'
  206              | "operator" . "?[" ']'
  207              | "operator" . '.'
  208              | "operator" . "?."
  209              | "operator" . '.' "name"
  210              | "operator" . '.' "name" ":="
  211              | "operator" . '.' "name" "+="
  212              | "operator" . '.' "name" "-="
  213              | "operator" . '.' "name" "*="
  214              | "operator" . '.' "name" "/="
  215              | "operator" . '.' "name" "%="
  216              | "operator" . '.' "name" "&="
  217              | "operator" . '.' "name" "|="
  218              | "operator" . '.' "name" "^="
  219              | "operator" . '.' "name" "&&="
  220              | "operator" . '.' "name" "||="
  221              | "operator" . '.' "name" "^^="
  222              | "operator" . "?." "name"
  223              | "operator" . ":="
  224              | "operator" . "delete"
  225              | "operator" . "??"
  226              | "operator" . "is"
  227              | "operator" . "as"
  228              | "operator" . "is" "name"
  229              | "operator" . "as" "name"
  230              | "operator" . '?' "as"
  231              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 281
    "as"      shift, and go to state 282
    "delete"  shift, and go to state 283
    "+="      shift, and go to state 284
    "-="      shift, and go to state 285
    "/="      shift, and go to state 286
    "*="      shift, and go to state 287
    "%="      shift, and go to state 288
    "&="      shift, and go to state 289
    "|="      shift, and go to state 290
    "^="      shift, and go to state 291
    "<<"      shift, and go to state 292
    ">>"      shift, and go to state 293
    "++"      shift, and go to state 294
    "--"      shift, and go to state 295
    "<="      shift, and go to state 296
    "<<="     shift, and go to state 297
    ">>="     shift, and go to state 298
    ">="      shift, and go to state 299
    "=="      shift, and go to state 300
    "!="      shift, and go to state 301
    "??"      shift, and go to state 302
    "?."      shift, and go to state 303
    "?["      shift, and go to state 304
    ":="      shift, and go to state 305
    "<<<"     shift, and go to state 306
    ">>>"     shift, and go to state 307
    "<<<="    shift, and go to state 308
    ">>>="    shift, and go to state 309
    "&&"      shift, and go to state 310
    "||"      shift, and go to state 311
    "^^"      shift, and go to state 312
    "&&="     shift, and go to state 313
    "||="     shift, and go to state 314
    "^^="     shift, and go to state 315
    ".."      shift, and go to state 316
    '?'       shift, and go to state 317
    '|'       shift, and go to state 318
    '^'       shift, and go to state 319
    '&'       shift, and go to state 320
    '<'       shift, and go to state 321
    '>'       shift, and go to state 322
    '-'       shift, and go to state 323
    '+'       shift, and go to state 324
    '*'       shift, and go to state 325
    '/'       shift, and go to state 326
    '%'       shift, and go to state 327
    '~'       shift, and go to state 328
    '!'       shift, and go to state 329
    '.'       shift, and go to state 330
    '['       shift, and go to state 331


State 186

  232 function_name: "bool" .

    $default  reduce using rule 232 (function_name)


State 187

  233 function_name: "string" .

    $default  reduce using rule 233 (function_name)


State 188

  234 function_name: "int" .

    $default  reduce using rule 234 (function_name)


State 189

  235 function_name: "int2" .

    $default  reduce using rule 235 (function_name)


State 190

  236 function_name: "int3" .

    $default  reduce using rule 236 (function_name)


State 191

  237 function_name: "int4" .

    $default  reduce using rule 237 (function_name)


State 192

  238 function_name: "uint" .

    $default  reduce using rule 238 (function_name)


State 193

  239 function_name: "uint2" .

    $default  reduce using rule 239 (function_name)


State 194

  240 function_name: "uint3" .

    $default  reduce using rule 240 (function_name)


State 195

  241 function_name: "uint4" .

    $default  reduce using rule 241 (function_name)


State 196

  242 function_name: "float" .

    $default  reduce using rule 242 (function_name)


State 197

  243 function_name: "float2" .

    $default  reduce using rule 243 (function_name)


State 198

  244 function_name: "float3" .

    $default  reduce using rule 244 (function_name)


State 199

  245 function_name: "float4" .

    $default  reduce using rule 245 (function_name)


State 200

  246 function_name: "range" .

    $default  reduce using rule 246 (function_name)


State 201

  247 function_name: "urange" .

    $default  reduce using rule 247 (function_name)


State 202

  248 function_name: "range64" .

    $default  reduce using rule 248 (function_name)


State 203

  249 function_name: "urange64" .

    $default  reduce using rule 249 (function_name)


State 204

  250 function_name: "int64" .

    $default  reduce using rule 250 (function_name)


State 205

  251 function_name: "uint64" .

    $default  reduce using rule 251 (function_name)


State 206

  252 function_name: "double" .

    $default  reduce using rule 252 (function_name)


State 207

  253 function_name: "int8" .

    $default  reduce using rule 253 (function_name)


State 208

  254 function_name: "uint8" .

    $default  reduce using rule 254 (function_name)


State 209

  255 function_name: "int16" .

    $default  reduce using rule 255 (function_name)


State 210

  256 function_name: "uint16" .

    $default  reduce using rule 256 (function_name)


State 211

  193 function_name: "++" . "operator"

    "operator"  shift, and go to state 332


State 212

  194 function_name: "--" . "operator"

    "operator"  shift, and go to state 333


State 213

  161 function_name: "name" .

    $default  reduce using rule 161 (function_name)


State 214

  261 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 335


State 215

  263 function_declaration: optional_public_or_private_function $@13 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 336


State 216

  630 enum_name: "name" .

    $default  reduce using rule 630 (enum_name)


State 217

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    ':'  shift, and go to state 337

    $default  reduce using rule 631 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 338


State 218

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 . structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 645 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  608 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  610                                 | global_variable_declaration_list . $@43 optional_field_annotation let_variable_declaration
  611 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 609 ($@43)

    SEMICOLON  go to state 343
    $@43       go to state 344


State 220

  135 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 345


State 221

  136 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  531 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 531 (optional_field_annotation)


State 222

  613 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  121 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  132 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 132 (annotation_argument)


State 228

  729 type_declaration_no_options_no_dim: "type" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 351


State 229

  752 type_declaration_no_options_no_dim: "array" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 352


State 230

  755 type_declaration_no_options_no_dim: "table" . '<' $@61 table_type_pair '>' $@62

    '<'  shift, and go to state 353


State 231

  730 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  758 type_declaration_no_options_no_dim: "iterator" . '<' $@63 type_declaration '>' $@64

    '<'  shift, and go to state 355


State 233

  748 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 356


State 234

  666 basic_type_declaration: "bool" .

    $default  reduce using rule 666 (basic_type_declaration)


State 235

  686 basic_type_declaration: "void" .

    $default  reduce using rule 686 (basic_type_declaration)


State 236

  667 basic_type_declaration: "string" .

    $default  reduce using rule 667 (basic_type_declaration)


State 237

  702 auto_type_declaration: "auto" .
  703                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 702 (auto_type_declaration)


State 238

  668 basic_type_declaration: "int" .

    $default  reduce using rule 668 (basic_type_declaration)


State 239

  672 basic_type_declaration: "int2" .

    $default  reduce using rule 672 (basic_type_declaration)


State 240

  673 basic_type_declaration: "int3" .

    $default  reduce using rule 673 (basic_type_declaration)


State 241

  674 basic_type_declaration: "int4" .

    $default  reduce using rule 674 (basic_type_declaration)


State 242

  675 basic_type_declaration: "uint" .

    $default  reduce using rule 675 (basic_type_declaration)


State 243

  692 basic_type_declaration: "bitfield" .
  712 bitfield_type_declaration: "bitfield" . '<' $@52 bitfield_bits '>' $@53

    '<'  shift, and go to state 358

    $default  reduce using rule 692 (basic_type_declaration)


State 244

  679 basic_type_declaration: "uint2" .

    $default  reduce using rule 679 (basic_type_declaration)


State 245

  680 basic_type_declaration: "uint3" .

    $default  reduce using rule 680 (basic_type_declaration)


State 246

  681 basic_type_declaration: "uint4" .

    $default  reduce using rule 681 (basic_type_declaration)


State 247

  682 basic_type_declaration: "float" .

    $default  reduce using rule 682 (basic_type_declaration)


State 248

  683 basic_type_declaration: "float2" .

    $default  reduce using rule 683 (basic_type_declaration)


State 249

  684 basic_type_declaration: "float3" .

    $default  reduce using rule 684 (basic_type_declaration)


State 250

  685 basic_type_declaration: "float4" .

    $default  reduce using rule 685 (basic_type_declaration)


State 251

  687 basic_type_declaration: "range" .

    $default  reduce using rule 687 (basic_type_declaration)


State 252

  688 basic_type_declaration: "urange" .

    $default  reduce using rule 688 (basic_type_declaration)


State 253

  689 basic_type_declaration: "range64" .

    $default  reduce using rule 689 (basic_type_declaration)


State 254

  690 basic_type_declaration: "urange64" .

    $default  reduce using rule 690 (basic_type_declaration)


State 255

  759 type_declaration_no_options_no_dim: "block" .
  762                                   | "block" . '<' $@65 type_declaration '>' $@66
  765                                   | "block" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 359

    $default  reduce using rule 759 (type_declaration_no_options_no_dim)


State 256

  671 basic_type_declaration: "int64" .

    $default  reduce using rule 671 (basic_type_declaration)


State 257

  678 basic_type_declaration: "uint64" .

    $default  reduce using rule 678 (basic_type_declaration)


State 258

  691 basic_type_declaration: "double" .

    $default  reduce using rule 691 (basic_type_declaration)


State 259

  766 type_declaration_no_options_no_dim: "function" .
  769                                   | "function" . '<' $@69 type_declaration '>' $@70
  772                                   | "function" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 360

    $default  reduce using rule 766 (type_declaration_no_options_no_dim)


State 260

  773 type_declaration_no_options_no_dim: "lambda" .
  776                                   | "lambda" . '<' $@73 type_declaration '>' $@74
  779                                   | "lambda" . '<' $@75 optional_function_argument_list optional_function_type '>' $@76

    '<'  shift, and go to state 361

    $default  reduce using rule 773 (type_declaration_no_options_no_dim)


State 261

  669 basic_type_declaration: "int8" .

    $default  reduce using rule 669 (basic_type_declaration)


State 262

  676 basic_type_declaration: "uint8" .

    $default  reduce using rule 676 (basic_type_declaration)


State 263

  670 basic_type_declaration: "int16" .

    $default  reduce using rule 670 (basic_type_declaration)


State 264

  677 basic_type_declaration: "uint16" .

    $default  reduce using rule 677 (basic_type_declaration)


State 265

  782 type_declaration_no_options_no_dim: "tuple" . '<' $@77 tuple_type_list '>' $@78

    '<'  shift, and go to state 362


State 266

  785 type_declaration_no_options_no_dim: "variant" . '<' $@79 variant_type_list '>' $@80

    '<'  shift, and go to state 363


State 267

  704 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  731 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  733                                   | '$' . name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 365


State 269

  701 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 701 (structure_type_declaration)


State 270

  723 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 271

  726 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 272

  724 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 273

  725 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 274

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  786 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 786 (type_declaration)


State 275

  721 type_declaration_no_options: type_declaration_no_options_no_dim .
  722                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 375

    $default  reduce using rule 721 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  625 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 625 (single_alias)


State 277

  636 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 636 (emit_commas)


State 278

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 . '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    '{'  shift, and go to state 378


State 279

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 379


State 280

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 . '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    '{'  shift, and go to state 380


State 281

  226 function_name: "operator" "is" .
  228              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 226 (function_name)


State 282

  227 function_name: "operator" "as" .
  229              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 227 (function_name)


State 283

  224 function_name: "operator" "delete" .

    $default  reduce using rule 224 (function_name)


State 284

  164 function_name: "operator" "+=" .

    $default  reduce using rule 164 (function_name)


State 285

  165 function_name: "operator" "-=" .

    $default  reduce using rule 165 (function_name)


State 286

  167 function_name: "operator" "/=" .

    $default  reduce using rule 167 (function_name)


State 287

  166 function_name: "operator" "*=" .

    $default  reduce using rule 166 (function_name)


State 288

  168 function_name: "operator" "%=" .

    $default  reduce using rule 168 (function_name)


State 289

  169 function_name: "operator" "&=" .

    $default  reduce using rule 169 (function_name)


State 290

  170 function_name: "operator" "|=" .

    $default  reduce using rule 170 (function_name)


State 291

  171 function_name: "operator" "^=" .

    $default  reduce using rule 171 (function_name)


State 292

  197 function_name: "operator" "<<" .

    $default  reduce using rule 197 (function_name)


State 293

  198 function_name: "operator" ">>" .

    $default  reduce using rule 198 (function_name)


State 294

  195 function_name: "operator" "++" .

    $default  reduce using rule 195 (function_name)


State 295

  196 function_name: "operator" "--" .

    $default  reduce using rule 196 (function_name)


State 296

  188 function_name: "operator" "<=" .

    $default  reduce using rule 188 (function_name)


State 297

  199 function_name: "operator" "<<=" .

    $default  reduce using rule 199 (function_name)


State 298

  200 function_name: "operator" ">>=" .

    $default  reduce using rule 200 (function_name)


State 299

  189 function_name: "operator" ">=" .

    $default  reduce using rule 189 (function_name)


State 300

  186 function_name: "operator" "==" .

    $default  reduce using rule 186 (function_name)


State 301

  187 function_name: "operator" "!=" .

    $default  reduce using rule 187 (function_name)


State 302

  225 function_name: "operator" "??" .

    $default  reduce using rule 225 (function_name)


State 303

  208 function_name: "operator" "?." .
  222              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 208 (function_name)


State 304

  206 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 305

  223 function_name: "operator" ":=" .

    $default  reduce using rule 223 (function_name)


State 306

  201 function_name: "operator" "<<<" .

    $default  reduce using rule 201 (function_name)


State 307

  202 function_name: "operator" ">>>" .

    $default  reduce using rule 202 (function_name)


State 308

  203 function_name: "operator" "<<<=" .

    $default  reduce using rule 203 (function_name)


State 309

  204 function_name: "operator" ">>>=" .

    $default  reduce using rule 204 (function_name)


State 310

  175 function_name: "operator" "&&" .

    $default  reduce using rule 175 (function_name)


State 311

  176 function_name: "operator" "||" .

    $default  reduce using rule 176 (function_name)


State 312

  177 function_name: "operator" "^^" .

    $default  reduce using rule 177 (function_name)


State 313

  172 function_name: "operator" "&&=" .

    $default  reduce using rule 172 (function_name)


State 314

  173 function_name: "operator" "||=" .

    $default  reduce using rule 173 (function_name)


State 315

  174 function_name: "operator" "^^=" .

    $default  reduce using rule 174 (function_name)


State 316

  185 function_name: "operator" ".." .

    $default  reduce using rule 185 (function_name)


State 317

  230 function_name: "operator" '?' . "as"
  231              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 318

  191 function_name: "operator" '|' .

    $default  reduce using rule 191 (function_name)


State 319

  192 function_name: "operator" '^' .

    $default  reduce using rule 192 (function_name)


State 320

  190 function_name: "operator" '&' .

    $default  reduce using rule 190 (function_name)


State 321

  183 function_name: "operator" '<' .

    $default  reduce using rule 183 (function_name)


State 322

  184 function_name: "operator" '>' .

    $default  reduce using rule 184 (function_name)


State 323

  179 function_name: "operator" '-' .

    $default  reduce using rule 179 (function_name)


State 324

  178 function_name: "operator" '+' .

    $default  reduce using rule 178 (function_name)


State 325

  180 function_name: "operator" '*' .

    $default  reduce using rule 180 (function_name)


State 326

  181 function_name: "operator" '/' .

    $default  reduce using rule 181 (function_name)


State 327

  182 function_name: "operator" '%' .

    $default  reduce using rule 182 (function_name)


State 328

  163 function_name: "operator" '~' .

    $default  reduce using rule 163 (function_name)


State 329

  162 function_name: "operator" '!' .

    $default  reduce using rule 162 (function_name)


State 330

  207 function_name: "operator" '.' .
  209              | "operator" '.' . "name"
  210              | "operator" '.' . "name" ":="
  211              | "operator" '.' . "name" "+="
  212              | "operator" '.' . "name" "-="
  213              | "operator" '.' . "name" "*="
  214              | "operator" '.' . "name" "/="
  215              | "operator" '.' . "name" "%="
  216              | "operator" '.' . "name" "&="
  217              | "operator" '.' . "name" "|="
  218              | "operator" '.' . "name" "^="
  219              | "operator" '.' . "name" "&&="
  220              | "operator" '.' . "name" "||="
  221              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 386

    $default  reduce using rule 207 (function_name)


State 331

  205 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 332

  193 function_name: "++" "operator" .

    $default  reduce using rule 193 (function_name)


State 333

  194 function_name: "--" "operator" .

    $default  reduce using rule 194 (function_name)


State 334

  157 optional_function_argument_list: '(' . ')'
  158                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    ')'   shift, and go to state 389
    '@'   shift, and go to state 220

    $default  reduce using rule 530 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 393


State 335

  261 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 395


State 336

  263 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 396
    $@16              go to state 397


State 337

  632 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 398
    "uint"    shift, and go to state 399
    "int64"   shift, and go to state 400
    "uint64"  shift, and go to state 401
    "int8"    shift, and go to state 402
    "uint8"   shift, and go to state 403
    "int16"   shift, and go to state 404
    "uint16"  shift, and go to state 405

    enum_basic_type_declaration  go to state 406


State 338

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 637 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 407


State 339

  646 optional_sealed: "sealed" .

    $default  reduce using rule 646 (optional_sealed)


State 340

  647 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 408


State 341

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name . optional_emit_semis $@51 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 409


State 342

  611 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 611 (global_let)


State 343

  608 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 608 (global_variable_declaration_list)


State 344

  610 global_variable_declaration_list: global_variable_declaration_list $@43 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 530 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 410


State 345

  135 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 411


State 346

  136 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 412


State 347

  591 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 591 (global_let_variable_name_with_pos_list)


State 348

  592 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  599 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  600                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  601                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 413
    ':'  shift, and go to state 414
    '&'  shift, and go to state 415

    $default  reduce using rule 584 (optional_ref)

    optional_ref  go to state 416


State 349

  613 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 613 (global_let)


State 350

  121 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 121 (annotation_argument_value_list)


State 351

  729 type_declaration_no_options_no_dim: "type" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 727 ($@54)

    $@54  go to state 417


State 352

  752 type_declaration_no_options_no_dim: "array" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 750 ($@59)

    $@59  go to state 418


State 353

  755 type_declaration_no_options_no_dim: "table" '<' . $@61 table_type_pair '>' $@62

    $default  reduce using rule 753 ($@61)

    $@61  go to state 419


State 354

  730 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 485
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 355

  758 type_declaration_no_options_no_dim: "iterator" '<' . $@63 type_declaration '>' $@64

    $default  reduce using rule 756 ($@63)

    $@63  go to state 495


State 356

  748 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 746 ($@57)

    $@57  go to state 496


State 357

  703 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 497


State 358

  712 bitfield_type_declaration: "bitfield" '<' . $@52 bitfield_bits '>' $@53

    $default  reduce using rule 710 ($@52)

    $@52  go to state 498


State 359

  762 type_declaration_no_options_no_dim: "block" '<' . $@65 type_declaration '>' $@66
  765                                   | "block" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 763 ($@67)
    '>'       reduce using rule 763 ($@67)
    '('       reduce using rule 763 ($@67)
    $default  reduce using rule 760 ($@65)

    $@65  go to state 499
    $@67  go to state 500


State 360

  769 type_declaration_no_options_no_dim: "function" '<' . $@69 type_declaration '>' $@70
  772                                   | "function" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 770 ($@71)
    '>'       reduce using rule 770 ($@71)
    '('       reduce using rule 770 ($@71)
    $default  reduce using rule 767 ($@69)

    $@69  go to state 501
    $@71  go to state 502


State 361

  776 type_declaration_no_options_no_dim: "lambda" '<' . $@73 type_declaration '>' $@74
  779                                   | "lambda" '<' . $@75 optional_function_argument_list optional_function_type '>' $@76

    ':'       reduce using rule 777 ($@75)
    '>'       reduce using rule 777 ($@75)
    '('       reduce using rule 777 ($@75)
    $default  reduce using rule 774 ($@73)

    $@73  go to state 503
    $@75  go to state 504


State 362

  782 type_declaration_no_options_no_dim: "tuple" '<' . $@77 tuple_type_list '>' $@78

    $default  reduce using rule 780 ($@77)

    $@77  go to state 505


State 363

  785 type_declaration_no_options_no_dim: "variant" '<' . $@79 variant_type_list '>' $@80

    $default  reduce using rule 783 ($@79)

    $@79  go to state 506


State 364

  704 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 507
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 365

  731 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  733                                   | '$' name_in_namespace . '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 508
    '('  shift, and go to state 509


State 366

  736 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 736 (type_declaration_no_options_no_dim)


State 367

  741 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 368

  735 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 735 (type_declaration_no_options_no_dim)


State 369

  743 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  744                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 510
    '&'      shift, and go to state 511


State 370

  749 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 371

  745 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 745 (type_declaration_no_options_no_dim)


State 372

  738 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 738 (type_declaration_no_options_no_dim)


State 373

  734 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  737                                   | type_declaration_no_options '-' . "const"
  739                                   | type_declaration_no_options '-' . '&'
  742                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 512
    '&'      shift, and go to state 513
    '['      shift, and go to state 514
    '#'      shift, and go to state 515


State 374

  740 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 375

  717 dim_list: '[' . expr ']'
  718         | '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 516
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 517
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 376

  719 dim_list: dim_list . '[' expr ']'
  720         | dim_list . '[' ']'
  722 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 518

    $default  reduce using rule 722 (type_declaration_no_options)


State 377

  787 type_declaration: type_declaration '|' . type_declaration_no_options
  788                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268
    '#'          shift, and go to state 519

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 520
    type_declaration_no_options_no_dim  go to state 275


State 378

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' . $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 801 ($@91)

    $@91  go to state 521


State 379

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 791 ($@83)

    $@83  go to state 522


State 380

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' . $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 796 ($@87)

    $@87  go to state 523


State 381

  228 function_name: "operator" "is" "name" .

    $default  reduce using rule 228 (function_name)


State 382

  229 function_name: "operator" "as" "name" .

    $default  reduce using rule 229 (function_name)


State 383

  222 function_name: "operator" "?." "name" .

    $default  reduce using rule 222 (function_name)


State 384

  206 function_name: "operator" "?[" ']' .

    $default  reduce using rule 206 (function_name)


State 385

  230 function_name: "operator" '?' "as" .
  231              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 524

    $default  reduce using rule 230 (function_name)


State 386

  209 function_name: "operator" '.' "name" .
  210              | "operator" '.' "name" . ":="
  211              | "operator" '.' "name" . "+="
  212              | "operator" '.' "name" . "-="
  213              | "operator" '.' "name" . "*="
  214              | "operator" '.' "name" . "/="
  215              | "operator" '.' "name" . "%="
  216              | "operator" '.' "name" . "&="
  217              | "operator" '.' "name" . "|="
  218              | "operator" '.' "name" . "^="
  219              | "operator" '.' "name" . "&&="
  220              | "operator" '.' "name" . "||="
  221              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 525
    "-="   shift, and go to state 526
    "/="   shift, and go to state 527
    "*="   shift, and go to state 528
    "%="   shift, and go to state 529
    "&="   shift, and go to state 530
    "|="   shift, and go to state 531
    "^="   shift, and go to state 532
    ":="   shift, and go to state 533
    "&&="  shift, and go to state 534
    "||="  shift, and go to state 535
    "^^="  shift, and go to state 536

    $default  reduce using rule 209 (function_name)


State 387

  205 function_name: "operator" '[' ']' .

    $default  reduce using rule 205 (function_name)


State 388

  553 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 537


State 389

  157 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 157 (optional_function_argument_list)


State 390

  551 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  552 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 538
    "var"  shift, and go to state 539

    $default  reduce using rule 325 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 540


State 391

  554 function_argument_list: function_argument_declaration_no_type .
  556                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 541

    $default  reduce using rule 554 (function_argument_list)


State 392

  555 function_argument_list: function_argument_declaration_type .
  557                       | function_argument_declaration_type . ';' function_argument_list
  558                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 542
    ';'  shift, and go to state 543

    $default  reduce using rule 555 (function_argument_list)


State 393

  158 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 544


State 394

  160 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 545


State 395

  261 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 261 (function_declaration_header)


State 396

  263 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 263 (function_declaration)


State 397

  270 expression_block: $@16 . '{' expressions $@17 '}' expression_block_finally

    '{'  shift, and go to state 546


State 398

  693 enum_basic_type_declaration: "int" .

    $default  reduce using rule 693 (enum_basic_type_declaration)


State 399

  696 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 696 (enum_basic_type_declaration)


State 400

  699 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 699 (enum_basic_type_declaration)


State 401

  700 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 700 (enum_basic_type_declaration)


State 402

  694 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 694 (enum_basic_type_declaration)


State 403

  697 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 697 (enum_basic_type_declaration)


State 404

  695 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 695 (enum_basic_type_declaration)


State 405

  698 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 698 (enum_basic_type_declaration)


State 406

  632 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 632 (optional_enum_basic_type_declaration)


State 407

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@47 enum_list optional_commas $@48 '}'

    '{'  shift, and go to state 547


State 408

  647 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 548

    $default  reduce using rule 643 (optional_structure_parent)

    optional_structure_parent  go to state 549


State 409

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis . $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 659 ($@51)

    $@51  go to state 550


State 410

  610 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552

    let_variable_name_with_pos_list  go to state 553
    let_variable_declaration         go to state 554


State 411

  135 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 135 (metadata_argument_list)


State 412

  136 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 555


State 413

  592 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 556


State 414

  599 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  600                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 557
    type_declaration_no_options_no_dim  go to state 275


State 415

  585 optional_ref: '&' .

    $default  reduce using rule 585 (optional_ref)


State 416

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 558
    ":="  shift, and go to state 559
    '='   shift, and go to state 560

    copy_or_move_or_clone  go to state 561


State 417

  729 type_declaration_no_options_no_dim: "type" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 562


State 418

  752 type_declaration_no_options_no_dim: "array" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 563


State 419

  755 type_declaration_no_options_no_dim: "table" '<' $@61 . table_type_pair '>' $@62

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 564
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 565


State 420

  830 make_struct_decl: "struct" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 566


State 421

  833 make_struct_decl: "class" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 567


State 422

  434 expr: "true" .

    $default  reduce using rule 434 (expr)


State 423

  435 expr: "false" .

    $default  reduce using rule 435 (expr)


State 424

  309 expr_new: "new" . new_type_declaration
  310         | "new" . new_type_declaration '(' use_initializer ')'
  311         | "new" . new_type_declaration '(' expr_list ')'
  312         | "new" . new_type_declaration '(' make_struct_single ')'
  313         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  314         | "new" . make_decl

    "struct"       shift, and go to state 420
    "class"        shift, and go to state 421
    "array"        shift, and go to state 427
    "table"        shift, and go to state 429
    "fixed_array"  shift, and go to state 436
    "default"      shift, and go to state 437
    "tuple"        shift, and go to state 439
    "variant"      shift, and go to state 440
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 568
    '['            shift, and go to state 464
    '{'            shift, and go to state 468

    name_in_namespace           go to state 269
    new_type_declaration        go to state 569
    structure_type_declaration  go to state 570
    make_decl                   go to state 571
    make_struct_decl            go to state 490
    make_tuple_call             go to state 491
    make_dim_decl               go to state 492
    make_table_decl             go to state 493
    array_comprehension         go to state 494


State 425

  349 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  350               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  351               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 572


State 426

  348 expr_type_decl: "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 573


State 427

  849 make_dim_decl: "array" . "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  852              | "array" . "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'
  855              | "array" . "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  856              | "array" . '(' expr_list optional_comma ')'
  859              | "array" . '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "struct"   shift, and go to state 574
    "tuple"    shift, and go to state 575
    "variant"  shift, and go to state 576
    '<'        shift, and go to state 577
    '('        shift, and go to state 578


State 428

  428 expr: "null" .

    $default  reduce using rule 428 (expr)


State 429

  868 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  869                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  870                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 579
    '('  shift, and go to state 580


State 430

  479 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 581


State 431

  339 expr_cast: "cast" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 582


State 432

  342 expr_cast: "upcast" . '<' $@22 type_declaration_no_options '>' $@23 expr

    '<'  shift, and go to state 583


State 433

  480 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 584


State 434

  345 expr_cast: "reinterpret" . '<' $@24 type_declaration_no_options '>' $@25 expr

    '<'  shift, and go to state 585


State 435

  510 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 586


State 436

  860 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  863              | "fixed_array" . '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 587
    '('  shift, and go to state 588


State 437

  839 make_struct_decl: "default" . '<' $@99 type_declaration_no_options '>' $@100 use_initializer

    '<'  shift, and go to state 589


State 438

  692 basic_type_declaration: "bitfield" .

    $default  reduce using rule 692 (basic_type_declaration)


State 439

  842 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  845                | "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 590
    '('  shift, and go to state 591


State 440

  836 make_struct_decl: "variant" . '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 592


State 441

  511 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  512               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  513               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 593


State 442

  464 expr: "++" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 594
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 443

  465 expr: "--" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 595
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 444

  514 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 596


State 445

  515 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 597


State 446

  516 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 598


State 447

  517 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 599


State 448

  518 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 600


State 449

  520 expr_mtag: "$c" . '(' expr ')' '(' ')'
  521          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 601


State 450

  519 expr_mtag: "..." .

    $default  reduce using rule 519 (expr_mtag)


State 451

  372 expr_numeric_const: "integer constant" .

    $default  reduce using rule 372 (expr_numeric_const)


State 452

  374 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 374 (expr_numeric_const)


State 453

  373 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 373 (expr_numeric_const)


State 454

  375 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 375 (expr_numeric_const)


State 455

  376 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 376 (expr_numeric_const)


State 456

  377 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 377 (expr_numeric_const)


State 457

  378 expr_numeric_const: "double constant" .

    $default  reduce using rule 378 (expr_numeric_const)


State 458

   41 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 38 (string_builder_body)

    string_builder_body  go to state 602


State 459

  441 expr: '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 603
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 460

  440 expr: '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 604
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 461

  478 expr: '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 605
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 462

  439 expr: '~' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 606
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 463

  438 expr: '!' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 607
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 464

  846 make_dim_decl: '[' . optional_expr_list ']'
  875 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  876                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 608
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 609
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 610
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 611
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 465

  468 expr: '(' . expr_list optional_comma ')'
  469     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 613
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 614
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 615
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 616
    make_struct_single      go to state 617
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 466

  357 block_or_lambda: '$' .

    $default  reduce using rule 357 (block_or_lambda)


State 467

  358 block_or_lambda: '@' .
  359                | '@' . '@'
  404 func_addr_expr: '@' . '@' func_addr_name
  407               | '@' . '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  410               | '@' . '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  529 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 618

    $default  reduce using rule 358 (block_or_lambda)


State 468

  867 make_table_decl: '{' . $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  877 array_comprehension: '{' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 619

    $default  reduce using rule 866 ($@113)

    $@113  go to state 620


State 469

  432 expr: string_builder .

    $default  reduce using rule 432 (expr)


State 470

  431 expr: expr_reader .

    $default  reduce using rule 431 (expr)


State 471

  509 expr: expr_call_pipe .

    $default  reduce using rule 509 (expr)


State 472

  398 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  399                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  421 expr_call: name_in_namespace . '(' ')'
  422          | name_in_namespace . '(' "uninitialized" ')'
  423          | name_in_namespace . '(' make_struct_single ')'
  424          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  425          | name_in_namespace . '(' expr_list ')'
  429 expr: name_in_namespace .

    '('  shift, and go to state 621

    $default  reduce using rule 429 (expr)


State 473

  502 expr: expr_new .

    $default  reduce using rule 502 (expr)


State 474

  501 expr: expr_cast .

    $default  reduce using rule 501 (expr)


State 475

  500 expr: expr_type_decl .

    $default  reduce using rule 500 (expr)


State 476

  499 expr: expr_type_info .

    $default  reduce using rule 499 (expr)


State 477

  369 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 622

    $default  reduce using rule 152 (optional_annotation_list)

    optional_annotation_list  go to state 623


State 478

  505 expr: expr_full_block .

    $default  reduce using rule 505 (expr)


State 479

  430 expr: expr_numeric_const .

    $default  reduce using rule 430 (expr)


State 480

  504 expr: expr_named_call .

    $default  reduce using rule 504 (expr)


State 481

  503 expr: expr_method_call .

    $default  reduce using rule 503 (expr)


State 482

  476 expr: func_addr_expr .

    $default  reduce using rule 476 (expr)


State 483

  436 expr: expr_field .

    $default  reduce using rule 436 (expr)


State 484

  271 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  477 expr: expr_call .

    '$'  shift, and go to state 466
    '@'  shift, and go to state 624
    '{'  shift, and go to state 625

    $default  reduce using rule 477 (expr)

    block_or_lambda                go to state 626
    expr_full_block_assumed_piped  go to state 627


State 485

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  730 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 663


State 486

  481 expr: expr_generator .

    $default  reduce using rule 481 (expr)


State 487

  437 expr: expr_mtag .

    $default  reduce using rule 437 (expr)


State 488

  426 expr_call: basic_type_declaration . '(' ')'
  427          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 664


State 489

  433 expr: make_decl .

    $default  reduce using rule 433 (expr)


State 490

  804 make_decl: make_struct_decl .

    $default  reduce using rule 804 (make_decl)


State 491

  808 make_decl: make_tuple_call .

    $default  reduce using rule 808 (make_decl)


State 492

  805 make_decl: make_dim_decl .

    $default  reduce using rule 805 (make_decl)


State 493

  806 make_decl: make_table_decl .

    $default  reduce using rule 806 (make_decl)


State 494

  807 make_decl: array_comprehension .

    $default  reduce using rule 807 (make_decl)


State 495

  758 type_declaration_no_options_no_dim: "iterator" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 665


State 496

  748 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 497

  703 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 667


State 498

  712 bitfield_type_declaration: "bitfield" '<' $@52 . bitfield_bits '>' $@53

    "name"  shift, and go to state 668

    bitfield_bits  go to state 669


State 499

  762 type_declaration_no_options_no_dim: "block" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 670


State 500

  765 type_declaration_no_options_no_dim: "block" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 671


State 501

  769 type_declaration_no_options_no_dim: "function" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 672


State 502

  772 type_declaration_no_options_no_dim: "function" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 673


State 503

  776 type_declaration_no_options_no_dim: "lambda" '<' $@73 . type_declaration '>' $@74

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 674


State 504

  779 type_declaration_no_options_no_dim: "lambda" '<' $@75 . optional_function_argument_list optional_function_type '>' $@76

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 675


State 505

  782 type_declaration_no_options_no_dim: "tuple" '<' $@77 . tuple_type_list '>' $@78

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 676
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 677
    tuple_type_list                     go to state 678
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 679


State 506

  785 type_declaration_no_options_no_dim: "variant" '<' $@79 . variant_type_list '>' $@80

    "name"  shift, and go to state 680

    variant_type       go to state 681
    variant_type_list  go to state 682


State 507

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  704 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 683


State 508

  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 732 ($@56)

    $@56  go to state 684


State 509

  731 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 685
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 611
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 510

  743 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 511

  744 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 512

  737 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 513

  739 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 739 (type_declaration_no_options_no_dim)


State 514

  734 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 686


State 515

  742 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 742 (type_declaration_no_options_no_dim)


State 516

  718 dim_list: '[' ']' .

    $default  reduce using rule 718 (dim_list)


State 517

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  717 dim_list: '[' expr . ']'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ']'    shift, and go to state 687


State 518

  719 dim_list: dim_list '[' . expr ']'
  720         | dim_list '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 688
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 689
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 519

  788 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 788 (type_declaration)


State 520

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  787 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 787 (type_declaration)


State 521

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 . bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 690

    $default  reduce using rule 707 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 691


State 522

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . tuple_alias_type_list optional_semis $@84 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 676
    '$'          shift, and go to state 268

    $default  reduce using rule 563 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 692
    tuple_alias_type_list               go to state 693
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 679


State 523

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 . variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 680

    $default  reduce using rule 569 (variant_alias_type_list)

    variant_type             go to state 694
    variant_alias_type_list  go to state 695


State 524

  231 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 231 (function_name)


State 525

  211 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 211 (function_name)


State 526

  212 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 212 (function_name)


State 527

  214 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 214 (function_name)


State 528

  213 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 213 (function_name)


State 529

  215 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 215 (function_name)


State 530

  216 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 216 (function_name)


State 531

  217 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 217 (function_name)


State 532

  218 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 218 (function_name)


State 533

  210 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 210 (function_name)


State 534

  219 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 219 (function_name)


State 535

  220 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 220 (function_name)


State 536

  221 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 221 (function_name)


State 537

  553 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 696
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 538

  323 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 323 (kwd_let_var_or_nothing)


State 539

  324 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 324 (kwd_let_var_or_nothing)


State 540

  551 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  552 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 697
    "name"  shift, and go to state 698

    variable_declaration_no_type  go to state 699
    variable_declaration_type     go to state 700
    variable_name_with_pos_list   go to state 701


State 541

  556 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 530 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 702


State 542

  558 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 530 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 703


State 543

  557 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 530 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 704


State 544

  158 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 158 (optional_function_argument_list)


State 545

  160 optional_function_type: ':' type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 160 (optional_function_type)


State 546

  270 expression_block: $@16 '{' . expressions $@17 '}' expression_block_finally

    $default  reduce using rule 291 (expressions)

    expressions  go to state 705


State 547

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 640 ($@47)

    $@47  go to state 706


State 548

  644 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 707


State 549

  647 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 647 (structure_name)


State 550

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 708
    '{'  shift, and go to state 709

    optional_struct_variable_declaration_list  go to state 710


State 551

  587 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 711


State 552

  586 let_variable_name_with_pos_list: "name" .
  588                                | "name" . "aka" "name"

    "aka"  shift, and go to state 712

    $default  reduce using rule 586 (let_variable_name_with_pos_list)


State 553

  589 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  590                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  596 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  597                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  598                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 713
    ':'  shift, and go to state 714
    '&'  shift, and go to state 415

    $default  reduce using rule 584 (optional_ref)

    optional_ref  go to state 715


State 554

  610 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 610 (global_variable_declaration_list)


State 555

  136 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 136 (metadata_argument_list)


State 556

  592 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 592 (global_let_variable_name_with_pos_list)


State 557

  599 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  600                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 558
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 559
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 560
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 716
    copy_or_move_or_clone  go to state 717


State 558

  582 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 582 (copy_or_move_or_clone)


State 559

  583 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 583 (copy_or_move_or_clone)


State 560

  581 copy_or_move_or_clone: '=' .

    $default  reduce using rule 581 (copy_or_move_or_clone)


State 561

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 718
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 562

  729 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration . '>' $@55
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 719


State 563

  752 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration . '>' $@60
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 720


State 564

  755 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair . '>' $@62

    '>'  shift, and go to state 721


State 565

  715 table_type_pair: type_declaration .
  716                | type_declaration . c_or_s type_declaration
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 715 (table_type_pair)

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 726


State 566

  830 make_struct_decl: "struct" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 828 ($@93)

    $@93  go to state 727


State 567

  833 make_struct_decl: "class" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 831 ($@95)

    $@95  go to state 728


State 568

  307 new_type_declaration: '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 305 ($@18)

    $@18  go to state 729


State 569

  309 expr_new: "new" new_type_declaration .
  310         | "new" new_type_declaration . '(' use_initializer ')'
  311         | "new" new_type_declaration . '(' expr_list ')'
  312         | "new" new_type_declaration . '(' make_struct_single ')'
  313         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 730

    $default  reduce using rule 309 (expr_new)


State 570

  308 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 308 (new_type_declaration)


State 571

  314 expr_new: "new" make_decl .

    $default  reduce using rule 314 (expr_new)


State 572

  349 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  350               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  351               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 731
    '('  shift, and go to state 732


State 573

  348 expr_type_decl: "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 346 ($@26)

    $@26  go to state 733


State 574

  849 make_dim_decl: "array" "struct" . '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 734


State 575

  852 make_dim_decl: "array" "tuple" . '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 735


State 576

  855 make_dim_decl: "array" "variant" . '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    '<'  shift, and go to state 736


State 577

  859 make_dim_decl: "array" '<' . $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    $default  reduce using rule 857 ($@109)

    $@109  go to state 737


State 578

  856 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 738
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 579

  869 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  870                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 739
    type_declaration_no_options_no_dim  go to state 275


State 580

  868 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 740
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 741
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    expr_map_tuple_list     go to state 742
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 581

  479 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 743
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 582

  339 expr_cast: "cast" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 337 ($@20)

    $@20  go to state 744


State 583

  342 expr_cast: "upcast" '<' . $@22 type_declaration_no_options '>' $@23 expr

    $default  reduce using rule 340 ($@22)

    $@22  go to state 745


State 584

  480 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 746
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 585

  345 expr_cast: "reinterpret" '<' . $@24 type_declaration_no_options '>' $@25 expr

    $default  reduce using rule 343 ($@24)

    $@24  go to state 747


State 586

  510 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 748
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 587

  863 make_dim_decl: "fixed_array" '<' . $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 861 ($@111)

    $@111  go to state 749


State 588

  860 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 750
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 589

  839 make_struct_decl: "default" '<' . $@99 type_declaration_no_options '>' $@100 use_initializer

    $default  reduce using rule 837 ($@99)

    $@99  go to state 751


State 590

  845 make_tuple_call: "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 843 ($@101)

    $@101  go to state 752


State 591

  842 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 753
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 592

  836 make_struct_decl: "variant" '<' . $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 834 ($@97)

    $@97  go to state 754


State 593

  511 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  512               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  513               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 755
    type_declaration_no_options_no_dim  go to state 275


State 594

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  464     | "++" expr .
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 464 (expr)


State 595

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  465     | "--" expr .
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 465 (expr)


State 596

  514 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 756
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 597

  515 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 757
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 598

  516 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 758
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 599

  517 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 759
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 600

  518 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 760
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 601

  520 expr_mtag: "$c" '(' . expr ')' '(' ')'
  521          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 761
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 602

   39 string_builder_body: string_builder_body . character_sequence
   40                    | string_builder_body . "{" expr optional_format_string "}"
   41 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 762
    "{"                   shift, and go to state 763

    character_sequence  go to state 764


State 603

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  441 expr: '-' expr .
  442     | expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 441 (expr)


State 604

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  440 expr: '+' expr .
  442     | expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 440 (expr)


State 605

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  478     | '*' expr .
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 478 (expr)


State 606

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  439 expr: '~' expr .
  442     | expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 439 (expr)


State 607

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  438 expr: '!' expr .
  442     | expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 438 (expr)


State 608

  875 array_comprehension: '[' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 765


State 609

  876 array_comprehension: '[' "iterator" . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 766


State 610

  846 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 767


State 611

  295 optional_expr_list: expr_list . optional_comma
  353 expr_list: expr_list . ',' expr

    ','  shift, and go to state 768

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 769


State 612

  352 expr_list: expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 352 (expr_list)


State 613

  813 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  814                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 770


State 614

  300 name_in_namespace: "name" .
  301                  | "name" . "::" "name"
  809 make_struct_fields: "name" . copy_or_move expr
  810                   | "name" . ":=" expr

    "<-"  shift, and go to state 771
    ":="  shift, and go to state 772
    "::"  shift, and go to state 96
    '='   shift, and go to state 773

    $default  reduce using rule 300 (name_in_namespace)

    copy_or_move  go to state 774


State 615

  353 expr_list: expr_list . ',' expr
  468 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 768

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 775


State 616

  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  819 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 776

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 777


State 617

  469 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 778


State 618

  359 block_or_lambda: '@' '@' .
  404 func_addr_expr: '@' '@' . func_addr_name
  407               | '@' '@' . '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  410               | '@' '@' . '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  529 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 779
    "$c"    shift, and go to state 780
    "name"  shift, and go to state 58
    '<'     shift, and go to state 781

    $default  reduce using rule 359 (block_or_lambda)

    name_in_namespace  go to state 782
    func_addr_name     go to state 783


State 619

  877 array_comprehension: '{' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 784


State 620

  867 make_table_decl: '{' $@113 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 785


State 621

  398 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  399                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  421 expr_call: name_in_namespace '(' . ')'
  422          | name_in_namespace '(' . "uninitialized" ')'
  423          | name_in_namespace '(' . make_struct_single ')'
  424          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  425          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 786
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 613
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 614
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 787
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 788
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 789
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 616
    make_struct_single      go to state 790
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 622

  153 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 791
    name_in_namespace             go to state 70


State 623

  369 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 792

    $default  reduce using rule 367 (optional_capture_list)

    optional_capture_list  go to state 793


State 624

  358 block_or_lambda: '@' .
  359                | '@' . '@'

    '@'  shift, and go to state 794

    $default  reduce using rule 358 (block_or_lambda)


State 625

  371 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 291 (expressions)

    expressions  go to state 795


State 626

  370 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 622

    $default  reduce using rule 152 (optional_annotation_list)

    optional_annotation_list  go to state 796


State 627

  271 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 271 (expr_call_pipe)


State 628

  486 expr: expr "is" . "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr "is" . basic_type_declaration
  488     | expr "is" . "name"
  528 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 797
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 798
    "name"      shift, and go to state 799

    basic_type_declaration  go to state 800


State 629

  489 expr: expr "as" . "name"
  492     | expr "as" . "type" '<' $@36 type_declaration '>' $@37
  493     | expr "as" . basic_type_declaration
  526 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 801
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 802
    "name"      shift, and go to state 803

    basic_type_declaration  go to state 804


State 630

  442 expr: expr "<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 805
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 631

  443 expr: expr ">>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 806
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 632

  466 expr: expr "++" .

    $default  reduce using rule 466 (expr)


State 633

  467 expr: expr "--" .

    $default  reduce using rule 467 (expr)


State 634

  455 expr: expr "<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 807
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 635

  456 expr: expr ">=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 808
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 636

  453 expr: expr "==" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 809
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 637

  454 expr: expr "!=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 810
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 638

  400 expr_method_call: expr "->" . "name" '(' ')'
  401                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 811


State 639

  482 expr: expr "??" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 812
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 640

  474 expr: expr "?." . "name"
  523 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 813
    "name"  shift, and go to state 814


State 641

  472 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 815
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 642

  506 expr: expr "<|" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 816
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 643

  507 expr: expr "|>" . expr
  508     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 817
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 818
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 644

  444 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 819
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 645

  445 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 820
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 646

  460 expr: expr "&&" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 821
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 647

  461 expr: expr "||" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 822
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 648

  462 expr: expr "^^" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 823
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 649

  463 expr: expr ".." . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 824
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 650

  483 expr: expr '?' . expr ':' expr
  494     | expr '?' . "as" "name"
  497     | expr '?' . "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr '?' . "as" basic_type_declaration
  527 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "as"                              shift, and go to state 825
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 826
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 651

  458 expr: expr '|' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 827
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 652

  459 expr: expr '^' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 828
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 653

  457 expr: expr '&' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 829
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 654

  451 expr: expr '<' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 830
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 655

  452 expr: expr '>' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 831
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 656

  447 expr: expr '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 832
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 657

  446 expr: expr '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 833
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 658

  448 expr: expr '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 834
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 659

  449 expr: expr '/' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 835
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 660

  450 expr: expr '%' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 836
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 661

  411 expr_field: expr '.' . "name"
  412           | expr '.' . '.' "name"
  413           | expr '.' . "name" '(' ')'
  414           | expr '.' . "name" '(' expr_list ')'
  415           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  416           | expr '.' . basic_type_declaration '(' ')'
  417           | expr '.' . basic_type_declaration '(' expr_list ')'
  420           | expr '.' . $@32 error $@33
  471 expr: expr '.' . '[' expr ']'
  473     | expr '.' . "?[" expr ']'
  475     | expr '.' . "?." "name"
  522 expr_mtag: expr '.' . "$f" '(' expr ')'
  524          | expr '.' . '.' "$f" '(' expr ')'
  525          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 837
    "?["        shift, and go to state 838
    "$f"        shift, and go to state 839
    "name"      shift, and go to state 840
    '.'         shift, and go to state 841
    '['         shift, and go to state 842

    $default  reduce using rule 418 ($@32)

    $@32                    go to state 843
    basic_type_declaration  go to state 844


State 662

  470 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 845
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 663

  730 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 664

  426 expr_call: basic_type_declaration '(' . ')'
  427          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 846
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 847
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 665

  758 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration . '>' $@64
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 848


State 666

  748 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration . '>' $@58
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 849


State 667

  703 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 703 (auto_type_declaration)


State 668

  705 bitfield_bits: "name" .

    $default  reduce using rule 705 (bitfield_bits)


State 669

  706 bitfield_bits: bitfield_bits . ';' "name"
  712 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits . '>' $@53

    '>'  shift, and go to state 850
    ';'  shift, and go to state 851


State 670

  762 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration . '>' $@66
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 852


State 671

  765 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 853


State 672

  769 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration . '>' $@70
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 854


State 673

  772 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 855


State 674

  776 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration . '>' $@74
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 856


State 675

  779 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list . optional_function_type '>' $@76

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 857


State 676

  300 name_in_namespace: "name" .
  301                  | "name" . "::" "name"
  560 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 858

    $default  reduce using rule 300 (name_in_namespace)


State 677

  561 tuple_type_list: tuple_type .

    $default  reduce using rule 561 (tuple_type_list)


State 678

  562 tuple_type_list: tuple_type_list . c_or_s tuple_type
  782 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list . '>' $@78

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 859
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 860


State 679

  559 tuple_type: type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 559 (tuple_type)


State 680

  566 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 861


State 681

  567 variant_type_list: variant_type .

    $default  reduce using rule 567 (variant_type_list)


State 682

  568 variant_type_list: variant_type_list . c_or_s variant_type
  785 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list . '>' $@80

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 862
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 863


State 683

  704 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 704 (auto_type_declaration)


State 684

  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 864
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 865


State 685

  731 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 866


State 686

  734 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 687

  717 dim_list: '[' expr ']' .

    $default  reduce using rule 717 (dim_list)


State 688

  720 dim_list: dim_list '[' ']' .

    $default  reduce using rule 720 (dim_list)


State 689

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  719 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ']'    shift, and go to state 867


State 690

  708 bitfield_alias_bits: "name" .

    $default  reduce using rule 708 (bitfield_alias_bits)


State 691

  709 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits . optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 722
    ','                shift, and go to state 723

    $default  reduce using rule 633 (optional_commas)

    COMMA            go to state 868
    commas           go to state 869
    optional_commas  go to state 870


State 692

  564 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 564 (tuple_alias_type_list)


State 693

  565 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 871
    semis           go to state 872
    optional_semis  go to state 873


State 694

  570 variant_alias_type_list: variant_type .

    $default  reduce using rule 570 (variant_alias_type_list)


State 695

  571 variant_alias_type_list: variant_alias_type_list . semis variant_type
  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list . optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 871
    semis           go to state 874
    optional_semis  go to state 875


State 696

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  553 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 876


State 697

  662 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 877


State 698

  661 variable_name_with_pos_list: "name" .
  663                            | "name" . "aka" "name"

    "aka"  shift, and go to state 878

    $default  reduce using rule 661 (variable_name_with_pos_list)


State 699

  551 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 551 (function_argument_declaration_no_type)


State 700

  552 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 552 (function_argument_declaration_type)


State 701

  574 variable_declaration_no_type: variable_name_with_pos_list .
  575                             | variable_name_with_pos_list . '&'
  576                             | variable_name_with_pos_list . copy_or_move expr
  577 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  578                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  664 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  665                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 771
    ','   shift, and go to state 879
    '='   shift, and go to state 773
    ':'   shift, and go to state 880
    '&'   shift, and go to state 881

    $default  reduce using rule 574 (variable_declaration_no_type)

    copy_or_move  go to state 882


State 702

  556 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 556 (function_argument_list)


State 703

  558 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 558 (function_argument_list)


State 704

  557 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 557 (function_argument_list)


State 705

  270 expression_block: $@16 '{' expressions . $@17 '}' expression_block_finally
  292 expressions: expressions . expression_any
  293            | expressions . error

    error                             shift, and go to state 883
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "try"                             shift, and go to state 886
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 887
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 888
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "pass"                            shift, and go to state 890
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 891
    "goto"                            shift, and go to state 892
    "unsafe"                          shift, and go to state 893
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 269 ($@17)

    SEMICOLON                         go to state 895
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 896
    expression_goto                   go to state 897
    expression_if_one_liner           go to state 898
    expression_if_then_else           go to state 899
    $@9                               go to state 900
    expression_if_then_else_oneliner  go to state 901
    expression_for_loop               go to state 902
    $@10                              go to state 903
    expression_unsafe                 go to state 904
    expression_while_loop             go to state 905
    $@11                              go to state 906
    expression_with                   go to state 907
    $@12                              go to state 908
    expression_with_alias             go to state 909
    $@17                              go to state 910
    expr_call_pipe                    go to state 471
    expression_any                    go to state 911
    name_in_namespace                 go to state 472
    expression_delete                 go to state 912
    expr_new                          go to state 473
    expression_break                  go to state 913
    expression_continue               go to state 914
    expression_return                 go to state 915
    expression_yield                  go to state 916
    expression_try_catch              go to state 917
    kwd_let                           go to state 918
    expression_let                    go to state 919
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 920
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 921
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 706

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 . enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 922

    $default  reduce using rule 618 (enum_list)

    enum_expression  go to state 923
    enum_list        go to state 924


State 707

  644 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 644 (optional_structure_parent)


State 708

  655 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 655 (optional_struct_variable_declaration_list)


State 709

  656 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 543 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 925


State 710

  660 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list .

    $default  reduce using rule 660 (structure_declaration)


State 711

  587 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 926
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 712

  588 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 927


State 713

  589 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  590                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 928


State 714

  596 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  597                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 929
    type_declaration_no_options_no_dim  go to state 275


State 715

  598 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 558
    ":="  shift, and go to state 559
    '='   shift, and go to state 560

    copy_or_move_or_clone  go to state 930


State 716

  599 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 599 (global_let_variable_declaration)


State 717

  600 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 931
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 718

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  601 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 628
    "as"                   shift, and go to state 629
    "<<"                   shift, and go to state 630
    ">>"                   shift, and go to state 631
    "++"                   shift, and go to state 632
    "--"                   shift, and go to state 633
    "<="                   shift, and go to state 634
    ">="                   shift, and go to state 635
    "=="                   shift, and go to state 636
    "!="                   shift, and go to state 637
    "->"                   shift, and go to state 638
    "??"                   shift, and go to state 639
    "?."                   shift, and go to state 640
    "?["                   shift, and go to state 641
    "<|"                   shift, and go to state 642
    "|>"                   shift, and go to state 643
    "<<<"                  shift, and go to state 644
    ">>>"                  shift, and go to state 645
    "&&"                   shift, and go to state 646
    "||"                   shift, and go to state 647
    "^^"                   shift, and go to state 648
    ".."                   shift, and go to state 649
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 650
    '|'                    shift, and go to state 651
    '^'                    shift, and go to state 652
    '&'                    shift, and go to state 653
    '<'                    shift, and go to state 654
    '>'                    shift, and go to state 655
    '-'                    shift, and go to state 656
    '+'                    shift, and go to state 657
    '*'                    shift, and go to state 658
    '/'                    shift, and go to state 659
    '%'                    shift, and go to state 660
    '.'                    shift, and go to state 661
    '['                    shift, and go to state 662
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 932


State 719

  729 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 728 ($@55)

    $@55  go to state 933


State 720

  752 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 751 ($@60)

    $@60  go to state 934


State 721

  755 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' . $@62

    $default  reduce using rule 754 ($@62)

    $@62  go to state 935


State 722

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 723

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 724

  713 c_or_s: COMMA .

    $default  reduce using rule 713 (c_or_s)


State 725

  714 c_or_s: SEMICOLON .

    $default  reduce using rule 714 (c_or_s)


State 726

  716 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 936


State 727

  830 make_struct_decl: "struct" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 937
    type_declaration_no_options_no_dim  go to state 275


State 728

  833 make_struct_decl: "class" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 938
    type_declaration_no_options_no_dim  go to state 275


State 729

  307 new_type_declaration: '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 939


State 730

  310 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  311         | "new" new_type_declaration '(' . expr_list ')'
  312         | "new" new_type_declaration '(' . make_struct_single ')'
  313         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 940
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 613
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 614
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 826 (use_initializer)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 941
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 616
    make_struct_single      go to state 942
    use_initializer         go to state 943
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 731

  350 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  351               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 944


State 732

  349 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 945
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 733

  348 expr_type_decl: "type" '<' $@26 . type_declaration '>' $@27

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 946


State 734

  849 make_dim_decl: "array" "struct" '<' . $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 847 ($@103)

    $@103  go to state 947


State 735

  852 make_dim_decl: "array" "tuple" '<' . $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 850 ($@105)

    $@105  go to state 948


State 736

  855 make_dim_decl: "array" "variant" '<' . $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    $default  reduce using rule 853 ($@107)

    $@107  go to state 949


State 737

  859 make_dim_decl: "array" '<' $@109 . type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 950
    type_declaration_no_options_no_dim  go to state 275


State 738

  353 expr_list: expr_list . ',' expr
  856 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 768

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 951


State 739

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  869 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  870                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "??"                   shift, and go to state 370
    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '>'                    shift, and go to state 952
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 953


State 740

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  840 make_map_tuple: expr . "=>" expr
  841               | expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "=>"   shift, and go to state 954
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 841 (make_map_tuple)


State 741

  864 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 864 (expr_map_tuple_list)


State 742

  865 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  868 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 955

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 956


State 743

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  479     | "deref" '(' expr . ')'
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 957


State 744

  339 expr_cast: "cast" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 958
    type_declaration_no_options_no_dim  go to state 275


State 745

  342 expr_cast: "upcast" '<' $@22 . type_declaration_no_options '>' $@23 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 959
    type_declaration_no_options_no_dim  go to state 275


State 746

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  480     | "addr" '(' expr . ')'
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 960


State 747

  345 expr_cast: "reinterpret" '<' $@24 . type_declaration_no_options '>' $@25 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 961
    type_declaration_no_options_no_dim  go to state 275


State 748

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  510     | "unsafe" '(' expr . ')'
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 962


State 749

  863 make_dim_decl: "fixed_array" '<' $@111 . type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 963
    type_declaration_no_options_no_dim  go to state 275


State 750

  353 expr_list: expr_list . ',' expr
  860 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 768

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 964


State 751

  839 make_struct_decl: "default" '<' $@99 . type_declaration_no_options '>' $@100 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 965
    type_declaration_no_options_no_dim  go to state 275


State 752

  845 make_tuple_call: "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 676
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 677
    tuple_type_list                     go to state 966
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 679


State 753

  353 expr_list: expr_list . ',' expr
  842 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 768

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 967


State 754

  836 make_struct_decl: "variant" '<' $@97 . variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 680

    variant_type       go to state 681
    variant_type_list  go to state 968


State 755

  511 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  512               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  513               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 969
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 756

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  514 expr_mtag: "$$" '(' expr . ')'
  522          | expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 970


State 757

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  515 expr_mtag: "$i" '(' expr . ')'
  522          | expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 971


State 758

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  516 expr_mtag: "$v" '(' expr . ')'
  522          | expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 972


State 759

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  517 expr_mtag: "$b" '(' expr . ')'
  522          | expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 973


State 760

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  518 expr_mtag: "$a" '(' expr . ')'
  522          | expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 974


State 761

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  520 expr_mtag: "$c" '(' expr . ')' '(' ')'
  521          | "$c" '(' expr . ')' '(' expr_list ')'
  522          | expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 975


State 762

   41 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 41 (string_builder)


State 763

   40 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 976
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 764

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   39 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 39 (string_builder_body)


State 765

  875 array_comprehension: '[' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 977
    "name"  shift, and go to state 978
    '('     shift, and go to state 979

    for_variable_name_with_pos_list  go to state 980


State 766

  876 array_comprehension: '[' "iterator" "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 981


State 767

  846 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 846 (make_dim_decl)


State 768

  353 expr_list: expr_list ',' . expr
  874 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 874 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 982
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 769

  295 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 295 (optional_expr_list)


State 770

  813 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  814                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 983
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 771

  573 copy_or_move: "<-" .

    $default  reduce using rule 573 (copy_or_move)


State 772

  810 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 984
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 773

  572 copy_or_move: '=' .

    $default  reduce using rule 572 (copy_or_move)


State 774

  809 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 985
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 775

  468 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 986


State 776

  811 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  812                   | make_struct_fields ',' . "name" ":=" expr
  815                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  874 optional_comma: ',' .

    "$f"    shift, and go to state 987
    "name"  shift, and go to state 988

    $default  reduce using rule 874 (optional_comma)


State 777

  819 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 819 (make_struct_single)


State 778

  469 expr: '(' make_struct_single ')' .

    $default  reduce using rule 469 (expr)


State 779

  403 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 989


State 780

  529 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 990


State 781

  407 func_addr_expr: '@' '@' '<' . $@28 type_declaration_no_options '>' $@29 func_addr_name
  410               | '@' '@' '<' . $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    ':'       reduce using rule 408 ($@30)
    '>'       reduce using rule 408 ($@30)
    '('       reduce using rule 408 ($@30)
    $default  reduce using rule 405 ($@28)

    $@28  go to state 991
    $@30  go to state 992


State 782

  402 func_addr_name: name_in_namespace .

    $default  reduce using rule 402 (func_addr_name)


State 783

  404 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 404 (func_addr_expr)


State 784

  877 array_comprehension: '{' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 977
    "name"  shift, and go to state 978
    '('     shift, and go to state 979

    for_variable_name_with_pos_list  go to state 993


State 785

  867 make_table_decl: '{' $@113 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 296 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 994
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 740
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 741
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 995
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 786

  422 expr_call: name_in_namespace '(' "uninitialized" . ')'
  424          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996
    ')'     shift, and go to state 997

    make_struct_fields  go to state 616
    make_struct_single  go to state 998


State 787

  398 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  846 make_dim_decl: '[' . optional_expr_list ']'
  875 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  876                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 608
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 609
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 613
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 614
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 610
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 611
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 999
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 788

  421 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 421 (expr_call)


State 789

  353 expr_list: expr_list . ',' expr
  399 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  425 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1000
    ')'  shift, and go to state 1001


State 790

  423 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1002


State 791

  151 annotation_list: annotation_list . ',' annotation_declaration
  153 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 1003


State 792

  368 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1004


State 793

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 1005


State 794

  359 block_or_lambda: '@' '@' .

    $default  reduce using rule 359 (block_or_lambda)


State 795

  292 expressions: expressions . expression_any
  293            | expressions . error
  371 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 883
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "try"                             shift, and go to state 886
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 887
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 888
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "pass"                            shift, and go to state 890
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 891
    "goto"                            shift, and go to state 892
    "unsafe"                          shift, and go to state 893
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468
    '}'                               shift, and go to state 1006

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)

    SEMICOLON                         go to state 895
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 896
    expression_goto                   go to state 897
    expression_if_one_liner           go to state 898
    expression_if_then_else           go to state 899
    $@9                               go to state 900
    expression_if_then_else_oneliner  go to state 901
    expression_for_loop               go to state 902
    $@10                              go to state 903
    expression_unsafe                 go to state 904
    expression_while_loop             go to state 905
    $@11                              go to state 906
    expression_with                   go to state 907
    $@12                              go to state 908
    expression_with_alias             go to state 909
    expr_call_pipe                    go to state 471
    expression_any                    go to state 911
    name_in_namespace                 go to state 472
    expression_delete                 go to state 912
    expr_new                          go to state 473
    expression_break                  go to state 913
    expression_continue               go to state 914
    expression_return                 go to state 915
    expression_yield                  go to state 916
    expression_try_catch              go to state 917
    kwd_let                           go to state 918
    expression_let                    go to state 919
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 920
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 921
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 796

  370 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 792

    $default  reduce using rule 367 (optional_capture_list)

    optional_capture_list  go to state 1007


State 797

  486 expr: expr "is" "type" . '<' $@34 type_declaration_no_options '>' $@35

    '<'  shift, and go to state 1008


State 798

  528 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1009


State 799

  488 expr: expr "is" "name" .

    $default  reduce using rule 488 (expr)


State 800

  487 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 487 (expr)


State 801

  492 expr: expr "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 1010


State 802

  526 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1011


State 803

  489 expr: expr "as" "name" .

    $default  reduce using rule 489 (expr)


State 804

  493 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 493 (expr)


State 805

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  442     | expr "<<" expr .
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '-'   shift, and go to state 656
    '+'   shift, and go to state 657
    '*'   shift, and go to state 658
    '/'   shift, and go to state 659
    '%'   shift, and go to state 660
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 442 (expr)


State 806

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  443     | expr ">>" expr .
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '-'   shift, and go to state 656
    '+'   shift, and go to state 657
    '*'   shift, and go to state 658
    '/'   shift, and go to state 659
    '%'   shift, and go to state 660
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 443 (expr)


State 807

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  455     | expr "<=" expr .
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 455 (expr)


State 808

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  456     | expr ">=" expr .
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 456 (expr)


State 809

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  453     | expr "==" expr .
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 453 (expr)


State 810

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  454     | expr "!=" expr .
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 454 (expr)


State 811

  400 expr_method_call: expr "->" "name" . '(' ')'
  401                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1012


State 812

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  482     | expr "??" expr .
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 482 (expr)


State 813

  523 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1013


State 814

  474 expr: expr "?." "name" .

    $default  reduce using rule 474 (expr)


State 815

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  472     | expr "?[" expr . ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ']'    shift, and go to state 1014


State 816

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  506     | expr "<|" expr .
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 506 (expr)


State 817

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  507     | expr "|>" expr .
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 638
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 507 (expr)


State 818

  426 expr_call: basic_type_declaration . '(' ')'
  427          | basic_type_declaration . '(' expr_list ')'
  508 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 664

    $default  reduce using rule 508 (expr)


State 819

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  444     | expr "<<<" expr .
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '-'   shift, and go to state 656
    '+'   shift, and go to state 657
    '*'   shift, and go to state 658
    '/'   shift, and go to state 659
    '%'   shift, and go to state 660
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 444 (expr)


State 820

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  445     | expr ">>>" expr .
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '-'   shift, and go to state 656
    '+'   shift, and go to state 657
    '*'   shift, and go to state 658
    '/'   shift, and go to state 659
    '%'   shift, and go to state 660
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 445 (expr)


State 821

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  460     | expr "&&" expr .
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 460 (expr)


State 822

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  461     | expr "||" expr .
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "^^"   shift, and go to state 648
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 461 (expr)


State 823

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  462     | expr "^^" expr .
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 462 (expr)


State 824

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  463     | expr ".." expr .
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    ".."  error (nonassociative)

    $default  reduce using rule 463 (expr)


State 825

  494 expr: expr '?' "as" . "name"
  497     | expr '?' "as" . "type" '<' $@38 type_declaration '>' $@39
  498     | expr '?' "as" . basic_type_declaration
  527 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1015
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 1016
    "name"      shift, and go to state 1017

    basic_type_declaration  go to state 1018


State 826

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  483     | expr '?' expr . ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    ':'    shift, and go to state 1019
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662


State 827

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  458     | expr '|' expr .
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 458 (expr)


State 828

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  459     | expr '^' expr .
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 459 (expr)


State 829

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  457     | expr '&' expr .
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 457 (expr)


State 830

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  451     | expr '<' expr .
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 451 (expr)


State 831

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  452     | expr '>' expr .
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 452 (expr)


State 832

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  447     | expr '-' expr .
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '*'   shift, and go to state 658
    '/'   shift, and go to state 659
    '%'   shift, and go to state 660
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 447 (expr)


State 833

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  446     | expr '+' expr .
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '*'   shift, and go to state 658
    '/'   shift, and go to state 659
    '%'   shift, and go to state 660
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 446 (expr)


State 834

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  448     | expr '*' expr .
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 448 (expr)


State 835

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  449     | expr '/' expr .
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 449 (expr)


State 836

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  450     | expr '%' expr .
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 628
    "as"  shift, and go to state 629
    "++"  shift, and go to state 632
    "--"  shift, and go to state 633
    "->"  shift, and go to state 638
    "??"  shift, and go to state 639
    "?."  shift, and go to state 640
    "?["  shift, and go to state 641
    "<|"  shift, and go to state 642
    "|>"  shift, and go to state 643
    '.'   shift, and go to state 661
    '['   shift, and go to state 662

    $default  reduce using rule 450 (expr)


State 837

  475 expr: expr '.' "?." . "name"
  525 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1020
    "name"  shift, and go to state 1021


State 838

  473 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1022
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 839

  522 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1023


State 840

  411 expr_field: expr '.' "name" .
  413           | expr '.' "name" . '(' ')'
  414           | expr '.' "name" . '(' expr_list ')'
  415           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1024

    $default  reduce using rule 411 (expr_field)


State 841

  412 expr_field: expr '.' '.' . "name"
  524 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1025
    "name"  shift, and go to state 1026


State 842

  471 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1027
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 843

  420 expr_field: expr '.' $@32 . error $@33

    error  shift, and go to state 1028


State 844

  416 expr_field: expr '.' basic_type_declaration . '(' ')'
  417           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1029


State 845

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  470     | expr '[' expr . ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ']'    shift, and go to state 1030


State 846

  426 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 426 (expr_call)


State 847

  353 expr_list: expr_list . ',' expr
  427 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1032


State 848

  758 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 757 ($@64)

    $@64  go to state 1033


State 849

  748 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 747 ($@58)

    $@58  go to state 1034


State 850

  712 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' . $@53

    $default  reduce using rule 711 ($@53)

    $@53  go to state 1035


State 851

  706 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1036


State 852

  762 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 761 ($@66)

    $@66  go to state 1037


State 853

  765 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1038


State 854

  769 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 768 ($@70)

    $@70  go to state 1039


State 855

  772 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1040


State 856

  776 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' . $@74

    $default  reduce using rule 775 ($@74)

    $@74  go to state 1041


State 857

  779 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type . '>' $@76

    '>'  shift, and go to state 1042


State 858

  560 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1043


State 859

  782 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' . $@78

    $default  reduce using rule 781 ($@78)

    $@78  go to state 1044


State 860

  562 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 676
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1045
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 679


State 861

  566 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1046


State 862

  785 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' . $@80

    $default  reduce using rule 784 ($@80)

    $@80  go to state 1047


State 863

  568 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 680

    variant_type  go to state 1048


State 864

  299 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 1049
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 1050


State 865

  298 type_declaration_no_options_list: type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 298 (type_declaration_no_options_list)


State 866

  731 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 731 (type_declaration_no_options_no_dim)


State 867

  719 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 719 (dim_list)


State 868

  616 commas: COMMA .

    $default  reduce using rule 616 (commas)


State 869

  617 commas: commas . COMMA
  634 optional_commas: commas .
  709 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1051
    "new line, comma"  shift, and go to state 722
    ','                shift, and go to state 723

    $default  reduce using rule 634 (optional_commas)

    COMMA  go to state 1052


State 870

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas . $@92 '}'

    $default  reduce using rule 802 ($@92)

    $@92  go to state 1053


State 871

   82 semis: SEMICOLON .

    $default  reduce using rule 82 (semis)


State 872

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  565 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 676
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON                           go to state 1054
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1055
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 679


State 873

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 792 ($@84)

    $@84  go to state 1056


State 874

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  571 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 680
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON     go to state 1054
    variant_type  go to state 1057


State 875

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis . $@88 '}'

    $default  reduce using rule 797 ($@88)

    $@88  go to state 1058


State 876

  553 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 553 (function_argument_declaration_type)


State 877

  662 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1059
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 878

  663 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1060


State 879

  664 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  665                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1061


State 880

  577 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  578                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1062


State 881

  575 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 575 (variable_declaration_no_type)


State 882

  576 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1063
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 883

  293 expressions: expressions error .

    $default  reduce using rule 293 (expressions)


State 884

  317 expression_return: "return" .
  318                  | "return" . expr
  319                  | "return" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1064
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 317 (expression_return)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1065
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 885

  315 expression_break: "break" .

    $default  reduce using rule 315 (expression_break)


State 886

  322 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1066
    $@16              go to state 397


State 887

  303 expression_delete: "delete" . expr
  304                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "explicit"                        shift, and go to state 1067
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1068
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 888

  113 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1069


State 889

  316 expression_continue: "continue" .

    $default  reduce using rule 316 (expression_continue)


State 890

  290 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1070


State 891

   61 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1071


State 892

   62 expression_goto: "goto" . "label" "integer constant"
   63                | "goto" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 1072
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1073
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 893

  108 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  510 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 586

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1074


State 894

  320 expression_yield: "yield" . expr
  321                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1075
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1076
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 895

  272 expression_any: SEMICOLON .

    $default  reduce using rule 272 (expression_any)


State 896

  288 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1077


State 897

  289 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1078


State 898

   98 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1079


State 899

  285 expression_any: expression_if_then_else .

    $default  reduce using rule 285 (expression_any)


State 900

   97 expression_if_then_else: $@9 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1080
    "static_if"  shift, and go to state 1081

    if_or_static_if  go to state 1082


State 901

  286 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 286 (expression_any)


State 902

  280 expression_any: expression_for_loop .

    $default  reduce using rule 280 (expression_any)


State 903

  107 expression_for_loop: $@10 . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1083


State 904

  277 expression_any: expression_unsafe .

    $default  reduce using rule 277 (expression_any)


State 905

  276 expression_any: expression_while_loop .

    $default  reduce using rule 276 (expression_any)


State 906

  110 expression_while_loop: $@11 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1084


State 907

  278 expression_any: expression_with .

    $default  reduce using rule 278 (expression_any)


State 908

  112 expression_with: $@12 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1085


State 909

  279 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1086


State 910

  270 expression_block: $@16 '{' expressions $@17 . '}' expression_block_finally

    '}'  shift, and go to state 1087


State 911

  292 expressions: expressions expression_any .

    $default  reduce using rule 292 (expressions)


State 912

  274 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1088


State 913

   80 expression_if_one_liner: expression_break .
  281 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1089


State 914

   81 expression_if_one_liner: expression_continue .
  282 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1090


State 915

   78 expression_if_one_liner: expression_return .
  283 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 78 (expression_if_one_liner)

    SEMICOLON  go to state 1091


State 916

   79 expression_if_one_liner: expression_yield .
  284 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (expression_if_one_liner)

    SEMICOLON  go to state 1092


State 917

  287 expression_any: expression_try_catch .

    $default  reduce using rule 287 (expression_any)


State 918

  334 expression_let: kwd_let . optional_in_scope let_variable_declaration
  335               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  336               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1093

    $default  reduce using rule 329 (optional_in_scope)

    optional_in_scope  go to state 1094


State 919

  275 expression_any: expression_let .

    $default  reduce using rule 275 (expression_any)


State 920

  273 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1095


State 921

   77 expression_if_one_liner: expr .
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 628
    "as"    shift, and go to state 629
    "+="    shift, and go to state 1096
    "-="    shift, and go to state 1097
    "/="    shift, and go to state 1098
    "*="    shift, and go to state 1099
    "%="    shift, and go to state 1100
    "&="    shift, and go to state 1101
    "|="    shift, and go to state 1102
    "^="    shift, and go to state 1103
    "<<"    shift, and go to state 630
    ">>"    shift, and go to state 631
    "++"    shift, and go to state 632
    "--"    shift, and go to state 633
    "<="    shift, and go to state 634
    "<<="   shift, and go to state 1104
    ">>="   shift, and go to state 1105
    ">="    shift, and go to state 635
    "=="    shift, and go to state 636
    "!="    shift, and go to state 637
    "->"    shift, and go to state 638
    "<-"    shift, and go to state 1106
    "??"    shift, and go to state 639
    "?."    shift, and go to state 640
    "?["    shift, and go to state 641
    "<|"    shift, and go to state 642
    "|>"    shift, and go to state 643
    ":="    shift, and go to state 1107
    "<<<"   shift, and go to state 644
    ">>>"   shift, and go to state 645
    "<<<="  shift, and go to state 1108
    ">>>="  shift, and go to state 1109
    "&&"    shift, and go to state 646
    "||"    shift, and go to state 647
    "^^"    shift, and go to state 648
    "&&="   shift, and go to state 1110
    "||="   shift, and go to state 1111
    "^^="   shift, and go to state 1112
    ".."    shift, and go to state 649
    '='     shift, and go to state 1113
    '?'     shift, and go to state 650
    '|'     shift, and go to state 651
    '^'     shift, and go to state 652
    '&'     shift, and go to state 653
    '<'     shift, and go to state 654
    '>'     shift, and go to state 655
    '-'     shift, and go to state 656
    '+'     shift, and go to state 657
    '*'     shift, and go to state 658
    '/'     shift, and go to state 659
    '%'     shift, and go to state 660
    '.'     shift, and go to state 661
    '['     shift, and go to state 662

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 379 (expr_assign)


State 922

  614 enum_expression: "name" .
  615                | "name" . '=' expr

    '='  shift, and go to state 1114

    $default  reduce using rule 614 (enum_expression)


State 923

  619 enum_list: enum_expression .

    $default  reduce using rule 619 (enum_list)


State 924

  620 enum_list: enum_list . commas enum_expression
  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list . optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 722
    ','                shift, and go to state 723

    $default  reduce using rule 633 (optional_commas)

    COMMA            go to state 868
    commas           go to state 1115
    optional_commas  go to state 1116


State 925

  544 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  546                                 | struct_variable_declaration_list . $@40 structure_variable_declaration SEMICOLON
  548                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  550                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block
  656 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1117
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1118

    "def"     reduce using rule 154 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 545 ($@40)

    optional_annotation_list_with_emit_semis  go to state 1119
    $@40                                      go to state 1120


State 926

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  587 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1121


State 927

  588 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 588 (let_variable_name_with_pos_list)


State 928

  589 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  590                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1122

    $default  reduce using rule 589 (let_variable_name_with_pos_list)


State 929

  596 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  597                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 558
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 559
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 560
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 1123
    copy_or_move_or_clone  go to state 1124


State 930

  598 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1125
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 931

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  600 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 628
    "as"                   shift, and go to state 629
    "<<"                   shift, and go to state 630
    ">>"                   shift, and go to state 631
    "++"                   shift, and go to state 632
    "--"                   shift, and go to state 633
    "<="                   shift, and go to state 634
    ">="                   shift, and go to state 635
    "=="                   shift, and go to state 636
    "!="                   shift, and go to state 637
    "->"                   shift, and go to state 638
    "??"                   shift, and go to state 639
    "?."                   shift, and go to state 640
    "?["                   shift, and go to state 641
    "<|"                   shift, and go to state 642
    "|>"                   shift, and go to state 643
    "<<<"                  shift, and go to state 644
    ">>>"                  shift, and go to state 645
    "&&"                   shift, and go to state 646
    "||"                   shift, and go to state 647
    "^^"                   shift, and go to state 648
    ".."                   shift, and go to state 649
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 650
    '|'                    shift, and go to state 651
    '^'                    shift, and go to state 652
    '&'                    shift, and go to state 653
    '<'                    shift, and go to state 654
    '>'                    shift, and go to state 655
    '-'                    shift, and go to state 656
    '+'                    shift, and go to state 657
    '*'                    shift, and go to state 658
    '/'                    shift, and go to state 659
    '%'                    shift, and go to state 660
    '.'                    shift, and go to state 661
    '['                    shift, and go to state 662
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1126


State 932

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 601 (global_let_variable_declaration)


State 933

  729 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 934

  752 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 752 (type_declaration_no_options_no_dim)


State 935

  755 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62 .

    $default  reduce using rule 755 (type_declaration_no_options_no_dim)


State 936

  716 table_type_pair: type_declaration c_or_s type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 716 (table_type_pair)


State 937

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1127
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 938

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1128
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 939

  307 new_type_declaration: '<' $@18 type_declaration . '>' $@19
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1129


State 940

  313 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  827 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996

    $default  reduce using rule 827 (use_initializer)

    make_struct_fields  go to state 616
    make_struct_single  go to state 1130


State 941

  311 expr_new: "new" new_type_declaration '(' expr_list . ')'
  353 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1131


State 942

  312 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1132


State 943

  310 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1133


State 944

  350 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  351               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 1134
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 1135


State 945

  349 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1136


State 946

  348 expr_type_decl: "type" '<' $@26 type_declaration . '>' $@27
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1137


State 947

  849 make_dim_decl: "array" "struct" '<' $@103 . type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1138
    type_declaration_no_options_no_dim  go to state 275


State 948

  852 make_dim_decl: "array" "tuple" '<' $@105 . tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 676
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 677
    tuple_type_list                     go to state 1139
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 679


State 949

  855 make_dim_decl: "array" "variant" '<' $@107 . variant_type_list '>' $@108 '(' make_variant_dim ')'

    "name"  shift, and go to state 680

    variant_type       go to state 681
    variant_type_list  go to state 1140


State 950

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  859 make_dim_decl: "array" '<' $@109 type_declaration_no_options . '>' $@110 '(' optional_expr_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1141
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 951

  856 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1142


State 952

  869 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1143


State 953

  870 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1144
    type_declaration_no_options_no_dim  go to state 275


State 954

  840 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1145
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 955

  865 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  874 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 874 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 740
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1146
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 956

  868 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1147


State 957

  479 expr: "deref" '(' expr ')' .

    $default  reduce using rule 479 (expr)


State 958

  339 expr_cast: "cast" '<' $@20 type_declaration_no_options . '>' $@21 expr
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1148
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 959

  342 expr_cast: "upcast" '<' $@22 type_declaration_no_options . '>' $@23 expr
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1149
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 960

  480 expr: "addr" '(' expr ')' .

    $default  reduce using rule 480 (expr)


State 961

  345 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options . '>' $@25 expr
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1150
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 962

  510 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 510 (expr)


State 963

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options . '>' $@112 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1151
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 964

  860 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1152


State 965

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  839 make_struct_decl: "default" '<' $@99 type_declaration_no_options . '>' $@100 use_initializer

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1153
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 966

  562 tuple_type_list: tuple_type_list . c_or_s tuple_type
  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 1154
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 860


State 967

  842 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1155


State 968

  568 variant_type_list: variant_type_list . c_or_s variant_type
  836 make_struct_decl: "variant" '<' $@97 variant_type_list . '>' $@98 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 1156
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 863


State 969

  511 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  512               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  513               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 792

    $default  reduce using rule 367 (optional_capture_list)

    optional_capture_list  go to state 1157


State 970

  514 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 971

  515 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 972

  516 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 973

  517 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 974

  518 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 975

  520 expr_mtag: "$c" '(' expr ')' . '(' ')'
  521          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1158


State 976

   40 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    ':'    shift, and go to state 1159
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 35 (optional_format_string)

    optional_format_string  go to state 1160


State 977

  100 for_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1161


State 978

   99 for_variable_name_with_pos_list: "name" .
  101                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1162

    $default  reduce using rule 99 (for_variable_name_with_pos_list)


State 979

  102 for_variable_name_with_pos_list: '(' . tuple_expansion ')'

    "name"  shift, and go to state 1163

    tuple_expansion  go to state 1164


State 980

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1165
    ','   shift, and go to state 1166


State 981

  876 array_comprehension: '[' "iterator" "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 977
    "name"  shift, and go to state 978
    '('     shift, and go to state 979

    for_variable_name_with_pos_list  go to state 1167


State 982

  353 expr_list: expr_list ',' expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 353 (expr_list)


State 983

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  813 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  814                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1168


State 984

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  810 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 810 (make_struct_fields)


State 985

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  809 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 809 (make_struct_fields)


State 986

  468 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 468 (expr)


State 987

  815 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  816                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1169


State 988

  811 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  812                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 771
    ":="  shift, and go to state 1170
    '='   shift, and go to state 773

    copy_or_move  go to state 1171


State 989

  403 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1172
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 990

  529 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1173
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 991

  407 func_addr_expr: '@' '@' '<' $@28 . type_declaration_no_options '>' $@29 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1174
    type_declaration_no_options_no_dim  go to state 275


State 992

  410 func_addr_expr: '@' '@' '<' $@30 . optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 1175


State 993

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1176
    ','   shift, and go to state 1166


State 994

  867 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1177


State 995

  297 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  865 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 955

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 1178


State 996

  809 make_struct_fields: "name" . copy_or_move expr
  810                   | "name" . ":=" expr

    "<-"  shift, and go to state 771
    ":="  shift, and go to state 772
    '='   shift, and go to state 773

    copy_or_move  go to state 774


State 997

  422 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 422 (expr_call)


State 998

  424 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1179


State 999

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1180
    ']'  shift, and go to state 1181


State 1000

  353 expr_list: expr_list ',' . expr
  399 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1182
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 982
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1001

  425 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 425 (expr_call)


State 1002

  423 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 423 (expr_call)


State 1003

  153 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 153 (optional_annotation_list)


State 1004

  368 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1183
    ":="    shift, and go to state 1184
    "name"  shift, and go to state 1185
    '='     shift, and go to state 1186
    '&'     shift, and go to state 1187

    capture_entry  go to state 1188
    capture_list   go to state 1189


State 1005

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 1190


State 1006

  371 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 371 (expr_full_block_assumed_piped)


State 1007

  370 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 1191


State 1008

  486 expr: expr "is" "type" '<' . $@34 type_declaration_no_options '>' $@35

    $default  reduce using rule 484 ($@34)

    $@34  go to state 1192


State 1009

  528 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1193
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1010

  492 expr: expr "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 490 ($@36)

    $@36  go to state 1194


State 1011

  526 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1195
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1012

  400 expr_method_call: expr "->" "name" '(' . ')'
  401                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1196
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1197
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1013

  523 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1198
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1014

  472 expr: expr "?[" expr ']' .

    $default  reduce using rule 472 (expr)


State 1015

  497 expr: expr '?' "as" "type" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 1199


State 1016

  527 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1200


State 1017

  494 expr: expr '?' "as" "name" .

    $default  reduce using rule 494 (expr)


State 1018

  498 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 498 (expr)


State 1019

  483 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1201
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1020

  525 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1202


State 1021

  475 expr: expr '.' "?." "name" .

    $default  reduce using rule 475 (expr)


State 1022

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  473     | expr '.' "?[" expr . ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ']'    shift, and go to state 1203


State 1023

  522 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1204
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1024

  413 expr_field: expr '.' "name" '(' . ')'
  414           | expr '.' "name" '(' . expr_list ')'
  415           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1205
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1206
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1207
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1025

  524 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1208


State 1026

  412 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 412 (expr_field)


State 1027

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  471     | expr '.' '[' expr . ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ']'    shift, and go to state 1209


State 1028

  420 expr_field: expr '.' $@32 error . $@33

    $default  reduce using rule 419 ($@33)

    $@33  go to state 1210


State 1029

  416 expr_field: expr '.' basic_type_declaration '(' . ')'
  417           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1211
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1212
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1030

  470 expr: expr '[' expr ']' .

    $default  reduce using rule 470 (expr)


State 1031

  353 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 982
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1032

  427 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 427 (expr_call)


State 1033

  758 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 758 (type_declaration_no_options_no_dim)


State 1034

  748 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 748 (type_declaration_no_options_no_dim)


State 1035

  712 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53 .

    $default  reduce using rule 712 (bitfield_type_declaration)


State 1036

  706 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 706 (bitfield_bits)


State 1037

  762 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 762 (type_declaration_no_options_no_dim)


State 1038

  765 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 764 ($@68)

    $@68  go to state 1213


State 1039

  769 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 769 (type_declaration_no_options_no_dim)


State 1040

  772 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 771 ($@72)

    $@72  go to state 1214


State 1041

  776 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74 .

    $default  reduce using rule 776 (type_declaration_no_options_no_dim)


State 1042

  779 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' . $@76

    $default  reduce using rule 778 ($@76)

    $@76  go to state 1215


State 1043

  560 tuple_type: "name" ':' type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 560 (tuple_type)


State 1044

  782 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78 .

    $default  reduce using rule 782 (type_declaration_no_options_no_dim)


State 1045

  562 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 562 (tuple_type_list)


State 1046

  566 variant_type: "name" ':' type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 566 (variant_type)


State 1047

  785 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80 .

    $default  reduce using rule 785 (type_declaration_no_options_no_dim)


State 1048

  568 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 568 (variant_type_list)


State 1049

  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1216


State 1050

  299 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1217


State 1051

  709 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 709 (bitfield_alias_bits)


State 1052

  617 commas: commas COMMA .

    $default  reduce using rule 617 (commas)


State 1053

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 . '}'

    '}'  shift, and go to state 1218


State 1054

   83 semis: semis SEMICOLON .

    $default  reduce using rule 83 (semis)


State 1055

  565 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 565 (tuple_alias_type_list)


State 1056

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1219


State 1057

  571 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 571 (variant_alias_type_list)


State 1058

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 . '}'

    '}'  shift, and go to state 1220


State 1059

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  662 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1221


State 1060

  663 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 663 (variable_name_with_pos_list)


State 1061

  664 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  665                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1222

    $default  reduce using rule 664 (variable_name_with_pos_list)


State 1062

  577 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  578                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 771
    '='   shift, and go to state 773
    '|'   shift, and go to state 377

    $default  reduce using rule 577 (variable_declaration_type)

    copy_or_move  go to state 1223


State 1063

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  576 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 576 (variable_declaration_no_type)


State 1064

  319 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1224
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1065

  318 expression_return: "return" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 318 (expression_return)


State 1066

  322 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1225


State 1067

  304 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1226
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1068

  303 expression_delete: "delete" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 303 (expression_delete)


State 1069

  113 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1227


State 1070

  290 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 290 (expression_any)


State 1071

   61 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1228


State 1072

   62 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1229


State 1073

   63 expression_goto: "goto" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 63 (expression_goto)


State 1074

  108 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1230
    $@16              go to state 397


State 1075

  321 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1231
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1076

  320 expression_yield: "yield" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 320 (expression_yield)


State 1077

  288 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 288 (expression_any)


State 1078

  289 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 289 (expression_any)


State 1079

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1232


State 1080

   73 if_or_static_if: "if" .

    $default  reduce using rule 73 (if_or_static_if)


State 1081

   74 if_or_static_if: "static_if" .

    $default  reduce using rule 74 (if_or_static_if)


State 1082

   97 expression_if_then_else: $@9 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1233


State 1083

  107 expression_for_loop: $@10 "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1234


State 1084

  110 expression_while_loop: $@11 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1235


State 1085

  112 expression_with: $@12 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1236


State 1086

  279 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 279 (expression_any)


State 1087

  270 expression_block: $@16 '{' expressions $@17 '}' . expression_block_finally

    "finally"  shift, and go to state 1237

    $default  reduce using rule 264 (expression_block_finally)

    expression_block_finally  go to state 1238


State 1088

  274 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 274 (expression_any)


State 1089

  281 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 281 (expression_any)


State 1090

  282 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 282 (expression_any)


State 1091

  283 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 283 (expression_any)


State 1092

  284 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 284 (expression_any)


State 1093

  328 optional_in_scope: "inscope" .

    $default  reduce using rule 328 (optional_in_scope)


State 1094

  334 expression_let: kwd_let optional_in_scope . let_variable_declaration
  335               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  336               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552
    '('     shift, and go to state 1239
    '{'     shift, and go to state 1240

    tuple_expansion_variable_declaration  go to state 1241
    let_variable_name_with_pos_list       go to state 553
    let_variable_declaration              go to state 1242


State 1095

  273 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 273 (expression_any)


State 1096

  389 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1243
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1097

  390 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1244
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1098

  392 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1245
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1099

  391 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1246
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1100

  393 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1247
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1101

  383 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1248
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1102

  384 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1249
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1103

  385 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1250
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1104

  394 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1251
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1105

  395 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1252
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1106

  381 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1253
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1107

  382 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1254
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1108

  396 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1255
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1109

  397 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1256
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1110

  386 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1257
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1111

  387 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1258
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1112

  388 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1259
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1113

  380 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1260
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1114

  615 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1261
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1115

  617 commas: commas . COMMA
  620 enum_list: enum_list commas . enum_expression
  634 optional_commas: commas .

    "name"             shift, and go to state 922
    "new line, comma"  shift, and go to state 722
    ','                shift, and go to state 723

    $default  reduce using rule 634 (optional_commas)

    COMMA            go to state 1052
    enum_expression  go to state 1262


State 1116

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas . $@48 '}'

    $default  reduce using rule 641 ($@48)

    $@48  go to state 1263


State 1117

  544 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 544 (struct_variable_declaration_list)


State 1118

  656 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 656 (optional_struct_variable_declaration_list)


State 1119

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  550                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1264


State 1120

  546 struct_variable_declaration_list: struct_variable_declaration_list $@40 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 530 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1265
    structure_variable_declaration  go to state 1266


State 1121

  587 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 587 (let_variable_name_with_pos_list)


State 1122

  590 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1267


State 1123

  596 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 596 (let_variable_declaration)


State 1124

  597 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1268
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1125

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  598 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 628
    "as"                   shift, and go to state 629
    "<<"                   shift, and go to state 630
    ">>"                   shift, and go to state 631
    "++"                   shift, and go to state 632
    "--"                   shift, and go to state 633
    "<="                   shift, and go to state 634
    ">="                   shift, and go to state 635
    "=="                   shift, and go to state 636
    "!="                   shift, and go to state 637
    "->"                   shift, and go to state 638
    "??"                   shift, and go to state 639
    "?."                   shift, and go to state 640
    "?["                   shift, and go to state 641
    "<|"                   shift, and go to state 642
    "|>"                   shift, and go to state 643
    "<<<"                  shift, and go to state 644
    ">>>"                  shift, and go to state 645
    "&&"                   shift, and go to state 646
    "||"                   shift, and go to state 647
    "^^"                   shift, and go to state 648
    ".."                   shift, and go to state 649
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 650
    '|'                    shift, and go to state 651
    '^'                    shift, and go to state 652
    '&'                    shift, and go to state 653
    '<'                    shift, and go to state 654
    '>'                    shift, and go to state 655
    '-'                    shift, and go to state 656
    '+'                    shift, and go to state 657
    '*'                    shift, and go to state 658
    '/'                    shift, and go to state 659
    '%'                    shift, and go to state 660
    '.'                    shift, and go to state 661
    '['                    shift, and go to state 662
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1269


State 1126

  600 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 600 (global_let_variable_declaration)


State 1127

  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 829 ($@94)

    $@94  go to state 1270


State 1128

  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 832 ($@96)

    $@96  go to state 1271


State 1129

  307 new_type_declaration: '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 306 ($@19)

    $@19  go to state 1272


State 1130

  313 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1273


State 1131

  311 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 311 (expr_new)


State 1132

  312 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 312 (expr_new)


State 1133

  310 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 310 (expr_new)


State 1134

  350 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1274


State 1135

  351 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1275


State 1136

  349 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 349 (expr_type_info)


State 1137

  348 expr_type_decl: "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 347 ($@27)

    $@27  go to state 1276


State 1138

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1277
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1139

  562 tuple_type_list: tuple_type_list . c_or_s tuple_type
  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list . '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 1278
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 860


State 1140

  568 variant_type_list: variant_type_list . c_or_s variant_type
  855 make_dim_decl: "array" "variant" '<' $@107 variant_type_list . '>' $@108 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 722
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 723
    '>'                    shift, and go to state 1279
    ';'                    shift, and go to state 16

    COMMA      go to state 724
    SEMICOLON  go to state 725
    c_or_s     go to state 863


State 1141

  859 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' . $@110 '(' optional_expr_list ')'

    $default  reduce using rule 858 ($@110)

    $@110  go to state 1280


State 1142

  856 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 856 (make_dim_decl)


State 1143

  869 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 296 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1281
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 740
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 741
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 995
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1144

  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"
  870 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1282
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1145

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  840 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 840 (make_map_tuple)


State 1146

  865 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 865 (expr_map_tuple_list)


State 1147

  868 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 868 (make_table_decl)


State 1148

  339 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 338 ($@21)

    $@21  go to state 1283


State 1149

  342 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' . $@23 expr

    $default  reduce using rule 341 ($@23)

    $@23  go to state 1284


State 1150

  345 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' . $@25 expr

    $default  reduce using rule 344 ($@25)

    $@25  go to state 1285


State 1151

  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' . $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 862 ($@112)

    $@112  go to state 1286


State 1152

  860 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 860 (make_dim_decl)


State 1153

  839 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' . $@100 use_initializer

    $default  reduce using rule 838 ($@100)

    $@100  go to state 1287


State 1154

  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 844 ($@102)

    $@102  go to state 1288


State 1155

  842 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 842 (make_tuple_call)


State 1156

  836 make_struct_decl: "variant" '<' $@97 variant_type_list '>' . $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 835 ($@98)

    $@98  go to state 1289


State 1157

  511 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  512               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  513               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1290

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1291


State 1158

  520 expr_mtag: "$c" '(' expr ')' '(' . ')'
  521          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1292
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1293
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1159

   37 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 36 ($@1)

    $@1  go to state 1294


State 1160

   40 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1295


State 1161

  100 for_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1296
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1162

  101 for_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1297


State 1163

  330 tuple_expansion: "name" .

    $default  reduce using rule 330 (tuple_expansion)


State 1164

  102 for_variable_name_with_pos_list: '(' tuple_expansion . ')'
  331 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1298
    ')'  shift, and go to state 1299


State 1165

  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1300
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1166

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' . "name"
  104                                | for_variable_name_with_pos_list ',' . "name" "aka" "name"
  105                                | for_variable_name_with_pos_list ',' . '(' tuple_expansion ')'

    "name"  shift, and go to state 1301
    '('     shift, and go to state 1302


State 1167

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1303
    ','   shift, and go to state 1166


State 1168

  813 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  814                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 771
    ":="  shift, and go to state 1304
    '='   shift, and go to state 773

    copy_or_move  go to state 1305


State 1169

  815 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  816                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1306
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1170

  812 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1307
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1171

  811 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1308
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1172

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  403 func_addr_name: "$i" '(' expr . ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1309


State 1173

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  529          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1310


State 1174

  407 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options . '>' $@29 func_addr_name
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1311
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1175

  410 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list . optional_function_type '>' $@31 func_addr_name

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 1312


State 1176

  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1313
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1177

  867 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 867 (make_table_decl)


State 1178

  297 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 297 (optional_expr_map_tuple_list)


State 1179

  424 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 424 (expr_call)


State 1180

  811 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  812                   | make_struct_fields ',' . "name" ":=" expr
  815                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 987
    "name"  shift, and go to state 988


State 1181

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1314


State 1182

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  846 make_dim_decl: '[' . optional_expr_list ']'
  875 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  876                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 608
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 609
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 613
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 614
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 610
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 611
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1315
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1183

  362 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1316


State 1184

  363 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1317


State 1185

  364 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1318


State 1186

  361 capture_entry: '=' . "name"

    "name"  shift, and go to state 1319


State 1187

  360 capture_entry: '&' . "name"

    "name"  shift, and go to state 1320


State 1188

  365 capture_list: capture_entry .

    $default  reduce using rule 365 (capture_list)


State 1189

  366 capture_list: capture_list . ',' capture_entry
  368 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1321
    ')'  shift, and go to state 1322


State 1190

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1323


State 1191

  370 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 1324


State 1192

  486 expr: expr "is" "type" '<' $@34 . type_declaration_no_options '>' $@35

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1325
    type_declaration_no_options_no_dim  go to state 275


State 1193

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  528          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1326


State 1194

  492 expr: expr "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1327


State 1195

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  526          | expr "as" "$f" '(' expr . ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1328


State 1196

  400 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 400 (expr_method_call)


State 1197

  353 expr_list: expr_list . ',' expr
  401 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1329


State 1198

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  523          | expr "?." "$f" '(' expr . ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1330


State 1199

  497 expr: expr '?' "as" "type" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 495 ($@38)

    $@38  go to state 1331


State 1200

  527 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1332
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1201

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  483     | expr '?' expr ':' expr .
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 483 (expr)


State 1202

  525 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1333
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1203

  473 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 473 (expr)


State 1204

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  522          | expr '.' "$f" '(' expr . ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1334


State 1205

  415 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  846 make_dim_decl: '[' . optional_expr_list ']'
  875 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  876                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 608
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 609
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 613
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 614
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 610
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 611
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1335
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1206

  413 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 413 (expr_field)


State 1207

  353 expr_list: expr_list . ',' expr
  414 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1336


State 1208

  524 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1337
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1209

  471 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 471 (expr)


State 1210

  420 expr_field: expr '.' $@32 error $@33 .

    $default  reduce using rule 420 (expr_field)


State 1211

  416 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 416 (expr_field)


State 1212

  353 expr_list: expr_list . ',' expr
  417 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1338


State 1213

  765 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 765 (type_declaration_no_options_no_dim)


State 1214

  772 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 772 (type_declaration_no_options_no_dim)


State 1215

  779 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76 .

    $default  reduce using rule 779 (type_declaration_no_options_no_dim)


State 1216

  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1339
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 611
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1217

  299 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 299 (type_declaration_no_options_list)


State 1218

  803 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}' .

    $default  reduce using rule 803 (bitfield_alias_declaration)


State 1219

  793 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 793 (tuple_alias_declaration)


State 1220

  798 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}' .

    $default  reduce using rule 798 (variant_alias_declaration)


State 1221

  662 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 662 (variable_name_with_pos_list)


State 1222

  665 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1340


State 1223

  578 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1341
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1224

  319 expression_return: "return" "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 319 (expression_return)


State 1225

  322 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1342
    $@16              go to state 397


State 1226

  304 expression_delete: "delete" "explicit" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 304 (expression_delete)


State 1227

  113 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1343
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1228

   61 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 61 (expression_label)


State 1229

   62 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 62 (expression_goto)


State 1230

  108 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 108 (expression_unsafe)


State 1231

  321 expression_yield: "yield" "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 321 (expression_yield)


State 1232

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1344
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1233

   97 expression_if_then_else: $@9 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1345
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1234

  107 expression_for_loop: $@10 "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 977
    "name"  shift, and go to state 978
    '('     shift, and go to state 979

    for_variable_name_with_pos_list  go to state 1346


State 1235

  110 expression_while_loop: $@11 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1347
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1236

  112 expression_with: $@12 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1348
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1237

  267 expression_block_finally: "finally" . $@14 '{' expressions $@15 '}'

    $default  reduce using rule 265 ($@14)

    $@14  go to state 1349


State 1238

  270 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally .

    $default  reduce using rule 270 (expression_block)


State 1239

  332 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  333                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1163

    tuple_expansion  go to state 1350


State 1240

  336 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 593 (variable_declaration_list)

    variable_declaration_list  go to state 1351


State 1241

  335 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 335 (expression_let)


State 1242

  334 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 334 (expression_let)


State 1243

  389 expr_assign: expr "+=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 389 (expr_assign)


State 1244

  390 expr_assign: expr "-=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 390 (expr_assign)


State 1245

  392 expr_assign: expr "/=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 392 (expr_assign)


State 1246

  391 expr_assign: expr "*=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 391 (expr_assign)


State 1247

  393 expr_assign: expr "%=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 393 (expr_assign)


State 1248

  383 expr_assign: expr "&=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 383 (expr_assign)


State 1249

  384 expr_assign: expr "|=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 384 (expr_assign)


State 1250

  385 expr_assign: expr "^=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 385 (expr_assign)


State 1251

  394 expr_assign: expr "<<=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 394 (expr_assign)


State 1252

  395 expr_assign: expr ">>=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 395 (expr_assign)


State 1253

  381 expr_assign: expr "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 381 (expr_assign)


State 1254

  382 expr_assign: expr ":=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 382 (expr_assign)


State 1255

  396 expr_assign: expr "<<<=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 396 (expr_assign)


State 1256

  397 expr_assign: expr ">>>=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 397 (expr_assign)


State 1257

  386 expr_assign: expr "&&=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 386 (expr_assign)


State 1258

  387 expr_assign: expr "||=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 387 (expr_assign)


State 1259

  388 expr_assign: expr "^^=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 388 (expr_assign)


State 1260

  380 expr_assign: expr '=' expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 380 (expr_assign)


State 1261

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  615 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 615 (enum_expression)


State 1262

  620 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 620 (enum_list)


State 1263

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 . '}'

    '}'  shift, and go to state 1352


State 1264

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  550                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1353
    "private"  shift, and go to state 1354

    $default  reduce using rule 537 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1355


State 1265

  542 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1356

    $default  reduce using rule 540 (optional_static_member_variable)

    optional_static_member_variable  go to state 1357


State 1266

  546 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1358


State 1267

  590 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 590 (let_variable_name_with_pos_list)


State 1268

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  597 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 628
    "as"                   shift, and go to state 629
    "<<"                   shift, and go to state 630
    ">>"                   shift, and go to state 631
    "++"                   shift, and go to state 632
    "--"                   shift, and go to state 633
    "<="                   shift, and go to state 634
    ">="                   shift, and go to state 635
    "=="                   shift, and go to state 636
    "!="                   shift, and go to state 637
    "->"                   shift, and go to state 638
    "??"                   shift, and go to state 639
    "?."                   shift, and go to state 640
    "?["                   shift, and go to state 641
    "<|"                   shift, and go to state 642
    "|>"                   shift, and go to state 643
    "<<<"                  shift, and go to state 644
    ">>>"                  shift, and go to state 645
    "&&"                   shift, and go to state 646
    "||"                   shift, and go to state 647
    "^^"                   shift, and go to state 648
    ".."                   shift, and go to state 649
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 650
    '|'                    shift, and go to state 651
    '^'                    shift, and go to state 652
    '&'                    shift, and go to state 653
    '<'                    shift, and go to state 654
    '>'                    shift, and go to state 655
    '-'                    shift, and go to state 656
    '+'                    shift, and go to state 657
    '*'                    shift, and go to state 658
    '/'                    shift, and go to state 659
    '%'                    shift, and go to state 660
    '.'                    shift, and go to state 661
    '['                    shift, and go to state 662
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1359


State 1269

  598 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 598 (let_variable_declaration)


State 1270

  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1360


State 1271

  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1361


State 1272

  307 new_type_declaration: '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 307 (new_type_declaration)


State 1273

  313 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 313 (expr_new)


State 1274

  350 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1362
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1275

  351 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1363


State 1276

  348 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 348 (expr_type_decl)


State 1277

  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 848 ($@104)

    $@104  go to state 1364


State 1278

  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' . $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 851 ($@106)

    $@106  go to state 1365


State 1279

  855 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' . $@108 '(' make_variant_dim ')'

    $default  reduce using rule 854 ($@108)

    $@108  go to state 1366


State 1280

  859 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 . '(' optional_expr_list ')'

    '('  shift, and go to state 1367


State 1281

  869 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1368


State 1282

  870 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1369


State 1283

  339 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1370
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1284

  342 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1371
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1285

  345 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1372
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1286

  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1373


State 1287

  839 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 . use_initializer

    "uninitialized"  shift, and go to state 1374

    $default  reduce using rule 826 (use_initializer)

    use_initializer  go to state 1375


State 1288

  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1376


State 1289

  836 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1377


State 1290

  511 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  512               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1378
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1379
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1291

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1380
    $@16              go to state 397


State 1292

  520 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 520 (expr_mtag)


State 1293

  353 expr_list: expr_list . ',' expr
  521 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1381


State 1294

   37 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 33 (format_string)

    format_string  go to state 1382


State 1295

   40 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 40 (string_builder_body)


State 1296

  100 for_variable_name_with_pos_list: "$i" '(' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1383


State 1297

  101 for_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 101 (for_variable_name_with_pos_list)


State 1298

  331 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1384


State 1299

  102 for_variable_name_with_pos_list: '(' tuple_expansion ')' .

    $default  reduce using rule 102 (for_variable_name_with_pos_list)


State 1300

  353 expr_list: expr_list . ',' expr
  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1385


State 1301

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" .
  104                                | for_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1386

    $default  reduce using rule 103 (for_variable_name_with_pos_list)


State 1302

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' . tuple_expansion ')'

    "name"  shift, and go to state 1163

    tuple_expansion  go to state 1387


State 1303

  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1388
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1304

  814 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1389
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1305

  813 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1390
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1306

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  815 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  816                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1391


State 1307

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  812 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 812 (make_struct_fields)


State 1308

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  811 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 811 (make_struct_fields)


State 1309

  403 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 403 (func_addr_name)


State 1310

  529 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1311

  407 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' . $@29 func_addr_name

    $default  reduce using rule 406 ($@29)

    $@29  go to state 1392


State 1312

  410 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type . '>' $@31 func_addr_name

    '>'  shift, and go to state 1393


State 1313

  353 expr_list: expr_list . ',' expr
  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1394


State 1314

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 398 (expr_named_call)


State 1315

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1180
    ']'  shift, and go to state 1395


State 1316

  362 capture_entry: "<-" "name" .

    $default  reduce using rule 362 (capture_entry)


State 1317

  363 capture_entry: ":=" "name" .

    $default  reduce using rule 363 (capture_entry)


State 1318

  364 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1396


State 1319

  361 capture_entry: '=' "name" .

    $default  reduce using rule 361 (capture_entry)


State 1320

  360 capture_entry: '&' "name" .

    $default  reduce using rule 360 (capture_entry)


State 1321

  366 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1183
    ":="    shift, and go to state 1184
    "name"  shift, and go to state 1185
    '='     shift, and go to state 1186
    '&'     shift, and go to state 1187

    capture_entry  go to state 1397


State 1322

  368 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 368 (optional_capture_list)


State 1323

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1398

    $default  reduce using rule 268 ($@16)

    expression_block       go to state 1399
    $@16                   go to state 397
    block_or_simple_block  go to state 1400


State 1324

  370 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1401


State 1325

  486 expr: expr "is" "type" '<' $@34 type_declaration_no_options . '>' $@35
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1402
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1326

  528 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1327

  492 expr: expr "as" "type" '<' $@36 type_declaration . '>' $@37
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1403


State 1328

  526 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1329

  401 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 401 (expr_method_call)


State 1330

  523 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1331

  497 expr: expr '?' "as" "type" '<' $@38 . type_declaration '>' $@39

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1404


State 1332

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  527          | expr '?' "as" "$f" '(' expr . ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1405


State 1333

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  525          | expr '.' "?." "$f" '(' expr . ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1406


State 1334

  522 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1335

  415 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1180
    ']'  shift, and go to state 1407


State 1336

  414 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 414 (expr_field)


State 1337

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  524          | expr '.' '.' "$f" '(' expr . ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1408


State 1338

  417 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 417 (expr_field)


State 1339

  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1409


State 1340

  665 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 665 (variable_name_with_pos_list)


State 1341

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  578 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 578 (variable_declaration_type)


State 1342

  322 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 322 (expression_try_catch)


State 1343

  113 expression_with_alias: "assume" "name" '=' expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 113 (expression_with_alias)


State 1344

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1410


State 1345

   97 expression_if_then_else: $@9 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1411


State 1346

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block

    "in"  shift, and go to state 1412
    ','   shift, and go to state 1166


State 1347

  110 expression_while_loop: $@11 "while" '(' expr . ')' optional_emit_semis expression_block
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1413


State 1348

  112 expression_with: $@12 "with" '(' expr . ')' optional_emit_semis expression_block
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1414


State 1349

  267 expression_block_finally: "finally" $@14 . '{' expressions $@15 '}'

    '{'  shift, and go to state 1415


State 1350

  331 tuple_expansion: tuple_expansion . ',' "name"
  332 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  333                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1298
    ')'  shift, and go to state 1416


State 1351

  336 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  594 variable_declaration_list: variable_declaration_list . SEMICOLON
  595                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 551
    "name"                 shift, and go to state 552
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1417

    SEMICOLON                        go to state 1418
    let_variable_name_with_pos_list  go to state 553
    let_variable_declaration         go to state 1419


State 1352

  642 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}' .

    $default  reduce using rule 642 (enum_declaration)


State 1353

  538 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 538 (optional_public_or_private_member_variable)


State 1354

  539 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 539 (optional_public_or_private_member_variable)


State 1355

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  550                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1420
    "static"    shift, and go to state 1356

    $default  reduce using rule 540 (optional_static_member_variable)

    optional_static_member_variable  go to state 1421


State 1356

  541 optional_static_member_variable: "static" .

    $default  reduce using rule 541 (optional_static_member_variable)


State 1357

  542 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1422
    "sealed"    shift, and go to state 1423

    $default  reduce using rule 532 (optional_override)

    optional_override  go to state 1424


State 1358

  546 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 546 (struct_variable_declaration_list)


State 1359

  597 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 597 (let_variable_declaration)


State 1360

  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1374

    $default  reduce using rule 826 (use_initializer)

    use_initializer  go to state 1425


State 1361

  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1374

    $default  reduce using rule 826 (use_initializer)

    use_initializer  go to state 1426


State 1362

  350 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1427


State 1363

  351 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1428


State 1364

  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1429


State 1365

  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1430


State 1366

  855 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 . '(' make_variant_dim ')'

    '('  shift, and go to state 1431


State 1367

  859 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1432
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 611
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1368

  869 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 869 (make_table_decl)


State 1369

  870 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 296 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1433
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 740
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 741
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 995
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1370

  339 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 339 (expr_cast)


State 1371

  342 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 342 (expr_cast)


State 1372

  345 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 345 (expr_cast)


State 1373

  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1434
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1374

  827 use_initializer: "uninitialized" .

    $default  reduce using rule 827 (use_initializer)


State 1375

  839 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer .

    $default  reduce using rule 839 (make_struct_decl)


State 1376

  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1374

    $default  reduce using rule 826 (use_initializer)

    use_initializer  go to state 1435


State 1377

  836 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1374

    $default  reduce using rule 826 (use_initializer)

    use_initializer  go to state 1436


State 1378

  511 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 511 (expr_generator)


State 1379

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  512 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1437


State 1380

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 513 (expr_generator)


State 1381

  521 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 521 (expr_mtag)


State 1382

   34 format_string: format_string . STRING_CHARACTER
   37 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1438

    $default  reduce using rule 37 (optional_format_string)


State 1383

  100 for_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 100 (for_variable_name_with_pos_list)


State 1384

  331 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 331 (tuple_expansion)


State 1385

  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1439


State 1386

  104 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1440


State 1387

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion . ')'
  331 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1298
    ')'  shift, and go to state 1441


State 1388

  353 expr_list: expr_list . ',' expr
  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1442


State 1389

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  814 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 814 (make_struct_fields)


State 1390

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  813 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 813 (make_struct_fields)


State 1391

  815 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  816                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 771
    ":="  shift, and go to state 1443
    '='   shift, and go to state 773

    copy_or_move  go to state 1444


State 1392

  407 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 779
    "name"  shift, and go to state 58

    name_in_namespace  go to state 782
    func_addr_name     go to state 1445


State 1393

  410 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' . $@31 func_addr_name

    $default  reduce using rule 409 ($@31)

    $@31  go to state 1446


State 1394

  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1447


State 1395

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1448


State 1396

  364 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1449


State 1397

  366 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 366 (capture_list)


State 1398

  355 block_or_simple_block: "=>" . expr
  356                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1450
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1451
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1399

  354 block_or_simple_block: expression_block .

    $default  reduce using rule 354 (block_or_simple_block)


State 1400

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 369 (expr_full_block)


State 1401

  370 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1452
    $@16              go to state 397


State 1402

  486 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' . $@35

    $default  reduce using rule 485 ($@35)

    $@35  go to state 1453


State 1403

  492 expr: expr "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 491 ($@37)

    $@37  go to state 1454


State 1404

  497 expr: expr '?' "as" "type" '<' $@38 type_declaration . '>' $@39
  787 type_declaration: type_declaration . '|' type_declaration_no_options
  788                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1455


State 1405

  527 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1406

  525 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 525 (expr_mtag)


State 1407

  415 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1456


State 1408

  524 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1409

  733 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 1410

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1457

    $default  reduce using rule 75 (expression_else_one_liner)

    expression_else_one_liner  go to state 1458


State 1411

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1459


State 1412

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1460
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 612
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1413

  110 expression_while_loop: $@11 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1461


State 1414

  112 expression_with: $@12 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1462


State 1415

  267 expression_block_finally: "finally" $@14 '{' . expressions $@15 '}'

    $default  reduce using rule 291 (expressions)

    expressions  go to state 1463


State 1416

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  333                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1464
    '&'  shift, and go to state 415

    $default  reduce using rule 584 (optional_ref)

    optional_ref  go to state 1465


State 1417

  336 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 336 (expression_let)


State 1418

  594 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 594 (variable_declaration_list)


State 1419

  595 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 595 (variable_declaration_list)


State 1420

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@41 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1466

    $default  reduce using rule 535 (optional_constant)

    optional_constant  go to state 1467


State 1421

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1422
    "sealed"    shift, and go to state 1423

    $default  reduce using rule 532 (optional_override)

    optional_override  go to state 1468


State 1422

  533 optional_override: "override" .

    $default  reduce using rule 533 (optional_override)


State 1423

  534 optional_override: "sealed" .

    $default  reduce using rule 534 (optional_override)


State 1424

  542 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1353
    "private"  shift, and go to state 1354

    $default  reduce using rule 537 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1469


State 1425

  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996
    '('     shift, and go to state 1470

    $default  reduce using rule 825 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1471
    make_struct_dim_list           go to state 1472
    make_struct_dim_decl           go to state 1473
    optional_make_struct_dim_decl  go to state 1474


State 1426

  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996
    '('     shift, and go to state 1470

    $default  reduce using rule 825 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1471
    make_struct_dim_list           go to state 1472
    make_struct_dim_decl           go to state 1473
    optional_make_struct_dim_decl  go to state 1475


State 1427

  350 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 350 (expr_type_info)


State 1428

  351 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1476
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1429

  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1374

    $default  reduce using rule 826 (use_initializer)

    use_initializer  go to state 1477


State 1430

  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1374

    $default  reduce using rule 826 (use_initializer)

    use_initializer  go to state 1478


State 1431

  855 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996

    $default  reduce using rule 817 (make_variant_dim)

    make_struct_fields  go to state 1479
    make_variant_dim    go to state 1480


State 1432

  859 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1481


State 1433

  870 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1482


State 1434

  353 expr_list: expr_list . ',' expr
  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 768

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 1483


State 1435

  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996
    '('     shift, and go to state 1470

    $default  reduce using rule 825 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1471
    make_struct_dim_list           go to state 1472
    make_struct_dim_decl           go to state 1473
    optional_make_struct_dim_decl  go to state 1484


State 1436

  836 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996

    $default  reduce using rule 817 (make_variant_dim)

    make_struct_fields  go to state 1479
    make_variant_dim    go to state 1485


State 1437

  512 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 512 (expr_generator)


State 1438

   34 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 34 (format_string)


State 1439

  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1486
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1440

  104 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 104 (for_variable_name_with_pos_list)


State 1441

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion ')' .

    $default  reduce using rule 105 (for_variable_name_with_pos_list)


State 1442

  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1487


State 1443

  816 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1488
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1444

  815 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1489
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1445

  407 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name .

    $default  reduce using rule 407 (func_addr_expr)


State 1446

  410 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 779
    "name"  shift, and go to state 58

    name_in_namespace  go to state 782
    func_addr_name     go to state 1490


State 1447

  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 740
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1491
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1448

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 399 (expr_named_call)


State 1449

  364 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 364 (capture_entry)


State 1450

  356 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1492
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1451

  355 block_or_simple_block: "=>" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    ".."  error (nonassociative)

    $default  reduce using rule 355 (block_or_simple_block)


State 1452

  370 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 370 (expr_full_block_assumed_piped)


State 1453

  486 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35 .

    $default  reduce using rule 486 (expr)


State 1454

  492 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 492 (expr)


State 1455

  497 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 496 ($@39)

    $@39  go to state 1493


State 1456

  415 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 415 (expr_field)


State 1457

   76 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1494
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1495
    expression_continue      go to state 1496
    expression_return        go to state 1497
    expression_yield         go to state 1498
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1499
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1458

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1500


State 1459

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 86 ($@3)
    '{'       [reduce using rule 89 ($@5)]
    $default  reduce using rule 89 ($@5)

    expression_if_block  go to state 1501
    $@3                  go to state 1502
    $@5                  go to state 1503


State 1460

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  353 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1031
    ')'  shift, and go to state 1504


State 1461

  110 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1505
    $@16              go to state 397


State 1462

  112 expression_with: $@12 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1506
    $@16              go to state 397


State 1463

  267 expression_block_finally: "finally" $@14 '{' expressions . $@15 '}'
  292 expressions: expressions . expression_any
  293            | expressions . error

    error                             shift, and go to state 883
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "try"                             shift, and go to state 886
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 887
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 888
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "pass"                            shift, and go to state 890
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 891
    "goto"                            shift, and go to state 892
    "unsafe"                          shift, and go to state 893
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 266 ($@15)

    SEMICOLON                         go to state 895
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 896
    expression_goto                   go to state 897
    expression_if_one_liner           go to state 898
    expression_if_then_else           go to state 899
    $@9                               go to state 900
    expression_if_then_else_oneliner  go to state 901
    expression_for_loop               go to state 902
    $@10                              go to state 903
    expression_unsafe                 go to state 904
    expression_while_loop             go to state 905
    $@11                              go to state 906
    expression_with                   go to state 907
    $@12                              go to state 908
    expression_with_alias             go to state 909
    $@15                              go to state 1507
    expr_call_pipe                    go to state 471
    expression_any                    go to state 911
    name_in_namespace                 go to state 472
    expression_delete                 go to state 912
    expr_new                          go to state 473
    expression_break                  go to state 913
    expression_continue               go to state 914
    expression_return                 go to state 915
    expression_yield                  go to state 916
    expression_try_catch              go to state 917
    kwd_let                           go to state 918
    expression_let                    go to state 919
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 920
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 921
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1464

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1508
    type_declaration_no_options_no_dim  go to state 275


State 1465

  333 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 558
    ":="  shift, and go to state 559
    '='   shift, and go to state 560

    copy_or_move_or_clone  go to state 1509


State 1466

  536 optional_constant: "const" .

    $default  reduce using rule 536 (optional_constant)


State 1467

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@41 function_declaration_header SEMICOLON

    $default  reduce using rule 547 ($@41)

    $@41  go to state 1510


State 1468

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1466

    $default  reduce using rule 535 (optional_constant)

    optional_constant  go to state 1511


State 1469

  542 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 697
    "name"  shift, and go to state 698

    variable_declaration_no_type  go to state 1512
    variable_declaration_type     go to state 1513
    variable_declaration          go to state 1514
    variable_name_with_pos_list   go to state 701


State 1470

  820 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996

    make_struct_fields  go to state 1515


State 1471

  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  822 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1180

    $default  reduce using rule 822 (make_struct_dim_decl)


State 1472

  821 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  823 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1516

    $default  reduce using rule 873 (optional_comma)

    optional_comma  go to state 1517


State 1473

  824 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 824 (optional_make_struct_dim_decl)


State 1474

  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1518


State 1475

  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1519


State 1476

  351 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1520


State 1477

  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996
    '('     shift, and go to state 1470

    $default  reduce using rule 825 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1471
    make_struct_dim_list           go to state 1472
    make_struct_dim_decl           go to state 1473
    optional_make_struct_dim_decl  go to state 1521


State 1478

  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996
    '('     shift, and go to state 1470

    $default  reduce using rule 825 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1471
    make_struct_dim_list           go to state 1472
    make_struct_dim_decl           go to state 1473
    optional_make_struct_dim_decl  go to state 1522


State 1479

  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  818 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1180

    $default  reduce using rule 818 (make_variant_dim)


State 1480

  855 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1523


State 1481

  859 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')' .

    $default  reduce using rule 859 (make_dim_decl)


State 1482

  870 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 870 (make_table_decl)


State 1483

  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1524


State 1484

  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1525


State 1485

  836 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1526


State 1486

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ';'    shift, and go to state 1527

    $default  reduce using rule 871 (array_comprehension_where)

    array_comprehension_where  go to state 1528


State 1487

  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1529
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1488

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  816 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 816 (make_struct_fields)


State 1489

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  815 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 815 (make_struct_fields)


State 1490

  410 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name .

    $default  reduce using rule 410 (func_addr_expr)


State 1491

  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1527

    $default  reduce using rule 871 (array_comprehension_where)

    array_comprehension_where  go to state 1530


State 1492

  356 block_or_simple_block: "=>" "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 356 (block_or_simple_block)


State 1493

  497 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 497 (expr)


State 1494

   76 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1495

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1496

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1497

   78 expression_if_one_liner: expression_return .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1498

   79 expression_if_one_liner: expression_yield .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1499

   77 expression_if_one_liner: expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 77 (expression_if_one_liner)


State 1500

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 98 (expression_if_then_else_oneliner)


State 1501

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1531
    "elif"         shift, and go to state 1532
    "static_elif"  shift, and go to state 1533

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1534
    expression_else      go to state 1535


State 1502

   88 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1536


State 1503

   90 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1537
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1495
    expression_continue      go to state 1496
    expression_return        go to state 1497
    expression_yield         go to state 1498
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1499
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1504

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1538


State 1505

  110 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 110 (expression_while_loop)


State 1506

  112 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 112 (expression_with)


State 1507

  267 expression_block_finally: "finally" $@14 '{' expressions $@15 . '}'

    '}'  shift, and go to state 1539


State 1508

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  734 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  735                                   | type_declaration_no_options . "explicit"
  736                                   | type_declaration_no_options . "const"
  737                                   | type_declaration_no_options . '-' "const"
  738                                   | type_declaration_no_options . '&'
  739                                   | type_declaration_no_options . '-' '&'
  740                                   | type_declaration_no_options . '#'
  741                                   | type_declaration_no_options . "implicit"
  742                                   | type_declaration_no_options . '-' '#'
  743                                   | type_declaration_no_options . "==" "const"
  744                                   | type_declaration_no_options . "==" '&'
  745                                   | type_declaration_no_options . '?'
  749                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 558
    "??"        shift, and go to state 370
    ":="        shift, and go to state 559
    '='         shift, and go to state 560
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    copy_or_move_or_clone  go to state 1540


State 1509

  333 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1541
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1510

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1542


State 1511

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@42 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 549 ($@42)

    $@42  go to state 1543


State 1512

  580 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 580 (variable_declaration)


State 1513

  579 variable_declaration: variable_declaration_type .

    $default  reduce using rule 579 (variable_declaration)


State 1514

  542 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 542 (structure_variable_declaration)


State 1515

  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  820 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1180
    ')'  shift, and go to state 1544


State 1516

  821 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  874 optional_comma: ',' .

    '('  shift, and go to state 1545

    $default  reduce using rule 874 (optional_comma)


State 1517

  823 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 823 (make_struct_dim_decl)


State 1518

  830 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 830 (make_struct_decl)


State 1519

  833 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 833 (make_struct_decl)


State 1520

  351 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 351 (expr_type_info)


State 1521

  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1546


State 1522

  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1547


State 1523

  855 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')' .

    $default  reduce using rule 855 (make_dim_decl)


State 1524

  863 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')' .

    $default  reduce using rule 863 (make_dim_decl)


State 1525

  845 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 845 (make_tuple_call)


State 1526

  836 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 836 (make_struct_decl)


State 1527

  872 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1548


State 1528

  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1549


State 1529

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ';'    shift, and go to state 1527

    $default  reduce using rule 871 (array_comprehension_where)

    array_comprehension_where  go to state 1550


State 1530

  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1551


State 1531

   71 expression_else: "else" . optional_emit_semis expression_else_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1552


State 1532

   64 elif_or_static_elif: "elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1533

   65 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1534

   72 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_else_block expression_else

    '('  shift, and go to state 1553


State 1535

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 97 (expression_if_then_else)


State 1536

   88 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 291 (expressions)

    expressions  go to state 1554


State 1537

   90 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1555


State 1538

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1556
    $@16              go to state 397


State 1539

  267 expression_block_finally: "finally" $@14 '{' expressions $@15 '}' .

    $default  reduce using rule 267 (expression_block_finally)


State 1540

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1557
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1541

  333 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 628
    "as"                   shift, and go to state 629
    "<<"                   shift, and go to state 630
    ">>"                   shift, and go to state 631
    "++"                   shift, and go to state 632
    "--"                   shift, and go to state 633
    "<="                   shift, and go to state 634
    ">="                   shift, and go to state 635
    "=="                   shift, and go to state 636
    "!="                   shift, and go to state 637
    "->"                   shift, and go to state 638
    "??"                   shift, and go to state 639
    "?."                   shift, and go to state 640
    "?["                   shift, and go to state 641
    "<|"                   shift, and go to state 642
    "|>"                   shift, and go to state 643
    "<<<"                  shift, and go to state 644
    ">>>"                  shift, and go to state 645
    "&&"                   shift, and go to state 646
    "||"                   shift, and go to state 647
    "^^"                   shift, and go to state 648
    ".."                   shift, and go to state 649
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 650
    '|'                    shift, and go to state 651
    '^'                    shift, and go to state 652
    '&'                    shift, and go to state 653
    '<'                    shift, and go to state 654
    '>'                    shift, and go to state 655
    '-'                    shift, and go to state 656
    '+'                    shift, and go to state 657
    '*'                    shift, and go to state 658
    '/'                    shift, and go to state 659
    '%'                    shift, and go to state 660
    '.'                    shift, and go to state 661
    '['                    shift, and go to state 662
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1558


State 1542

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1559


State 1543

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1560


State 1544

  820 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 820 (make_struct_dim_list)


State 1545

  821 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 613
    "name"  shift, and go to state 996

    make_struct_fields  go to state 1561


State 1546

  849 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 849 (make_dim_decl)


State 1547

  852 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 852 (make_dim_decl)


State 1548

  872 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1562
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1549

  875 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 875 (array_comprehension)


State 1550

  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1563


State 1551

  877 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 877 (array_comprehension)


State 1552

   71 expression_else: "else" optional_emit_semis . expression_else_block

    '{'       reduce using rule 91 ($@6)
    '{'       [reduce using rule 94 ($@8)]
    $default  reduce using rule 94 ($@8)

    expression_else_block  go to state 1564
    $@6                    go to state 1565
    $@8                    go to state 1566


State 1553

   72 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_else_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1567
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1554

   88 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  292 expressions: expressions . expression_any
  293            | expressions . error

    error                             shift, and go to state 883
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "try"                             shift, and go to state 886
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 887
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 888
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "pass"                            shift, and go to state 890
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 891
    "goto"                            shift, and go to state 892
    "unsafe"                          shift, and go to state 893
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 87 ($@4)

    SEMICOLON                         go to state 895
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 896
    expression_goto                   go to state 897
    expression_if_one_liner           go to state 898
    $@4                               go to state 1568
    expression_if_then_else           go to state 899
    $@9                               go to state 900
    expression_if_then_else_oneliner  go to state 901
    expression_for_loop               go to state 902
    $@10                              go to state 903
    expression_unsafe                 go to state 904
    expression_while_loop             go to state 905
    $@11                              go to state 906
    expression_with                   go to state 907
    $@12                              go to state 908
    expression_with_alias             go to state 909
    expr_call_pipe                    go to state 471
    expression_any                    go to state 911
    name_in_namespace                 go to state 472
    expression_delete                 go to state 912
    expr_new                          go to state 473
    expression_break                  go to state 913
    expression_continue               go to state 914
    expression_return                 go to state 915
    expression_yield                  go to state 916
    expression_try_catch              go to state 917
    kwd_let                           go to state 918
    expression_let                    go to state 919
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 920
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 921
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1555

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 90 (expression_if_block)


State 1556

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 107 (expression_for_loop)


State 1557

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 628
    "as"                   shift, and go to state 629
    "<<"                   shift, and go to state 630
    ">>"                   shift, and go to state 631
    "++"                   shift, and go to state 632
    "--"                   shift, and go to state 633
    "<="                   shift, and go to state 634
    ">="                   shift, and go to state 635
    "=="                   shift, and go to state 636
    "!="                   shift, and go to state 637
    "->"                   shift, and go to state 638
    "??"                   shift, and go to state 639
    "?."                   shift, and go to state 640
    "?["                   shift, and go to state 641
    "<|"                   shift, and go to state 642
    "|>"                   shift, and go to state 643
    "<<<"                  shift, and go to state 644
    ">>>"                  shift, and go to state 645
    "&&"                   shift, and go to state 646
    "||"                   shift, and go to state 647
    "^^"                   shift, and go to state 648
    ".."                   shift, and go to state 649
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 650
    '|'                    shift, and go to state 651
    '^'                    shift, and go to state 652
    '&'                    shift, and go to state 653
    '<'                    shift, and go to state 654
    '>'                    shift, and go to state 655
    '-'                    shift, and go to state 656
    '+'                    shift, and go to state 657
    '*'                    shift, and go to state 658
    '/'                    shift, and go to state 659
    '%'                    shift, and go to state 660
    '.'                    shift, and go to state 661
    '['                    shift, and go to state 662
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1569


State 1558

  333 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 333 (tuple_expansion_variable_declaration)


State 1559

  548 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON .

    $default  reduce using rule 548 (struct_variable_declaration_list)


State 1560

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1570


State 1561

  811 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  812                   | make_struct_fields . ',' "name" ":=" expr
  815                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  821 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1180
    ')'  shift, and go to state 1571


State 1562

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'
  872 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662

    $default  reduce using rule 872 (array_comprehension_where)


State 1563

  876 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 876 (array_comprehension)


State 1564

   71 expression_else: "else" optional_emit_semis expression_else_block .

    $default  reduce using rule 71 (expression_else)


State 1565

   93 expression_else_block: $@6 . '{' expressions $@7 '}' expression_block_finally

    '{'  shift, and go to state 1572


State 1566

   95 expression_else_block: $@8 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1573
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1495
    expression_continue      go to state 1496
    expression_return        go to state 1497
    expression_yield         go to state 1498
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1499
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1567

   72 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_else_block expression_else
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  415           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  416           | expr . '.' basic_type_declaration '(' ')'
  417           | expr . '.' basic_type_declaration '(' expr_list ')'
  420           | expr . '.' $@32 error $@33
  442 expr: expr . "<<" expr
  443     | expr . ">>" expr
  444     | expr . "<<<" expr
  445     | expr . ">>>" expr
  446     | expr . '+' expr
  447     | expr . '-' expr
  448     | expr . '*' expr
  449     | expr . '/' expr
  450     | expr . '%' expr
  451     | expr . '<' expr
  452     | expr . '>' expr
  453     | expr . "==" expr
  454     | expr . "!=" expr
  455     | expr . "<=" expr
  456     | expr . ">=" expr
  457     | expr . '&' expr
  458     | expr . '|' expr
  459     | expr . '^' expr
  460     | expr . "&&" expr
  461     | expr . "||" expr
  462     | expr . "^^" expr
  463     | expr . ".." expr
  466     | expr . "++"
  467     | expr . "--"
  470     | expr . '[' expr ']'
  471     | expr . '.' '[' expr ']'
  472     | expr . "?[" expr ']'
  473     | expr . '.' "?[" expr ']'
  474     | expr . "?." "name"
  475     | expr . '.' "?." "name"
  482     | expr . "??" expr
  483     | expr . '?' expr ':' expr
  486     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  487     | expr . "is" basic_type_declaration
  488     | expr . "is" "name"
  489     | expr . "as" "name"
  492     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  493     | expr . "as" basic_type_declaration
  494     | expr . '?' "as" "name"
  497     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  498     | expr . '?' "as" basic_type_declaration
  506     | expr . "<|" expr
  507     | expr . "|>" expr
  508     | expr . "|>" basic_type_declaration
  522 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr . "?." "$f" '(' expr ')'
  524          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr . "as" "$f" '(' expr ')'
  527          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 628
    "as"   shift, and go to state 629
    "<<"   shift, and go to state 630
    ">>"   shift, and go to state 631
    "++"   shift, and go to state 632
    "--"   shift, and go to state 633
    "<="   shift, and go to state 634
    ">="   shift, and go to state 635
    "=="   shift, and go to state 636
    "!="   shift, and go to state 637
    "->"   shift, and go to state 638
    "??"   shift, and go to state 639
    "?."   shift, and go to state 640
    "?["   shift, and go to state 641
    "<|"   shift, and go to state 642
    "|>"   shift, and go to state 643
    "<<<"  shift, and go to state 644
    ">>>"  shift, and go to state 645
    "&&"   shift, and go to state 646
    "||"   shift, and go to state 647
    "^^"   shift, and go to state 648
    ".."   shift, and go to state 649
    '?'    shift, and go to state 650
    '|'    shift, and go to state 651
    '^'    shift, and go to state 652
    '&'    shift, and go to state 653
    '<'    shift, and go to state 654
    '>'    shift, and go to state 655
    '-'    shift, and go to state 656
    '+'    shift, and go to state 657
    '*'    shift, and go to state 658
    '/'    shift, and go to state 659
    '%'    shift, and go to state 660
    '.'    shift, and go to state 661
    '['    shift, and go to state 662
    ')'    shift, and go to state 1574


State 1568

   88 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1575


State 1569

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 332 (tuple_expansion_variable_declaration)


State 1570

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 268 ($@16)

    expression_block  go to state 1576
    $@16              go to state 397


State 1571

  821 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 821 (make_struct_dim_list)


State 1572

   93 expression_else_block: $@6 '{' . expressions $@7 '}' expression_block_finally

    $default  reduce using rule 291 (expressions)

    expressions  go to state 1577


State 1573

   95 expression_else_block: $@8 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1578


State 1574

   72 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_else_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1579


State 1575

   88 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1237

    $default  reduce using rule 264 (expression_block_finally)

    expression_block_finally  go to state 1580


State 1576

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 550 (struct_variable_declaration_list)


State 1577

   93 expression_else_block: $@6 '{' expressions . $@7 '}' expression_block_finally
  292 expressions: expressions . expression_any
  293            | expressions . error

    error                             shift, and go to state 883
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 884
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 885
    "try"                             shift, and go to state 886
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 887
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 888
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 889
    "pass"                            shift, and go to state 890
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 891
    "goto"                            shift, and go to state 892
    "unsafe"                          shift, and go to state 893
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 894
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 92 ($@7)

    SEMICOLON                         go to state 895
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 896
    expression_goto                   go to state 897
    expression_if_one_liner           go to state 898
    $@7                               go to state 1581
    expression_if_then_else           go to state 899
    $@9                               go to state 900
    expression_if_then_else_oneliner  go to state 901
    expression_for_loop               go to state 902
    $@10                              go to state 903
    expression_unsafe                 go to state 904
    expression_while_loop             go to state 905
    $@11                              go to state 906
    expression_with                   go to state 907
    $@12                              go to state 908
    expression_with_alias             go to state 909
    expr_call_pipe                    go to state 471
    expression_any                    go to state 911
    name_in_namespace                 go to state 472
    expression_delete                 go to state 912
    expr_new                          go to state 473
    expression_break                  go to state 913
    expression_continue               go to state 914
    expression_return                 go to state 915
    expression_yield                  go to state 916
    expression_try_catch              go to state 917
    kwd_let                           go to state 918
    expression_let                    go to state 919
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 920
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 921
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1578

   95 expression_else_block: $@8 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 95 (expression_else_block)


State 1579

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_else_block expression_else

    '{'       reduce using rule 91 ($@6)
    '{'       [reduce using rule 94 ($@8)]
    $default  reduce using rule 94 ($@8)

    expression_else_block  go to state 1582
    $@6                    go to state 1565
    $@8                    go to state 1566


State 1580

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 88 (expression_if_block)


State 1581

   93 expression_else_block: $@6 '{' expressions $@7 . '}' expression_block_finally

    '}'  shift, and go to state 1583


State 1582

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block . expression_else

    "else"         shift, and go to state 1531
    "elif"         shift, and go to state 1532
    "static_elif"  shift, and go to state 1533

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1534
    expression_else      go to state 1584


State 1583

   93 expression_else_block: $@6 '{' expressions $@7 '}' . expression_block_finally

    "finally"  shift, and go to state 1237

    $default  reduce using rule 264 (expression_block_finally)

    expression_block_finally  go to state 1585


State 1584

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else .

    $default  reduce using rule 72 (expression_else)


State 1585

   93 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally .

    $default  reduce using rule 93 (expression_else_block)
